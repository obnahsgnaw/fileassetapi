// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
// doc/tcp.html
// doc/wss.html
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6b\x1c\x37\x14\x7e\xf7\xaf\x38\x4c\xf3\x68\x67\x6d\xc7\x2d\x8d\x9f\xea\xd4\x7d\x30\x2d\xb8\xe4\x52\x0a\xc1\x0d\xb2\xe6\xec\xae\x92\x19\x69\x22\x69\x1c\xbb\xc1\x10\x53\x5a\x9a\x80\x49\x20\x6e\x69\x9b\x50\x30\x84\x36\x94\x12\xe7\xa1\xf4\x9e\xe6\xcf\x64\x77\xed\x7f\x51\xa4\x9d\xd9\xd9\xd1\xce\xae\xf7\xe2\x80\x4b\xe7\xc9\xde\xd1\xd1\x39\xdf\xb9\x8c\xf4\xcd\x91\x6e\x4f\x01\x78\xea\x16\xa9\xd5\x50\x7a\x8b\xe0\xcd\x9f\x9d\xf5\xa6\xcd\x33\xc6\xab\xc2\x5b\x04\x33\x0e\xe0\x69\xa6\x03\x34\xe3\x17\x08\xbd\x81\xdc\x87\xa5\x0f\x57\xac\x1c\x80\xe7\xa3\xa2\x92\x45\x9a\x09\x6e\x24\x2e\xd7\x11\xaa\x2c\x40\x20\x4a\xa1\x86\xf5\x64\x02\x89\x58\x3a\x61\x03\xa5\x4a\x84\xe7\x12\x73\x00\x1e\x15\x5c\x13\xaa\x3b\x36\x01\x3c\x4e\x42\x6b\x14\xab\xc1\x56\x22\x06\xe0\xc5\x32\x30\x0f\xeb\x5a\x47\x6a\xb1\x52\x31\x83\x33\x14\x35\x3d\x4b\x45\x98\x49\x61\x48\x98\x95\xe3\x82\xe3\x3b\xb8\x49\xc2\x28\x40\x2b\x62\x25\xb6\xa7\x00\xb6\xad\xa3\x9a\xd4\x94\xb7\x08\x57\xed\xe3\x1e\xd3\x2b\xdc\xc7\xcd\x4b\x28\x37\x18\xc5\x4c\xb9\xe3\xf2\xd1\x5f\xdf\x1c\x3e\x7b\x92\x28\x9e\x2e\x56\xb4\x6a\xa5\xd5\xb1\xaa\xee\xdc\x3d\xda\xff\xa3\xf5\x6c\xbf\xf5\xe0\x8b\xc1\x0a\xdf\x15\xbc\xca\x6a\xc7\xe9\x6b\xdc\x7b\xda\xbc\xb3\x73\xf4\xf9\x6e\xeb\xc5\xb3\xcc\xf3\x35\xeb\xb9\xa2\x75\x0c\x31\x73\xde\x86\x34\x4d\x87\x0d\xaf\xd7\x91\xa5\x82\xab\x38\x27\x4c\xa2\x28\x60\x94\x18\x43\x95\xeb\x4a\xf0\x74\x62\xf7\x73\x41\x35\xea\x19\xa5\x25\x92\x30\xd3\x15\x49\xe1\xc7\xf4\x84\x74\x11\x5d\x57\x59\x9d\x56\x36\xe6\x2a\xd4\x06\xa6\xbb\x8e\x6a\xd8\x5d\x56\xc6\xf3\x38\x0c\x89\xdc\xb2\x01\xb7\xa1\x79\xf5\x72\xbf\xb9\x73\xd0\x89\x62\x6f\x1c\x0f\x5f\xee\x35\x1e\x7d\xdf\x7c\xbc\xdb\xb8\xb7\xdf\x78\xf1\xb0\x71\x77\xb7\xdf\x44\x11\xa1\xb4\x88\x57\xfc\x9e\x34\x5d\x5b\x46\x6d\xca\xb2\x4b\x5c\xa2\x8a\x04\x57\xa8\x72\x08\x01\xbc\xf9\xd9\x59\xe7\x51\x2f\xaa\x25\x50\x31\xa5\xa8\x54\x35\x0e\x20\xd5\x74\xb6\x4b\x7d\xdb\x5b\x93\x67\xd2\xa3\x0c\xc0\x3b\x23\xb1\x6a\xf4\xbc\x51\xf1\xb1\xca\x38\xb3\x25\x5a\xd9\x98\x6b\x83\xf6\x72\xe2\xdb\x5d\xbf\xb6\xa7\xf3\x48\xe7\x8e\x45\x7a\x11\x75\x2c\x39\xfa\x70\xab\x8e\x1c\x74\x1d\x0d\x5c\x11\x4b\x8a\x40\x25\x12\x8d\x7e\xea\xca\x00\xf8\x83\x20\x2c\x4c\x02\xc1\xc7\x00\x27\x85\xb0\x30\x44\xbe\x8a\x20\xdc\x8c\x51\x69\xf0\x89\x26\xb0\x41\x02\xe6\x13\x8d\x50\x25\x2c\x40\xff\x04\x12\xf9\x9e\x94\x42\xaa\xd5\xf5\xeb\x48\xf5\xb0\xe9\x5c\x18\x2b\x9d\xb1\x42\x09\xbe\x40\x05\x5c\x68\x20\xb1\xae\x23\xd7\xc9\xbb\x3b\x66\x3c\xcf\x4d\x0c\xa3\x4e\x36\x10\x22\x94\x21\x53\x66\xc7\x01\x2d\x80\xd8\x0c\xe7\xd2\x3f\x26\xbc\x89\x2a\xce\xa0\xab\x8a\x98\x0f\x4a\xf2\x20\xe3\xe7\x47\x34\x9e\xd6\x59\x1c\xd9\x02\x33\x6b\x64\xc0\xa8\x1e\xcf\xfa\xfc\xa8\x99\xe9\xb8\x1d\x08\x7a\x63\x60\x61\x0f\xb2\x3a\xae\xcf\x5a\x08\x08\x09\xdf\x02\xc6\x81\x40\xcc\x99\x06\xcd\xc2\xf1\xd2\xfe\xe6\x10\x6f\xb9\x59\xec\x51\x02\x9a\x77\x6f\x2c\x23\x3e\x56\x49\x1c\xe8\x63\x0d\x5d\xe1\xb8\x19\x21\xd5\xc7\x9a\x3a\xe1\xe5\x62\xaa\x00\x76\x9e\x47\x25\xcf\xf2\x1c\xa5\x33\xb2\xd6\x35\x4d\x21\x8d\x25\xd3\x5b\xce\x54\xc7\xf1\xa5\x28\xb2\xdb\xe9\xd5\x35\xc7\xc7\x0b\x48\x24\xca\xcb\xe2\x06\x72\x3b\x5c\x08\x33\x7d\xda\x81\xeb\x45\x71\x7f\x46\xd0\x7c\xf4\x4b\xf3\xeb\xe7\x09\x65\xea\xcf\x08\xda\x62\x13\x33\x82\x2b\xf6\x85\x2c\x19\x41\xc9\x08\x4a\x46\x50\x32\x82\x92\x11\x8c\x64\xb5\x64\x04\xa7\x99\x11\x44\x44\x92\x10\x35\x4a\x97\x17\x38\x3e\xa4\x1d\x0d\x1f\xd7\xe3\x9a\x0b\xd9\xfd\x0e\x7f\xfe\xd9\xe1\xc1\x57\xcd\xa7\xfb\x8d\xbf\xef\xbb\xa2\xcc\x4a\xdc\x8c\x51\x6e\xb9\x43\x26\xf1\x4c\xa2\xd9\x7f\xab\x24\x50\xe8\x0c\xeb\xad\xc8\x22\x58\x17\x22\x40\xc2\xbd\x62\x16\xf1\x1f\x23\x3b\xf6\x6f\x92\x0f\xdb\x18\x11\xed\x16\xd4\xd0\x9d\x11\xdb\x8a\x1a\x40\x64\xf2\x2d\xad\x6b\xed\x9f\x1f\x30\xa5\x4f\x3d\x9b\xc9\xa0\x5e\x4c\x94\x96\xcc\x66\x14\x08\x25\xb3\x29\x99\x4d\xc9\x6c\x4a\x66\xf3\x7f\x65\x36\x45\xdb\xbf\x73\xc0\x73\x22\xfb\xff\xb1\x3c\x64\x73\x46\x48\xdf\x9e\xdc\xcd\xf5\xdd\xf6\xb3\xe3\xb6\xa1\xb6\xfd\xd6\xdd\x2f\x9b\x8f\x7f\x6e\xdc\xff\x6d\xa4\xd3\x90\xc2\x59\x0e\x5f\xe8\x3e\x4b\xbb\xf6\x51\x82\xea\xb4\x53\x85\x04\x67\xc9\x13\x4a\x9e\x50\xf2\x84\x92\x27\xf4\xb5\x5e\xf2\x84\x92\x27\xb8\xb0\x0b\x79\x42\xee\x46\xc9\x6b\x64\x09\x79\x3e\xd0\xb9\xee\xd2\xe5\x5c\x76\x6d\xa2\xd3\xdf\xef\xe2\x08\x69\x4f\x44\xb4\x3d\xcf\x8e\x4e\xa4\xd9\xd6\x35\x73\xb6\xe9\xa4\x7b\xe3\xec\xdc\x6e\x63\xc5\x49\x69\xff\xd6\xce\x94\xeb\x51\x76\x76\xd3\xb9\x8b\x74\x79\x75\x79\x15\xde\x06\x5a\x27\xbc\x86\x60\x16\x32\x88\xa4\x30\x68\xa1\x7d\x07\x04\x08\xf7\xcd\xbf\x5a\x8a\x20\x40\x99\xbb\x4f\xe3\x25\x99\x4d\x12\x3b\x81\xe3\x54\xf8\xd8\xcf\x6f\xc6\x35\xd6\x50\xe6\xfd\xae\x0a\x19\x12\x9d\x0c\xbf\xb5\x30\x30\x28\x29\xef\x68\x97\x33\x58\x5b\x39\xf9\x88\x68\x8d\xd2\xca\x7e\x72\x75\x76\xe6\xfc\xda\xed\xb9\xe9\xed\x33\x5e\x61\x39\x86\xa8\x14\xa9\xf5\x05\xab\xb4\x64\xbc\x36\x0a\x9c\x54\xe1\x30\xd9\x3a\xda\xfb\xf6\xf0\xe0\xa0\x30\x07\xaa\x4c\xc2\x89\x26\xa1\xcb\x9a\x15\xe9\x21\xd4\xa9\x31\x22\x25\xc9\xf7\x4a\x3d\xa6\x31\x74\xe5\xfb\xe7\x23\x19\x1d\xb8\x76\xf6\x2e\x9d\xee\xca\x3e\xc0\x3b\x95\x47\xe7\x54\xd3\xd1\xc3\x7f\x46\xa8\x3d\x68\x3c\xf9\xee\xd5\xef\x3f\x15\x17\xe2\x0a\xd7\xab\x29\x86\xb1\xab\x90\xf9\xe3\xd7\xe0\xb9\xf9\x81\x49\x5f\x59\x2e\x4e\x70\xd2\x3c\x1f\xb7\x96\x1a\x0f\x76\x5b\x3f\x3e\x1f\x2a\x88\xcc\x07\x63\x0c\x1a\x0f\x77\x1b\x7f\xee\xb9\xf1\x2b\x68\xa9\x4e\x10\x48\xe4\x64\x3d\xc0\x4b\x9a\xe8\xbe\xce\xbd\xee\xda\xcd\x0a\x62\xd8\xca\x6d\x3c\x38\x68\xfd\xb0\xd3\xda\x7b\xda\xba\xf7\x6b\xf3\xce\x4e\x41\x50\x9d\x98\xb9\xdf\x96\x13\x04\xac\xf7\x23\x7f\xd4\x4a\xc8\xbe\xe0\xfb\xe1\xee\x70\x88\x94\xa0\x2c\x17\x71\x89\x94\x97\xf4\xb8\x42\x22\xf6\x3e\x76\xdd\xe3\x4d\x8f\x7d\x3e\x9e\x59\x8a\xa2\x99\x15\x3f\x1b\x69\x1f\xe4\xd4\x91\xf8\xee\xa6\x9d\x3f\x01\x19\xda\xc4\x52\xac\xeb\x42\xb2\x4f\xed\x97\xd7\x40\x3b\xc6\xc7\xa9\xed\xa9\x7f\x03\x00\x00\xff\xff\xe1\x34\x24\xb2\x17\x2d\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 11543, mode: os.FileMode(420), modTime: time.Unix(1695092161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1695092161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docTcpHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x7d\x8b\x1b\xc9\xd1\xff\x7f\x3f\x45\x3f\x32\x06\x9b\xb3\x34\x92\x56\xbb\xde\x47\x9e\x55\xf0\xad\xcf\xc9\x86\xd8\x31\xde\xf5\x41\x08\x89\x69\xcd\xd4\x68\x1a\xf7\x74\xcb\xd3\x3d\xf2\x2a\x21\x70\x17\xf2\x6a\xe2\x5c\xc0\x97\x3b\x2e\x1c\x79\x23\x81\x23\x07\x71\x48\x82\x0f\xf2\xfa\x5d\x42\xb4\xeb\xfb\x16\xa1\x67\x46\xf3\xda\x33\x5a\x69\x15\xfb\xe2\x3b\x0c\xd6\x4c\x57\x77\x55\x75\x55\xfd\xaa\xaa\x5b\x5a\xf3\xff\xae\x7d\x79\xef\xf0\x2b\xb7\x5e\x43\xae\xf4\xe8\x60\x63\xc3\x8c\x3e\x11\x32\x5d\xc0\xb6\x7a\x40\xc8\x94\x44\x52\x18\xdc\xf2\xb9\xe4\x16\xa7\xe8\x1a\xb7\x02\x0f\x98\xc4\x92\x70\x66\x1a\x11\x35\x9a\xe9\x81\xc4\xc8\x72\xb1\x2f\x40\xee\x36\xee\x1c\x5e\x6f\xee\x34\x62\x12\x25\xec\x1e\xf2\x81\xee\x36\x84\x9c\x52\x10\x2e\x80\x6c\x20\x39\x1d\xc3\x6e\x43\xc2\x91\x34\x2c\x21\x1a\xc8\xf5\xc1\xd9\x6d\xb8\x52\x8e\x45\xdf\x30\x1c\xce\xa4\x68\x8d\x38\x1f\x51\xc0\x63\x22\x5a\x16\xf7\xd4\xbc\xcf\x39\xd8\x23\x74\xba\x7b\x67\x18\x30\x19\xf4\x7b\xed\xf6\xa5\xcb\xed\xf6\xa5\x5e\xbb\x4d\x24\xa6\xc4\x6a\x18\xb1\xd0\x50\x54\xf4\x8c\xd0\x90\xdb\x53\xf4\xcd\xf8\x05\xa1\x07\xc4\x96\x6e\x1f\x6d\xb7\xc1\xbb\x92\x0c\x7a\xd8\x1f\x11\xd6\x47\x1d\xf0\x10\x0e\x24\x4f\x29\x16\xa7\xdc\xef\xa3\x73\xdd\x6e\x37\x1d\x54\x0a\x36\x23\x65\xfa\xa8\x11\xa9\xd3\xb8\x84\x04\x66\xa2\x29\xc0\x27\x4e\x3a\x75\x8c\x6d\x9b\xb0\x51\x73\xc8\xa5\xe4\x5e\x1f\xf5\x52\xb1\xdf\xda\x88\x1f\xdc\x4e\x46\xbf\x90\xf7\x03\x20\x23\x57\xf6\x11\xe3\xbe\x87\x69\xca\x6d\xc8\x7d\x1b\xfc\x84\x59\x67\x7c\x84\x04\xa7\xc4\x46\xe7\x30\xc6\xd5\x42\xdb\xad\x2d\x38\x2a\x8b\xed\x66\xc4\xae\x83\x73\xc6\x8e\xad\x2d\xf0\x50\xbb\x2c\x72\xf3\x85\xec\x14\x67\xa4\xaa\xa0\x6b\xda\x60\x71\x3f\x0c\x64\x25\x99\x41\xd9\xdf\x5b\xdb\x97\xa1\xbb\x55\xe2\x24\xf1\x90\x42\x39\x9a\x3a\xed\xf6\xf9\x42\x78\x08\xf2\x0d\xe8\xa3\x9d\xec\x78\xbc\x27\x8b\x53\x8a\xc7\x02\xfa\x68\xfe\x54\x16\xa3\x60\x58\x65\xaa\xcb\xed\x76\x86\x27\xb6\xee\x8d\x7c\x1e\x30\xbb\x39\x57\xdd\xb6\xd4\xbf\x32\xcf\x10\x08\xd2\xef\x33\xe9\x36\x2d\x97\x50\xfb\x02\x4c\x80\x5d\xcc\x06\x41\x99\x99\x33\x54\xff\xca\xcc\xec\x52\xec\xe4\x9c\x64\x59\x56\xc9\x49\xb1\x77\x50\x57\xe3\x21\x69\xa3\x71\xd1\x49\x84\xd9\xc0\x64\x08\xca\x72\x84\x95\x63\x4b\xb1\xc8\xec\xad\x73\xb1\x8a\x5f\xfb\x0a\x42\xc5\xc5\xf3\x81\x96\x43\x80\xda\xcd\xc8\xcd\xd2\x2e\xf0\x4b\xa6\x65\x1c\x9f\xc5\xf3\x22\x1e\xdd\x35\xf0\xd8\xd4\xf2\xd8\x5e\x86\x45\x4f\xcb\x22\x9b\xf7\xca\x76\x81\x23\x09\x4c\x10\xce\xce\x68\x9b\x5a\x3e\x4b\xd8\xa7\x96\x8f\xde\x46\xcb\xf3\xd1\x1b\x6a\x6b\x59\x36\x5b\xab\xd8\x9b\x05\xde\x59\x4d\x5d\xc1\x62\x19\x2b\x57\xb0\xd0\x1b\xb8\x7e\x47\xc2\xc2\x14\xfb\xcd\x09\xa6\x01\x34\x55\x03\x20\xe6\x9c\xfd\x0c\x52\xdd\x38\xc9\x6d\x6a\xea\xe4\x9c\xd5\x39\xc9\xad\xa6\xc5\x99\xc4\x84\x81\x8f\x02\x9a\x59\x4f\x89\x90\xcd\xb0\xfe\x87\x32\x8a\xe9\x7d\x5e\x2f\x28\x38\xc5\xcc\x42\x09\x83\xe6\x5c\x7c\x27\x97\xb8\x35\x49\x27\xd5\x04\x0d\x10\x25\x68\x90\x2b\x32\xb9\x7c\x3d\xe4\xd4\xae\x36\x8b\x43\xa8\x12\x8b\x95\x5a\x8b\x0a\x8b\x4d\xc4\x98\xe2\x69\x3f\x2a\x43\x4b\x17\xcb\xf9\x36\x7a\xaa\x36\x97\x6b\xb4\x4e\x21\x4d\x8f\x50\x34\x69\x5e\xa9\xa6\x05\x94\xd6\xf3\x2c\x55\x63\x4c\xc9\x88\xf5\x91\xaf\xcc\x75\x4a\xbe\x45\x2b\x0e\xb1\x3d\xd2\xd5\xe5\xd6\x76\xd6\xc5\x89\x77\xf3\xc3\x89\x24\xc2\xc2\x20\x18\x52\x6e\xdd\xbb\xb2\x51\x11\x19\xf9\xb5\xd9\x0d\x58\xc0\x24\xf8\x57\x16\x47\x41\xae\x45\xd8\x56\x1e\x2e\xf5\x1f\x3b\xff\x3f\xc4\xbd\x9d\xfa\x3a\xef\x38\x6d\x6b\x27\xb3\x36\x09\xd3\xb0\xcc\xaa\x5e\x36\x7a\x6a\xe6\xe2\x5c\x53\xad\xf3\x45\x3e\x89\x27\x1f\xdb\x24\x10\x0a\x26\x47\x79\x8f\x9a\x46\xdc\x61\x6f\x24\x3e\x58\xaa\xd1\x4f\x67\xb4\xd4\x68\xd8\xb6\x9b\x46\x74\xf4\x50\x8f\xaa\x53\x89\x99\x9b\x6e\x07\x11\x7b\xb7\x11\x1e\x37\x1a\x95\xa7\x11\xb7\x93\xcc\xef\x0e\x0e\xc3\xb4\xc2\x1d\xb4\xc7\x99\x04\x26\x85\x69\xb8\xdd\x39\xdd\x26\x93\x88\x61\x36\x87\x34\xe6\x87\x05\x33\xa0\x73\x6a\x32\x96\x49\x74\xb9\x47\x93\x92\x41\xe6\x15\x21\x13\xc7\xfb\x3b\xa7\xe2\x1d\x0b\x01\xf2\xae\xb4\xc6\x77\xf1\x98\x9c\xef\x3a\x36\x78\xfc\x7c\xd7\x99\x74\xce\x77\x1d\x6c\x29\xb5\x89\xdd\x1a\xab\xfd\x34\x06\xa5\xf9\x86\x9a\x6d\x4c\x3a\x46\x7e\xa6\x69\xe0\x82\xc8\x80\xe6\x07\x72\x1a\x6a\x5e\x35\x6a\x2f\x54\xbe\xa5\x94\x69\x4d\x3a\xad\xab\xa1\x32\xfb\x76\x63\x60\x8a\x31\x66\xc8\xa2\x58\x88\xdd\x46\x08\xbe\xc6\xe0\x35\xd3\x50\xa3\x83\xf9\xac\x92\xb2\x51\xe8\x94\xc5\x2f\xf1\x6a\x1a\xf9\x0d\xe7\xd9\xad\xdd\x4f\xe1\xc6\x17\xfa\x28\x9d\xb5\x82\x7f\xce\xe4\x90\x6b\xe0\xf1\x3d\xce\x18\x58\xf2\x36\xdc\x0f\x40\x48\xbd\x6b\x6e\xc4\xae\x29\xcf\x5f\xd5\x49\xeb\x53\x5b\x8c\x39\x13\xb0\x84\xde\xd1\x82\x35\x45\xd7\xba\xf7\xd1\x3a\x90\x58\x06\xa2\x1e\x21\xd5\xeb\x5e\x20\x66\x94\x1d\xd2\x4d\x97\xbb\xb5\xc6\xe0\x20\x1c\x43\xaf\xab\x31\x74\xa8\xc6\x94\xba\x59\x76\xa9\x28\xd3\xb0\xc9\x24\x5b\x20\x92\x8f\x30\x03\xc7\x76\xc9\xf6\x05\x99\x7c\x6b\xba\xdd\x30\x0b\x9f\x36\x2d\x2e\x93\x40\xdd\x6e\x66\x97\x71\x55\x39\xe4\xe3\x8c\xe1\x63\xd5\xe3\x97\xf1\xc0\x34\xc6\x83\x79\x91\xdd\xd8\x28\x5a\xcd\xdd\xd4\xab\xaa\x49\x9a\x69\x62\x74\x37\x33\x9b\x8d\x25\x24\xef\x51\x57\x1c\x5b\x28\xed\xc0\x1b\x39\x1f\xca\xf4\xa2\x2e\x1d\xf3\x07\xa6\xb4\x07\x37\xb1\x07\xa6\x21\xed\xe8\x25\xf0\x86\xe0\x27\xaf\xd7\x40\x58\x3e\x19\xc7\x57\x78\xf6\xc0\x34\xa4\x9f\x8f\x8d\x12\x63\x53\x46\xe5\xb8\x26\xdc\xcc\x3c\x93\xf9\xa0\x1d\x06\xfa\x4d\xce\x22\x75\xb4\x33\xda\xd5\xa4\xd8\x30\xba\x09\x45\xb5\x97\xd3\x28\xcd\x80\xd5\xc2\x3b\xed\xce\x8b\xd4\x4c\x8c\xeb\x54\xeb\xae\x5f\x35\xd3\x28\xb8\xd9\x34\xc2\xa8\x1b\x14\x03\x3f\x0b\x80\xff\x02\xb0\x97\xaf\xb8\x67\x04\x74\xaa\xda\x22\x20\xeb\x8a\xad\xae\xa0\xea\xc0\xad\x6b\x51\xf2\x40\xcf\xdc\xd6\x34\x8a\xb8\x2e\x63\x3d\x45\xfb\x75\xb5\x2e\xc1\xb7\xca\xca\xc9\xcb\x97\xf0\x10\xe8\xa9\xa1\xaf\x05\xbf\x1e\xfe\xba\x2a\xaa\x0b\xeb\x28\x24\x6d\x98\x10\x0b\xee\x32\xae\x8f\xda\x38\x6e\xd3\xca\x23\xfd\x30\x68\xa2\xcf\xa8\xc2\xd4\xac\xab\xa3\x8d\x07\xcf\x7e\xff\x8f\xd9\x6f\xbe\x7f\xf2\xb7\x77\x66\x6f\x7d\x84\xaa\x80\xa1\x83\x46\xa9\x86\x96\xcc\x90\x00\x44\xdf\x75\xd6\xbd\x98\x6e\x6f\xf0\x3a\xa6\xc4\xc6\x12\x6c\x14\x7a\x50\x9d\x51\x7a\x45\xcb\x67\x01\x98\x8e\xea\xa2\xa1\xd6\x01\x69\x88\x54\x4c\x88\x75\x21\x9c\x89\xd3\xdb\x47\x1b\x2d\xcf\x2d\x5e\x34\xc3\xda\x6e\xbb\x42\x7c\x3c\x9f\x92\x38\xcc\x5a\x1e\x61\x77\x29\xb0\x3e\xea\xe8\xba\xad\x53\x73\xc1\x47\x31\x97\x76\xfb\x2c\x7c\xc8\x88\x71\x1f\xee\x82\x37\x96\xd3\x3e\x72\x30\x55\xfd\xee\x52\xec\x8a\x4d\x5f\x3a\xbe\x52\xfc\x6b\x11\x50\x2a\x12\xa5\x85\xa5\xbc\xb7\x6a\xba\x9d\x1f\x12\xb4\x07\x81\x42\xc2\x8d\x30\xff\xec\x9f\x3f\x3f\xfe\xf1\x6f\x4f\x7e\xf6\x9d\xd9\xe3\x47\xb3\xbf\xbc\xfd\xa9\xcf\xc2\x22\x3e\x5f\x9c\x26\x05\xaf\x76\xe2\xa9\x3f\xd5\x9c\x21\x89\x47\x1e\x3c\x79\xf8\xf4\xf8\x8d\x37\x4f\x7e\xf9\xe6\x59\xf2\xf8\x02\x23\xa9\x84\x2c\x89\x57\xd1\xaf\x16\xcd\x14\x7d\x43\x1d\xf5\x21\xc3\xc0\x69\x1d\x12\x0f\x84\xc4\xde\xb8\x31\xa8\x24\x9d\xd5\x14\x7f\x7f\x3c\xfb\xe1\xa3\xe3\xf7\x1f\xcd\x1e\xfe\x6a\xf6\xde\x07\xc7\xef\x3e\xfd\xf8\xdd\x3f\x3f\x8f\xc2\x56\x02\xf2\x5a\x00\x7d\xaa\xd8\x29\xc0\xbb\x10\x0d\x2f\xed\xd9\xe9\x20\xb0\x2c\x10\x55\x05\x79\xe1\xd1\x29\xca\x7f\xc7\x3f\xf8\xc9\xec\xe1\x2f\xd6\x7f\x58\xd9\x67\x13\xd5\x33\x5c\xf5\x47\xe1\x2d\x6c\xcd\x61\xa5\x56\xc9\xd9\x5b\xdf\x3e\xfe\xe9\x1f\x3e\x7e\xfb\xbd\x67\x4f\x9e\xac\x5f\xc9\x9b\x5c\xde\x86\x11\x11\x32\x76\xa2\x76\x52\xfd\x59\x2a\xea\x1c\x8f\xdf\xff\xdd\xf1\x9f\x3e\x98\x7d\xef\x47\xeb\xd7\x71\x8f\x33\x87\x12\xab\xc6\x82\x9b\xf5\x6e\x0e\x8b\xdd\xec\xa3\x3f\x3e\xfb\xf5\x87\xb3\xef\x3e\xfd\xf7\x5f\xdf\x39\xf9\xf0\x49\xe4\xfb\xe7\x78\x0e\x0c\xff\x9f\x1f\xee\x4e\x7b\x75\xe4\x76\xe3\xab\xa2\x1c\x68\xab\xbe\x26\x4c\xaf\xe8\x0b\x28\x9b\x43\x37\x4a\xb6\x28\x57\x7b\x6f\x72\x09\x22\x79\xdb\x7b\xe5\x95\xe4\xf9\x8b\x78\x82\x93\x97\x5b\x53\xe9\xce\x41\x2d\xed\xc1\xe7\x79\xba\xe4\x5c\x3a\xe9\x0b\xb7\x92\xe7\xdb\xc1\x70\x5a\xca\x01\x05\xfc\x17\xb1\x9f\x4b\x0b\x7e\x68\x29\x9b\x07\xba\x46\xc3\x1e\x44\x84\xb2\xf3\xf4\x15\x62\xd1\x8a\x3a\x9a\x43\x39\xd6\x04\x5f\x42\xda\xee\xad\x95\xe7\x75\x1d\x29\x1f\x90\x1a\x3b\x85\x0c\x35\x66\xaa\x11\xb4\xda\x6e\x57\x23\x6d\x6a\x72\xc8\xea\x2c\x57\x33\x11\x61\x72\xb3\xab\x31\x51\x38\xae\x17\x74\x47\x80\x40\x13\xec\x93\xf0\xfb\x55\x0a\x6c\x24\x5d\x04\xcc\xe2\xb6\x3a\x82\xa0\x7d\x06\x8e\x43\x2c\x02\x4c\x22\x87\xfb\x09\x05\x31\x18\x61\x49\x26\x80\x58\x58\x1f\x05\xfa\xd7\x1b\x8f\x11\x71\xd0\x94\x07\x3e\x0a\x1b\x68\x44\x04\xa2\xe4\x1e\xd0\x29\x92\x1c\xb9\x58\xcd\x9d\x2f\x0a\x81\x2d\x2e\xa1\x40\x00\x12\xa1\x76\x88\x30\x21\x01\xdb\x2d\xbd\x9a\x35\x3b\x20\xba\xca\xb3\x88\xb0\x0a\x33\x18\xe9\x4a\x88\x22\xbe\x4a\x46\x2c\xf0\x10\xf7\xd1\x75\x72\xa4\x9e\x2e\x60\x81\x7c\xb8\x1f\x10\x1f\xec\x8b\xab\xb8\x71\xbb\xa7\x77\x63\x15\x12\x3f\x19\x6e\xdc\xee\x2d\x76\x63\xd5\x0e\x28\x67\xa3\xca\x45\x46\x2d\x75\x25\x96\xca\x9b\xc6\xfc\x7a\xa9\xda\xa9\x4b\x3b\x2f\xa8\x02\x61\xb0\x32\x0a\xf5\x6b\xea\xf8\xd5\x85\x71\x8d\x2d\xeb\x58\x06\x9f\x08\x68\x04\x55\xd8\x08\x56\x06\x47\xf5\x76\xd7\x1d\xaa\x75\x3c\x83\x75\x04\xeb\xda\xcc\x2c\xaa\x82\x58\xac\x5e\x4a\x0e\xc8\x88\x81\x8d\x08\x93\x51\xde\x68\xa1\x43\x17\x04\x20\x8f\xfb\x80\x92\xf4\x44\xa7\xd1\x12\x28\xa7\x26\xe9\x62\x86\x7c\x18\x05\xaa\x89\x0c\xf5\x10\x9f\x55\x8b\xc8\x57\x5a\x48\x88\xd5\xeb\xc5\xda\x7d\xb5\xdd\xab\xf1\xd5\xcb\x5e\x12\x1c\x72\x04\xb6\x16\x4e\x31\x45\x2f\xed\x2a\x7d\x80\xa7\x02\x39\xaa\x14\x0f\xa7\x12\x44\x0b\xdd\xc8\xd9\x3f\xb2\x72\x10\xf7\x4f\x4e\x5c\x8e\x11\xf6\x01\x71\x47\x02\x43\x23\x1f\xb0\x04\x3f\x9a\xd7\xfd\x7a\x77\x67\xcd\xa5\xe4\x7f\xb5\x8a\x84\x66\xd7\x62\x26\xa6\xd4\x3a\x24\xfc\x2d\xdf\x22\x8f\xa8\x56\x68\xb1\x47\xb6\xb6\x5f\xa6\xf2\xb3\x7c\xea\xaa\x46\x86\x58\x12\x1a\x9f\x15\x82\xd8\x9a\xfa\x52\xb0\x6c\x5c\x7f\x6a\x73\xf5\x90\x73\xaa\x31\xa0\x1a\x5e\xe6\x8e\xa1\x7a\xbe\xa2\x00\x66\x2b\x12\xd7\x2a\xed\xd0\x0f\x60\x8f\x62\x21\x8c\xeb\x98\x8a\xe8\x71\xf9\xa8\x8b\xbf\xa9\x2f\xc7\x5c\x8d\x73\xae\xa2\x88\x8a\xbc\x40\x48\x84\xa3\xf8\x8b\x7f\x88\x8b\xc2\x3f\x1d\x8c\x3b\x0b\x5b\xa1\xe3\x72\x73\x48\x24\xba\x7a\xb0\xb7\xbf\x1f\xfe\xd4\xba\x22\x3a\xeb\x04\x1e\xd4\xd0\x84\xf4\x8d\x80\x11\x25\x6e\x79\xc6\xab\xd2\x22\x85\xd0\x85\x70\xb3\xcb\x63\x3d\x44\xa9\x2e\x4e\xa7\xf3\xbb\xce\x12\xe9\x06\x9e\x26\x26\xc6\x6c\x8a\xb0\x3f\x24\xd2\xc7\xfe\x14\x09\xb8\x1f\x00\xb3\xc2\x5f\x4b\xd7\xc1\xbf\x16\x6e\x53\x09\x0b\x8c\xac\x27\x7c\xf5\x6b\x4a\xe4\xca\x4c\x17\x1a\x38\x0c\x9b\xe6\xce\xab\xfb\x87\xa7\xb3\x72\xee\xee\x3b\x73\xef\x6d\x1a\xd1\xb0\x69\xc4\x7f\x2e\xfb\x9f\x00\x00\x00\xff\xff\x6e\xf4\x50\xf1\x40\x3b\x00\x00")

func docTcpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_docTcpHtml,
		"doc/tcp.html",
	)
}

func docTcpHtml() (*asset, error) {
	bytes, err := docTcpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/tcp.html", size: 15168, mode: os.FileMode(420), modTime: time.Unix(1695092161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docWssHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xef\x8e\xdb\xb8\x11\xff\xbe\x4f\x31\x55\x10\x20\xc1\xc5\x96\xed\xf5\x3a\x5b\x47\xab\x22\xb7\xb9\xb4\x5b\xe0\xae\x41\xb3\x29\x50\x14\x6d\x40\x8b\x23\x8b\x08\x4d\xfa\x48\xca\x59\xb7\x28\xd0\x77\xe8\x1b\xf6\x49\x0a\x52\xb2\x2c\x59\x94\x36\xf6\x19\xe8\xf5\xee\xb0\x1f\x96\xe2\x90\xbf\x19\xce\x6f\xfe\xd0\xb2\xa3\x5f\xbd\xf9\xc3\xed\xfd\x9f\xdf\x7d\x03\x99\x59\xf1\xf8\xe2\x22\x2a\xfe\x03\x44\x19\x12\x6a\x07\x00\x91\x61\x86\x63\xfc\x4e\x49\x23\x13\xc9\xe1\x8d\x4c\xf2\x15\x0a\x43\x0c\x93\x22\x0a\x0b\x69\xb1\x72\x85\x86\x40\x92\x11\xa5\xd1\xdc\x04\x1f\xee\xdf\x0e\xae\x83\x52\xc4\x99\xf8\x04\x0a\xf9\x4d\xa0\xcd\x96\xa3\xce\x10\x4d\x00\x66\xbb\xc6\x9b\xc0\xe0\x83\x09\x13\xad\x03\xc8\x14\xa6\x37\x41\x66\xcc\x5a\xcf\xc3\x30\x95\xc2\xe8\xe1\x52\xca\x25\x47\xb2\x66\x7a\x98\xc8\x95\x5d\xf7\x9b\x94\xac\x18\xdf\xde\x7c\x58\xe4\xc2\xe4\xf3\xe9\x68\xf4\xe2\xe5\x68\xf4\x62\x3a\x1a\x31\x43\x38\x4b\x82\xb0\x54\xea\x54\x15\x63\x80\x85\xa4\x5b\xf8\x47\xf9\x00\xf0\x99\x51\x93\xcd\x61\x36\xc2\xd5\xab\x6a\x72\x45\xd4\x92\x89\x39\x8c\x71\x05\x24\x37\x72\x2f\x49\x24\x97\x6a\x0e\x4f\x26\x93\xc9\x7e\xd2\x1a\x38\x28\x8c\x99\x43\x50\x98\x13\xbc\x00\x4d\x84\x1e\x68\x54\x2c\xdd\x2f\x5d\x13\x4a\x99\x58\x0e\x16\xd2\x18\xb9\x9a\xc3\x74\xaf\xf6\x9f\x17\xe5\x20\x1b\xd7\xec\x73\xd8\x9f\x91\x2d\x33\x33\x07\x21\xd5\x8a\xf0\x3d\xda\x42\x2a\x8a\xaa\x02\x1b\xaf\x1f\x40\x4b\xce\x28\x3c\x21\x84\x74\x2b\x1d\x0d\xaf\xf0\xa1\xad\x76\x52\x53\x7b\x0e\xe4\x9a\x1f\x87\x57\xb8\x82\x51\x5b\xe5\xe5\xff\xe4\xa4\xa4\xa6\xd5\x06\xdd\x80\x62\x22\x95\x0b\x64\xab\x59\x60\x9b\xef\xab\xd9\x4b\x9c\x5c\xb5\x90\x0c\x59\x70\x6c\x47\xd3\x78\x34\x7a\x7a\x10\x1e\x9a\xfd\x1d\xe7\x70\x5d\x9f\x2f\xcf\x94\x48\xce\xc9\x5a\xe3\x1c\x76\xa3\xb6\x1a\x9b\x86\x5d\xae\x7a\x39\x1a\xd5\x30\x49\xf2\x69\xa9\x64\x2e\xe8\x60\x67\x3a\x4d\xec\x5f\x1b\xd3\x25\x82\x51\x73\x61\xb2\x41\x92\x31\x4e\x9f\xe1\x06\xc5\xf3\x7a\x10\xb4\xc1\xd2\x85\xfd\x6b\x83\xd1\x56\xec\x34\x48\x4a\x92\xa4\x45\x52\xc9\x0e\x4c\x3c\x0c\x19\x0a\xeb\x43\x92\x98\xa0\x28\x8c\x4b\xca\x76\x84\xb5\x63\xcb\x42\xd4\xce\x36\x7e\xde\x85\x37\x7a\x05\x70\xb8\x79\x37\x31\x4c\x19\x72\x3a\x28\x68\x36\xf4\x00\xaf\x5a\x56\x23\xbe\x9e\xcf\x8f\x61\x4c\xce\x80\x71\xe9\xc5\x98\x1d\x03\x31\xf5\x42\xd4\xeb\x5e\xdb\x2f\xf8\x60\x50\x68\x26\xc5\x0f\xf4\x4d\x2f\xce\x11\xfe\xe9\xc5\xf1\xfb\xe8\x78\x1c\xbf\xa3\xae\x8e\x85\xb9\x3a\xc5\xdf\x22\x5f\xfd\x50\x57\x77\x40\x1c\xe3\xe5\x0e\x08\xbf\x83\xfb\x4f\xa4\x13\xc2\x89\x1a\x6c\x08\xcf\x71\x60\x2f\x00\x7a\x87\xac\x6a\x99\x9a\x95\x45\xee\xd2\xd3\x27\x77\x50\x4f\x8c\x4c\x06\x89\x14\x86\x30\x81\x0a\x72\x5e\xdb\xcf\x99\x36\x03\xd7\xff\x9d\x8e\xc3\xf2\xbe\xeb\x17\x1c\xd3\xc3\xca\xc2\x99\xc0\xc1\x4e\xfd\xb8\x51\xb8\x3d\x45\x67\x6f\x09\xc4\xc0\x19\xc4\x8d\x26\xd3\xa8\xd7\x0b\xc9\x69\xb7\x5b\x52\xc6\xad\x5a\x62\xcd\x7a\xac\xb1\x50\xa6\xd7\x9c\x6c\xe7\x45\x1b\x3a\xba\x59\xee\x8e\x31\xb5\xbd\xb9\xdd\xa3\x7d\x06\x79\xee\x08\x87\x2e\x6d\x1a\x35\x48\x90\xf3\x7e\xcc\x56\x37\x26\x9c\x2d\xc5\x1c\x94\x75\xd7\x17\xe2\x1e\x7a\x71\x41\xe8\xd2\xd7\x97\x87\xb3\x3a\xc5\x15\xbb\xcd\xe9\x4a\x13\x13\x2e\x08\x16\x5c\x26\x9f\x5e\x5d\x74\x44\x46\x73\x6f\xfd\x00\x09\x0a\x83\xea\xd5\xe3\x51\xd0\xb8\x22\xcc\x2c\xc3\xad\xfb\xc7\xf5\xaf\x17\x64\x7a\xdd\xdf\xe7\xd3\x74\x94\x5c\xd7\xf6\x56\x61\xea\xda\xac\xbd\xcb\x16\xa3\x41\x23\xce\x3d\xdd\xba\xd9\xe4\xab\x78\x52\x84\xb2\x5c\xdb\x34\x79\x68\x32\x1a\x85\xe5\x0d\xfb\xa2\xe2\xe0\xa8\x8b\xfe\x7e\xc5\xd0\xce\xba\x6b\x7b\x14\x16\x1f\x3d\xec\xd0\xde\x54\x4a\xf0\x28\x1b\x03\xa3\x37\x81\xfb\xb8\x11\x74\x7e\x1a\xc9\xc6\xd5\xfa\x49\x7c\xef\xca\x8a\x4c\xe1\x56\x0a\x83\xc2\xe8\x28\xcc\x26\x3b\x39\x65\x9b\x02\xb0\x5e\x43\x82\xdd\x87\x85\x28\xe7\x3b\x69\x35\x57\x2b\x74\x8d\x61\xc4\x59\x5c\x7b\x04\x88\x48\x79\xbe\x27\x36\xde\x89\xd6\x68\x3e\x7e\xd6\xfa\x23\x59\xb3\xa7\x93\x94\xe2\x4a\x3e\x9d\xa4\x9b\xf1\xd3\x49\x4a\x12\x6b\x36\xa3\xc3\xb5\x3d\x4f\x10\xb7\xd6\x87\x76\x75\xb8\x19\x87\xcd\x95\x51\x48\x0e\x54\xe6\xbc\x39\xd1\xb0\xd0\xf3\xe8\x31\xfb\x51\xe3\x87\xd6\x98\xe1\x66\x3c\x7c\xed\x8c\xb9\xa3\x41\x1c\xe9\x35\x11\x90\x70\xa2\xf5\x4d\xe0\x92\x2f\x88\xbf\x89\x42\x3b\x1b\xef\x56\xb5\x8c\x2d\x42\xa7\xad\xfe\x88\xc7\x28\x6c\x1e\xb8\x09\x77\x51\x3f\xe3\xfe\x40\xed\xce\x13\xc4\xef\xdd\x1c\xfc\xc9\xce\xc1\xbd\x9d\xb3\xe6\xd6\xe1\xf6\xaa\xa2\x90\xb2\x4d\x3d\xd8\xab\x7f\x2e\x9a\x4a\x2f\xd4\x6b\x5c\x2d\x76\xa2\x6c\xe2\x22\xea\x4b\x29\x3e\x26\x18\xb2\x49\xed\x94\x65\x86\xdc\xcb\x75\xcd\xf1\xa5\xe9\xe5\xc3\x3a\x8e\xc2\x75\xbc\x2b\x18\x17\x17\x87\x5e\xcb\x2e\xfd\xa6\x7a\x02\x60\x4f\x72\x76\x59\x3b\x6c\xa9\xa1\x7a\x2e\x3a\x7c\xe9\xa1\xfd\x6d\x22\x68\x70\x68\xf6\x2f\x1d\xf6\x73\x2a\x8e\x0c\x8d\xbf\x23\x2b\x8c\x42\x43\x8b\x87\x7c\xb5\x40\x55\x3d\xbe\x41\x9d\x28\xb6\x2e\x5f\x47\xd0\x38\x0a\x8d\x6a\xc6\x46\x0b\x38\x32\x45\x69\xe9\x09\xb7\xa8\x09\xb2\x9b\xa4\xf1\x07\xb2\xf9\xf8\x9d\x14\x85\x39\xde\x15\xa3\x6e\x51\xe9\x18\xdf\x82\x43\xb3\x9b\x35\x26\x3c\xb0\x38\x0a\x9d\x03\xe3\x43\x0e\xeb\x5c\x56\x95\xd0\xb1\xf9\xa5\xd1\x6f\x4b\x24\xb4\x38\xeb\xba\xb5\xed\x2b\xe6\x81\x93\x77\xcc\x15\x31\xea\xc0\xf7\x04\x4a\x63\x35\x95\x4f\xb7\x5f\x7d\x55\x8d\x7f\x4f\x36\xa4\x7a\x78\xb7\x35\xd9\x8e\x53\x43\xe3\xdf\xca\xfd\x96\x27\xfb\x45\xbf\x7b\x57\x8d\xff\x98\x2f\xb6\xad\x10\x38\xa0\xff\x90\xfa\x46\x54\x28\xe7\x29\x2a\xf3\xc3\xd8\x2c\xd8\x2b\x04\x6d\xf2\xa2\x42\xa5\x67\xb6\x6f\x47\x9f\x2c\xe5\x92\x98\x1e\xd1\x6c\x7a\x56\xcc\xb7\x3e\x51\x33\x20\x3d\x7e\x72\x80\x1e\x37\xf5\x28\x3a\xed\xb4\xa7\x89\x2e\x27\xe7\x84\x3c\xcd\x45\x4c\x98\xcb\x89\xc7\x45\x6e\xde\xaf\xe8\x83\x46\x0d\x1b\xa2\x98\xbb\xee\x72\x14\x4b\x93\x01\x8a\x44\xda\x86\x32\x84\x3b\x81\x69\xca\x12\x86\xc2\x40\x2a\x55\x25\x01\x81\x4b\x62\xd8\x06\x41\xb8\xf2\xa8\xe1\x3f\xff\xfa\x37\xb0\x14\xb6\x32\x57\xe0\xde\x01\x00\xd3\xc0\xd9\x27\xe4\x5b\x30\x12\x32\x62\xd7\xee\x36\xb9\xc4\xd6\x2f\x20\xd7\x08\xda\x59\x07\x4c\x68\x83\x84\x0e\xfd\x66\xf6\x9c\x80\x89\x0e\x1f\xf6\x09\x4e\x01\xc3\x65\xd9\x06\x5a\xc2\xaf\xd9\x52\xe4\x2b\x90\x0a\xde\xb2\x07\x3b\x7a\x46\x34\x28\xfc\x3e\x67\x0a\xe9\xf3\x53\x68\x9c\x4d\xfd\x34\x76\x65\xe2\x8f\x83\xc6\xd9\xf4\x71\x1a\xbb\x4e\xc0\xa5\x58\x76\x6e\x0a\x7b\xa5\x27\x41\x5a\x36\x43\x6d\x14\xeb\x5a\x53\x90\x7a\x34\x79\x79\x57\x12\xe6\x27\x67\xa1\x7f\x4f\x1f\x5e\x5f\x18\xf7\xf8\xb2\x0f\x32\xff\x51\xa4\x46\xde\x95\x1b\xf9\xc9\xc9\xd1\x7d\xdc\x73\x87\x6a\x1f\x66\x7e\x8e\x60\x3d\x9b\x9b\x75\x57\x10\xeb\xd3\x5b\xc9\x7b\xb6\x14\x48\x81\x09\x53\xd4\x8d\x21\xdc\x67\xa8\x11\x56\x52\x21\x54\xe5\x89\x6f\x8b\x2d\xd8\x2e\x4d\x26\x23\x02\x14\x2e\x73\x7b\x89\x74\x76\xe8\x5f\xba\x45\xc1\x95\x37\x25\xf4\xe9\xfd\xe2\xec\x5c\xcd\xa6\x3d\x5c\xfd\xd4\x5b\x42\xca\x1e\x90\x7a\xd3\xa9\x94\xf8\xb5\xbd\xe6\x9f\xc9\x56\x43\x6a\x5b\xf1\x62\x6b\x50\x0f\xe1\xdb\x86\xff\x0b\x2f\xe7\xe5\xfd\x29\x2d\xdb\x31\x10\x85\x20\x53\x83\x02\x96\x0a\x89\x41\x55\xac\x9b\xfc\x6d\x72\x7d\xe6\x56\xf2\xff\xda\x45\x9c\xdb\xbd\x39\x53\x4a\x7a\x09\x71\xaf\x56\x1f\x63\xc4\x5e\x85\x1e\x67\xe4\x6a\xf6\x53\x6a\x3f\xc7\x97\xae\xee\xcc\xd0\x47\xa6\xc6\x2f\x8d\xa0\xf4\xa6\xbf\x15\x1c\x1b\xd7\x3f\xdb\x5a\xbd\x90\x92\x7b\x1c\x68\xa7\x8f\x79\xc7\xd0\xbd\xde\x4a\x90\x88\x13\x85\x67\xd5\x76\xaf\x72\xbc\xe5\x44\xeb\xf0\x2d\xe1\xba\x18\x1e\x1f\x75\x8e\x03\x5f\xcc\xf5\x90\xf3\x1a\x0a\x29\xac\x72\x6d\x80\x14\xf1\x57\x7e\x2f\x02\xee\x97\x5c\xe5\xcd\x82\xda\xec\x78\x39\x58\x30\x03\xaf\xdf\xdf\xde\xdd\xb9\x6f\xbe\x3a\xa2\xb3\x4f\xe1\xfb\x1e\x99\x36\x2a\xcc\x05\xb3\xea\x8e\x07\x3e\x55\x56\x18\x04\xcf\xdc\x61\x8f\xcf\x75\x97\xa5\xbe\x38\xdd\xee\xde\x75\xb6\x44\xdf\x92\x6d\xe5\x62\x22\xb6\x40\xd4\x82\x19\x45\xd4\x16\x34\x7e\x9f\xa3\x48\xdc\x97\x57\x7d\xe9\xdf\x9b\x6e\x5b\x83\x8f\x38\xd9\x2f\xf8\xcb\x5f\xad\xca\x93\x41\x1f\x75\xb0\x0b\x9b\xc1\xf5\xd7\x77\xf7\x5f\xe6\xe5\xc6\xbb\xef\xda\x7b\xef\x28\x2c\xa6\xa3\xb0\xfc\xf5\xe2\x7f\x03\x00\x00\xff\xff\xa5\x5e\x5b\x11\xcf\x28\x00\x00")

func docWssHtmlBytes() ([]byte, error) {
	return bindataRead(
		_docWssHtml,
		"doc/wss.html",
	)
}

func docWssHtml() (*asset, error) {
	bytes, err := docWssHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/wss.html", size: 10447, mode: os.FileMode(420), modTime: time.Unix(1695092162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
	"doc/tcp.html":              docTcpHtml,
	"doc/wss.html":              docWssHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
		"tcp.html":              &bintree{docTcpHtml, map[string]*bintree{}},
		"wss.html":              &bintree{docWssHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
