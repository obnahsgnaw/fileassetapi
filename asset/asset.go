// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5b\x6f\xdb\x46\xf6\x7f\xf7\xa7\x18\xe8\xdf\xb7\xca\x17\x25\xf9\x2f\xd0\x00\x06\xd6\x8d\x5b\xc0\xe8\x2e\x1a\x34\x4d\xb1\x40\x36\x6b\x8c\xc9\x91\xc5\x9a\xb7\x0e\x87\x8e\xdd\xae\x81\xa4\xb9\xd9\x69\x5c\x1b\xdb\x34\x6e\x12\xb7\x5b\x15\x69\xeb\xed\xee\xda\x29\xb6\x4d\x13\xdb\xd9\x7c\x19\x91\x92\x9e\xf2\x15\x16\x1c\x52\x12\x39\xbc\x4a\x94\x62\xb9\x9d\x27\x5b\xe4\xe1\xb9\xcc\x99\x33\xf3\xe3\x99\x33\xc3\x8f\x46\x00\x28\x18\x97\xe0\xfc\x3c\xc2\x85\xd3\xa0\x70\x62\x6c\xa2\x50\x74\xae\x49\x6a\x59\x2b\x9c\x06\xce\x7d\x00\x0a\x44\x22\x32\x72\xee\xbf\x0e\x85\x05\xa4\x8a\x60\xea\xec\x0c\xa5\x03\xa0\x20\x22\x43\xc0\x92\x4e\x24\x4d\x75\x28\xde\xad\x20\x50\x96\x64\x04\xa0\x61\x20\x02\xe6\xbc\x07\xa0\x2e\xb5\x1e\x58\x44\xd8\xf0\x88\x4b\x9e\x38\x00\x0a\x82\xa6\x12\x28\x90\xb6\x4c\x00\x0a\x2a\x54\xa8\x50\x54\x96\x97\x3d\x32\x00\x0a\x26\x96\x9d\x8b\x15\x42\x74\xe3\xf4\xf8\xb8\x73\x73\x54\x40\x44\x18\x13\x34\xa5\x43\x85\x14\x28\x51\x3a\x55\x53\xd1\xef\xd1\x12\x54\x74\x19\x51\x12\x4a\xb1\x32\x02\xc0\x0a\x35\x94\xc0\x79\xa3\x70\x1a\x5c\xa0\x97\x43\xa2\x67\x54\x11\x2d\x9d\x43\x78\x51\x12\x50\x87\x39\x63\x72\xf3\xe0\x8b\xc6\xee\x43\x8f\x71\x31\x9a\xd1\xdb\x94\xda\x48\x65\x75\x79\xad\x59\x7d\x5a\xdf\xad\xd6\x37\x6f\x24\x33\x9c\x72\x9a\x37\x8d\xdd\xa9\x31\xfb\xee\xcd\xda\xc1\xe3\x2c\x0c\xa7\xb5\x4b\xaa\xac\x41\x31\x8d\xe7\xc9\xb1\xda\x93\x4f\x1a\xcf\x9e\xd9\xdb\xeb\xd6\xad\x6a\x32\xcf\x33\x9a\x5a\x96\xe6\xd3\x38\x5a\xb7\x76\xec\xcb\x57\x9a\xd7\xd7\xeb\xcf\x76\x93\xf9\x9d\xd7\xb3\x68\x58\x1a\xab\x3d\xb9\x55\x3b\xfc\x3a\x8b\x86\xef\x49\xe8\x52\x1a\xbf\x13\x63\xcd\x6f\xae\x35\xbe\x5f\x0d\xf0\x1b\x01\xe0\x22\xed\x40\x86\x50\x41\x0a\xea\xf4\x21\xda\x33\x5b\xbd\x9a\xf6\xd2\x42\x9b\x56\xd0\x54\xc3\x0c\x10\x43\x5d\x97\x25\x01\x3a\xa2\xc6\xdf\x37\x34\xb5\xf5\xa0\xff\xba\x26\x10\x44\x46\x0d\x82\x11\x54\x3a\xbc\x74\xac\x89\xa6\xd0\x27\x5e\x90\x54\x8c\x4e\xb8\x8f\x2f\x96\xc6\x05\xea\x3a\x7f\x38\xce\x23\x7f\x74\x3a\x96\x9b\x8a\x02\xf1\x32\xed\xb7\xd4\x79\xb5\xe7\x55\xfb\xca\x5e\xbb\x1d\xc3\x2d\xd9\x78\x7e\xc7\x7a\xf0\x95\xdb\x8e\xd6\xb3\xcf\xac\xb5\xf5\xb8\x07\x35\x1d\x61\xaa\xf1\x8c\x18\xea\x48\xb3\xd3\x88\x38\xd1\xed\x23\xc7\xc8\xd0\x35\xd5\x40\x46\x40\x43\x00\x0a\x27\x26\x26\x98\x4b\x61\xad\xa6\x80\x61\x0a\x02\x32\x8c\xb2\x29\x83\x16\xa7\x31\x1f\x7b\xd7\x5a\xc7\xcf\x30\xc4\x0c\x80\xc2\x2b\x18\x95\x1d\x3e\xff\x37\x2e\xa2\xb2\xa4\x4a\x34\xd2\xc7\x17\x4b\xae\xd2\x85\x00\xf9\x8a\xef\xd7\x4a\x31\xa8\x69\x29\x55\xd3\x77\x10\x31\xb1\x8a\x44\x70\xa9\x82\x54\x40\x2a\xc8\x51\x57\x33\xb1\x80\x80\x80\x11\x24\x48\x6c\x99\x92\xa0\x7e\x92\x0a\xa7\xf2\xa8\x20\x22\x19\xe5\x55\xe1\x54\x06\x7f\x45\xa9\xf0\x81\x89\x0c\x02\x44\x48\x20\x58\x84\xb2\x24\x42\x82\x40\x19\x4a\x32\x12\xfb\xe0\xc8\x37\x30\xd6\xb0\xf1\xf6\xdc\xfb\x48\x20\x59\xdd\x79\xaa\x27\x77\x9a\x06\xc2\x40\xd4\x90\x01\x54\x8d\x00\x68\x92\x0a\x52\x89\x17\xbb\x3d\xb6\xe7\xc9\xdc\x6a\x54\xe0\x22\x02\x3a\xc2\x8a\x64\x38\x13\x37\x20\x1a\x80\xd4\xc3\x01\xf7\xf7\xa8\x5e\xae\x1e\xe7\x68\x57\xd6\x4c\x35\xc9\xc9\x49\xc2\x5f\xeb\x52\x78\xab\x9f\x99\x3a\xed\x60\xce\x18\x29\x4b\x02\xe9\x4d\xfa\x89\x6e\x3d\xd3\x36\x5b\xd6\x84\x85\xc4\x8e\x9d\x24\xb5\x57\x9b\x89\xa6\x01\x05\xaa\xcb\x40\x52\x01\x04\xa6\x2a\x11\x40\x24\xa5\x37\xb7\xff\x7f\x86\x28\x77\x06\x7b\x84\x01\x72\x62\xaf\x27\x21\x22\x2a\x43\x53\x26\xa9\x82\xce\xab\x68\x49\x47\x02\x49\x15\xd5\xe7\xe1\x62\x24\x42\xed\x20\x1c\xf5\xae\x05\x51\x54\xfb\xce\x45\xdf\x63\x06\x12\x4c\x2c\x91\x65\xe6\x51\xc6\xf0\x29\x5d\xa7\xd3\xe9\x85\x8b\x8c\x8d\xaf\x23\x88\x11\x7e\x57\x5b\x40\x2a\xbd\x1d\xa9\x66\xeb\x6a\x5b\xdd\x82\x6e\xc6\x23\x02\xfb\xc1\x4f\xf6\xdd\x47\x1e\xa8\x8b\x47\x04\x2e\x59\x6e\x44\x70\x9e\x06\x24\x47\x04\x1c\x11\x70\x44\xc0\x11\x01\x47\x04\x5d\x49\xe5\x88\x60\x98\x11\x81\x0e\x31\x54\x10\x41\x98\xc5\x05\x8c\x0d\xad\x8c\x86\x88\xe6\xcc\x79\x56\x65\xf6\x3d\xfc\xd1\xd5\xc6\xde\xe7\xf6\x4e\xd5\x3a\xdc\x60\x49\x25\x4a\xf1\x81\x89\xf0\x32\x7b\xcb\x71\xbc\x84\x91\x33\xff\x96\xa1\x6c\x20\xe6\x36\x59\xd6\xa9\x06\x73\x9a\x26\x23\xa8\x16\xa2\x51\xc4\x31\x03\x3b\xf4\xaf\xe7\x0f\x9a\x18\x11\xbd\x3c\xd9\xa8\x9b\x88\x6c\xa7\x47\x74\xcd\x88\x47\x43\x8d\x4f\x7f\xb1\x36\xee\xba\x89\x33\x6b\xfb\x91\xf5\xe5\xe5\x04\x4c\x64\x5d\x7f\x5c\x3b\xb8\xeb\x62\xa2\xf0\x83\xd6\xde\x53\xeb\xe1\xdd\xfa\xc1\x3d\xeb\xe6\xfe\x8b\xc3\xdb\x8d\xe7\xf7\x9a\x37\x6f\xd7\x9e\xfe\xdd\xda\xd8\xab\x1d\x7c\x6b\xaf\x7d\x62\xdd\xda\x71\x9f\x4a\x40\x4f\x4c\xb2\x6f\xf6\x4d\x44\x84\xca\x79\x3c\xec\x39\x95\xb2\x24\x23\x9a\x57\x9e\xf5\xf2\xca\xb3\x50\x97\x5a\x0e\x59\x2c\xb5\xac\x78\xc7\x93\xc7\x81\x56\x37\x2a\x70\xa0\xc5\x81\x16\x07\x5a\x1c\x68\x71\xa0\x95\x0d\x68\xcd\x69\x62\x08\x21\xb9\xe0\x29\xea\x8e\x0f\x3b\x11\x6c\xb2\xd0\x69\x60\x13\x21\xed\x40\x59\x5a\x22\x0d\x97\xb1\xcb\x83\x43\x88\xcc\x9c\x46\x31\xb2\xae\x58\x59\xab\x5b\x8d\xea\x4e\x52\x66\x8a\xae\x9c\x86\xc9\x18\x24\xe5\x5f\x87\x9d\x3d\x0b\xe7\x25\xf5\x38\x24\xa2\x5a\x8a\x72\xa4\xc4\x91\x12\x47\x4a\x1c\x29\xc5\x4a\xe7\x48\x89\x23\x25\x56\xed\xae\x91\x92\x0e\xe7\x51\x4a\x46\xea\x2c\x9c\x47\x40\x35\x95\x39\x84\x8b\xc0\x6b\x94\xc9\x52\xff\x73\x53\x92\x4a\xd0\x3c\xc2\xec\xd3\x65\x0d\x2b\x90\x78\x04\xbf\x3b\x55\x88\xf3\x57\x8c\x81\xb2\xa4\x48\x24\x8b\x85\x86\xf4\x21\xf2\xd9\x37\x71\x5c\x0c\x5c\x40\xcb\x97\x34\x2c\xa6\x98\xf8\x96\x4b\x05\x0c\x04\xb1\x50\x29\x02\x59\x5a\x40\xa7\xbd\x47\x27\x97\x96\x5e\x1c\xde\x6e\xfd\x90\xc4\xc9\xd2\x5f\x1d\xe6\x93\x4b\x4b\x4b\xfd\x6f\x04\x83\x60\x49\x9d\xef\xd6\x48\x43\xc3\x69\x4e\x3c\xa7\x61\x02\x64\xc9\x20\x9e\x71\xc0\x79\x66\xf2\x55\x58\x1c\x9d\x2b\xbe\x2a\x14\x47\x43\x2d\x34\x10\x5b\x32\x83\xf6\x40\x91\xe0\xb0\x22\xf6\xf1\x8f\x24\x71\xc5\x0f\xdb\x5d\x88\x96\x80\xdc\xbf\x6e\xde\x7b\x98\x94\x3f\xa5\x04\x2e\x7e\xcf\x8a\xdc\xa7\x5d\x99\xc3\x82\xdb\x5b\xce\xd7\xdc\xf1\xb9\xc8\xde\xd7\xb1\x63\x0c\x91\x5c\xed\x56\x38\x7a\xef\x42\x05\x8e\xde\x39\x7a\xe7\xe8\x9d\xa3\x77\x8e\xde\xb3\xa1\x77\x29\x0d\xf6\xcd\x4c\x47\xa3\x1e\x1d\x92\x4a\x77\x69\xd0\x1c\x20\xf6\x57\x83\x89\x34\x77\xa7\x48\xd6\x3c\xa6\xbb\x63\x24\x01\xe6\x04\x77\x9e\xcc\xba\x3f\xff\x20\x19\x64\x68\xc0\x4e\x5c\x27\xef\xa8\xca\xd3\x94\x1c\xe8\x70\xa0\xc3\x81\x4e\xac\x74\x0e\x74\x38\xd0\x61\xd5\x8e\x9c\xfd\x99\x7d\x98\x7d\x99\xff\x53\x61\xc8\xd2\xa8\x86\x45\xba\xc1\xb6\x14\x3b\xed\x9b\x74\x6b\xe3\x28\xdd\x76\x87\x95\xcc\x85\x65\xf5\xea\x6e\x63\xf7\xa1\xbb\xdf\xb1\x7e\xff\x5a\x38\xe9\xc1\x38\x28\x92\xfe\xc5\xe1\x6d\x6b\xf3\x3b\x6b\xf5\x5e\xed\xf0\x7e\xe3\x9b\x7f\x36\x6e\xfe\x60\xdd\xda\xb1\xaf\x5e\xb7\x6e\xfc\x9c\x00\x2c\x02\x9b\x31\x67\xcf\x78\x8a\x0f\x3b\xa8\xf0\xf4\xe4\x88\x82\x23\x0a\x8e\x28\x38\xa2\x88\x95\xce\x11\x05\x47\x14\xac\xda\xc7\xaa\x44\xcc\x37\xd5\xf5\xad\x08\x2c\x78\xfe\x42\x5f\xc0\x53\x7f\x93\x27\x1e\x8a\x62\x4a\xf3\x93\xf2\x27\xad\x02\x7b\x07\x10\xf5\x54\x99\xdf\x79\xb0\x2f\x95\xf9\x41\x54\x75\x9c\xeb\xf2\x5d\x5f\xf0\xaa\x7c\x0e\xb9\x00\x87\x5c\x1c\x72\x71\xc8\xc5\x21\xd7\xcb\xa8\x35\xc3\x5a\x44\xc9\x04\x6b\x62\x0c\x55\xb6\x6a\x9d\x84\x85\xab\xde\x0a\x8f\xcc\xd4\x25\xb6\x08\x8a\xdc\xba\x0e\xa6\x52\xcc\x40\x74\x4c\x9c\x49\xb3\xc8\xa3\x9b\x1d\x80\x61\xbd\x39\x41\xd1\x44\x53\x4e\x2b\x53\x8c\x26\x3a\x2a\x8d\xe1\xd2\x39\xe9\xc3\x34\x95\x8d\x08\x92\x61\x2d\x33\x14\x34\x95\x20\x95\xbc\xeb\x08\x49\xb6\xca\xa3\x9c\x25\x11\xa4\x47\xe4\x0e\xb4\x44\x90\x4a\x4f\x36\x4c\x56\x3d\x96\xee\x88\xf4\x26\x44\x4e\xd1\x38\x82\x62\x48\x47\x1f\x1d\xa6\x96\x70\x3a\x24\x40\x35\x95\xe3\x12\x13\x0a\x5c\x3a\xa3\x99\xea\xaf\xcd\x2c\x93\x3d\xb1\x27\xca\x28\x0f\x56\xba\x6f\x92\xfd\xb7\x2c\xd7\x41\x05\x43\x9f\x0b\xe9\x9c\xb3\x9a\x29\x11\x52\x5f\x5b\xb5\xb7\xff\x65\x6d\xfc\x92\x90\xff\x08\x9f\xdf\x18\xf9\x14\x93\xd2\xf0\x1f\xa2\x3a\xfb\x9e\xa7\xd5\x70\x27\x34\x16\x4b\x9e\x9e\x3c\x69\xc1\x93\x16\x3c\x69\xc1\x93\x16\xb1\xd2\x79\xd2\x22\x51\x8b\xdf\x66\xd2\x22\x0a\x2f\x04\x8e\x12\xef\x0b\x5c\xe8\x16\x0f\x48\xe8\x52\xf7\x2b\x23\xee\xd1\xd7\x3d\xac\x8c\xf8\x1f\xec\xcb\xca\x88\xef\xa8\xee\x59\xe7\xff\xe1\x5f\x16\x59\x2c\x79\x7a\x72\x14\xc1\x51\x04\x47\x11\x1c\x45\xc4\x4a\xe7\x28\x82\xa3\x08\x56\xed\xdf\xc4\xd2\xc7\xf1\xcb\xba\xd3\xbf\xc9\xfa\x46\x91\xf0\xe4\x6e\x9f\xf6\x6f\xf9\xbf\xd8\xd2\x17\x18\xdd\xe7\xac\x9b\x87\xb2\x33\x6f\xe0\x3a\x06\x30\xdb\x38\x2e\x38\xdb\xe0\x40\x9b\x03\x6d\x0e\xb4\x39\xd0\x8e\x95\xce\x81\x36\x07\xda\xac\xda\x1c\x68\x0f\x2d\xd0\x36\x32\x20\xed\x10\x4d\xfe\x85\x61\x88\x31\x0c\x17\xee\x13\xa4\xb0\xa0\x27\xca\xcc\x22\x7b\xdf\x27\xf4\x02\x73\x0f\xb4\x4c\x60\xae\x5f\x0c\xf6\x60\x46\x13\x41\x93\x65\x24\x38\x6d\xf0\x66\x1b\x51\x2b\xa6\x4c\x24\xfe\x76\x30\x8c\x6f\x07\xed\x6f\x8d\xfa\x46\xac\x76\x3f\x2a\x74\x79\x94\xaf\xef\xad\x22\xe6\x90\x28\xe6\x70\x28\xdf\x30\xe7\x0d\x48\x0c\x6e\x4f\xe8\xbe\x71\x43\x5a\xe4\x28\x6a\x4a\x62\x1c\xeb\x28\x8f\x87\xfc\x9d\x24\xd8\xe1\x1d\x29\xd4\x1b\xb1\x7a\x37\xc9\x63\x10\xc9\xdc\x0b\x93\x5e\x59\xd3\xc7\x23\x19\x3b\x51\x35\xa8\xa6\x72\x78\x47\x0a\x15\x68\x15\xd1\xa0\xc4\xba\xdc\x3b\x82\x47\x18\x05\xa2\x47\xc1\x88\x49\x92\xa9\x75\x0d\xcf\x49\x6c\x7a\x85\x19\xa3\x82\x9a\xb8\xa1\xd8\x7a\x41\xef\xf6\xfb\x11\x39\x82\x2d\xb8\xd0\x06\xba\xec\x3a\xce\xd3\xe1\xb6\x4c\xb7\x25\x76\xcf\x4d\x0e\x4b\x06\x1a\x62\xae\xc2\x33\xb1\x23\x47\x16\xf6\xce\xcc\x47\xcb\xdf\x5c\x66\x20\x6e\xac\xc8\x19\xce\xf4\xab\xd6\xf1\x31\x9d\xe0\xf0\x30\x9c\x88\x01\x13\x59\x11\x53\xb8\x4e\x8e\x1a\x6e\xe2\xe0\x64\xdd\xf9\x6e\xb7\xf5\xdd\xc7\xf6\x57\xdb\xd6\xea\x8d\xfa\xda\xcd\xda\xe1\x7d\xb7\x8e\xcb\x7a\x78\xbf\xf6\xe4\x07\x60\xaf\x5d\xae\x1d\x7c\x6b\x7f\xb1\xe7\xfe\xee\x3e\x86\xfd\x6d\x12\x8c\xb7\xf6\x17\xef\x72\x74\x3f\xf7\x7b\x46\x31\x2d\xdb\xaa\xe0\x4b\x6a\x9c\xc0\xc7\x8e\x52\x82\x2a\xb4\x69\x92\x4f\xb7\x01\xa1\x9d\xea\xfe\xde\xad\xf2\x55\xfe\xbf\xfc\x29\x9d\x40\xcc\x26\x63\xbb\x63\xee\x31\x88\x1d\x60\x42\x69\xd1\x97\x36\x08\x30\x2f\x12\xfd\x9b\x81\x3b\x4e\x4f\x0a\x72\xdf\x99\x1a\x39\x82\xc6\x4b\x63\xe6\x89\x77\x8f\x05\xd0\xb0\x97\x8c\x8c\x76\x16\x4d\x3c\xe4\x99\x0e\x28\x6f\xa0\x20\xc3\x80\xf3\x28\x7d\x60\x79\x43\x85\x73\x32\x3a\x47\x20\x89\x6c\x20\x46\x62\x01\xa9\xa6\x12\x74\xd4\xb4\x64\x38\x1c\x02\xae\x71\x99\x06\x2e\x4d\x7b\x19\x98\x96\xaf\xda\x1c\x3b\xa9\x99\x30\x2b\xdf\x4c\xb1\xb9\x57\xbf\xb3\x03\xea\xdf\x5d\xa9\xdf\xd9\x29\xb0\x36\x38\x6d\xe6\xe5\x58\x72\x38\x59\xd0\xc4\xd8\xf8\xce\x3d\x76\xb5\x7a\xa1\x9b\x59\x02\x54\x56\x80\x5e\x87\x84\x20\x4c\x69\xff\x72\x61\x62\xf4\xb5\x8b\x1f\x95\x8a\x2b\xaf\xc4\x8c\x45\x9e\x77\x7b\xef\x26\x8c\x3a\xf1\xdd\x25\xec\x8a\xe6\x9d\x7b\x8d\xbd\xbd\x48\x1f\x18\xdc\x09\x7d\x75\x02\x3b\x2e\xf4\x71\x14\x8f\x3c\xc2\x39\x39\x8d\x19\xce\x62\x26\x0e\xfc\x41\xeb\x8c\x18\x08\xe8\xf6\xa6\xe6\x67\xff\xed\xa2\xef\x01\x17\x12\x46\x77\xc4\x37\x25\x19\xd1\xc3\x34\xf3\xf4\xc2\x01\x82\x98\x38\x7c\x91\x1f\x97\xb9\xeb\xaf\xcd\xea\xd3\xfa\x83\xdd\x01\x61\x18\x07\xae\x7e\xb9\xd5\x35\xf2\xcb\xf2\x6a\x69\x20\x3c\xa8\x57\x24\xef\xf8\xb1\xc1\x20\xaf\xfa\x6e\xb5\xbe\x79\xc3\xda\x7b\xda\xf8\xb1\xda\xf5\x2b\x58\x06\xfe\x81\x25\xf8\xe8\xa1\xc1\x9b\x6d\x19\x19\xb1\xb1\xec\x9b\xf1\x93\x04\xbb\x53\x6e\xfd\xd6\x63\xfb\xf2\x95\x98\xd4\x8d\xbb\xce\x3c\xd5\x55\xf3\x75\x62\x45\x84\x04\x8d\x12\x49\x49\x51\x63\xf5\x81\x75\xb0\x6f\x6f\x3d\x6e\x6e\xfd\x94\x69\x8c\x70\xbd\xdd\xf8\xf9\x9a\xbd\xbf\xc9\x0e\x0e\x33\x2a\x79\xbb\xc5\xf9\x48\x06\x87\x93\x27\x12\x8d\x9d\x99\x1e\x48\x00\x58\x9b\xeb\xf5\xef\x1f\x65\x6a\x3d\x49\xa4\xc9\x04\x60\x7d\xb6\x6e\xed\xdf\x61\xdb\x2f\xe2\xec\xdb\x1c\x0d\x89\x22\xb1\x27\x78\x99\x13\x5b\xa7\x43\x64\x9d\xd6\x9c\xb0\xa0\x28\x34\x14\x19\x31\x08\xbb\xf5\x51\xb3\xfc\x39\x07\xef\x33\x25\xde\x61\x91\x47\xd5\x64\xe7\x68\x7f\xeb\xb6\xd5\xae\xff\xa7\x79\x67\xd7\xfa\xf7\x56\xfd\xc7\x03\xeb\xab\x4f\xdc\xe3\xa1\x5f\x1c\xde\x76\x33\x40\xb5\x27\xfb\xf5\x7f\xec\x5b\xab\xf7\xac\x8d\x1f\xec\xed\xb5\x36\xb1\xbd\xb9\x5d\xff\xe9\x9b\x98\x77\x7e\x0d\x93\x33\x9a\x6c\x2a\xf1\x2d\x11\x61\x57\x01\x8a\x22\xb5\x04\xca\x67\xa3\x5b\x19\xe4\x78\xd7\xb5\x36\xf6\xec\x4f\xff\x66\xed\x6f\x58\xab\x5b\xc5\x05\xb4\x3c\x69\xad\x6e\xbd\x38\xbc\xbd\x08\x65\x13\x4d\x5a\x1b\x1f\xdb\x9f\x3f\x5a\x40\xcb\xd1\xf6\xb8\x07\x6c\x0f\xa1\x45\x8d\xe7\x37\xed\x83\x87\xae\xc7\x1c\xbb\x00\x6b\x98\xab\x79\x9b\xa0\x51\xdd\xa9\xdf\xbf\x16\xb4\x33\x25\x34\xfe\x88\x08\xcc\x13\x18\x44\x23\x70\x70\x4b\x17\xef\xb4\x6a\x2d\xa8\x18\xa0\x9a\x8a\x11\x03\xe1\x12\x5e\x07\x72\x6b\x71\xc6\xc4\x18\xa9\x04\x38\x42\x62\x81\x92\xfb\xc5\xa7\x97\xa2\x02\x3d\xc0\x21\x1a\x16\xb0\x03\x1d\x48\x1a\x4e\x98\xe1\x31\x19\x0a\x38\x9d\xab\x79\x7d\xbd\xfe\x6c\xb7\x48\xb5\x98\x2c\xd9\x5b\x8f\xed\xed\x35\xf7\xda\x8b\x43\xaf\xac\xb0\x71\xf5\x59\xed\xc9\xbe\x2a\x45\xad\x56\x44\xe4\x16\x56\x6f\x34\xab\x3f\x5b\xd7\xaf\xda\x9f\x3f\xb2\xd7\x77\xd9\x39\x2f\xf4\x51\xca\x3c\x8b\x16\xc1\x8e\x9e\xa9\x61\x68\x70\xc4\x78\xdb\x88\x75\xf6\xa0\x67\x81\xce\x6b\x96\x7f\x28\x49\x8d\xf8\xc0\xe4\x31\x10\x0c\x96\x01\x0e\x1d\x3d\xca\x5a\x40\xcb\x49\x30\x8b\xdd\xe5\x9d\xa3\xa1\xc2\xdb\xed\xbb\x35\xab\xb3\x97\x3e\xd5\xbb\xec\xbe\xb2\x61\x5e\xa8\x8c\xa8\xce\xcd\xa7\xee\xf0\x4c\xda\xf1\x0b\x6e\xb4\xcf\x4d\xfe\xd9\x9c\x98\x38\x89\x40\x52\x23\xb5\x8b\x43\x5a\x85\x29\xd3\x51\x45\x22\xad\x7a\x94\x50\xb3\x41\x5d\x7a\x0b\x75\x86\x9f\x76\x65\xcf\x9f\x46\xa7\x74\x7d\xd4\x77\x0a\x93\x57\xb6\x53\x41\x50\x44\x38\x18\x06\xc1\x9a\x96\xcc\x22\xa6\x4c\x52\xd1\xb0\xf4\x21\xad\x93\x4d\x94\xe3\xd8\x38\xb2\x32\xf2\xbf\x00\x00\x00\xff\xff\x15\x70\xfc\x3c\x6d\x98\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 39021, mode: os.FileMode(420), modTime: time.Unix(1708654546, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1708654546, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
