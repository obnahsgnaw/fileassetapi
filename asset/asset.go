// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xed\x6f\xdb\xc6\x19\xff\xee\xbf\xe2\xa0\xf5\x5b\xe5\x17\x25\xd9\x80\x06\x30\x30\x37\x6e\x01\xa3\x1b\x1a\x34\x4d\x31\x20\xcb\x8c\x33\x79\xb2\x58\xf3\xad\xc7\xa3\x23\xb7\x33\x90\x34\x6f\x76\x1a\xd7\xc6\x9a\xc6\x4d\xe2\x76\x75\x91\xb6\x5e\xb7\xd9\x29\xd6\xa6\x89\xed\x2c\xff\x8c\x48\x49\x9f\xf2\x2f\x0c\x3c\x52\x12\x79\x7c\x95\x28\xc5\xf2\x7a\x9f\x6c\x91\x0f\x9f\x97\x7b\xee\x9e\xfb\xdd\x73\x0f\x8f\x1f\x8d\x00\x50\x30\x2e\xc1\xf9\x79\x84\x0b\xa7\x41\xe1\xc4\xd8\x44\xa1\xe8\x5c\x93\xd4\xb2\x56\x38\x0d\x9c\xfb\x00\x14\x88\x44\x64\xe4\xdc\x7f\x1d\x0a\x0b\x48\x15\xc1\xd4\xd9\x19\x4a\x07\x40\x41\x44\x86\x80\x25\x9d\x48\x9a\xea\x50\xbc\x5b\x41\xa0\x2c\xc9\x08\x40\xc3\x40\x04\xcc\x79\x0f\x40\x5d\x6a\x3d\xb0\x88\xb0\xe1\x11\x97\x3c\x71\x00\x14\x04\x4d\x25\x50\x20\x6d\x99\x00\x14\x54\xa8\x50\xa1\xa8\x2c\x2f\x79\x64\x00\x14\x4c\x2c\x3b\x17\x2b\x84\xe8\xc6\xe9\xf1\x71\xe7\xe6\xa8\x80\x88\x30\x26\x68\x4a\x87\x0a\x29\x50\xa2\x74\xaa\xa6\xa2\xdf\xa3\x2a\x54\x74\x19\x51\x12\x4a\xb1\x3c\x02\xc0\x32\x35\x94\xc0\x79\xa3\x70\x1a\x5c\xa0\x97\x43\xa2\x67\x54\x11\x55\xcf\x21\xbc\x28\x09\xa8\xc3\x9c\x31\xb9\x79\xf0\x45\x63\xf7\xa1\xc7\xb8\x18\xcd\xe8\x6d\x4a\x6d\xa4\xb2\xba\xbc\xda\xdc\x7e\x5a\xdf\xdd\xae\x6f\xdc\x48\x66\x38\xe5\x34\x6f\x1a\xbb\x53\x63\xf6\xdd\x9b\xb5\x83\xc7\x59\x18\x4e\x6b\x97\x54\x59\x83\x62\x1a\xcf\x93\x63\xb5\x27\x9f\x34\x9e\x3d\xb3\xb7\xd6\xac\x5b\xdb\xc9\x3c\xcf\x68\x6a\x59\x9a\x4f\xe3\x68\xdd\xda\xb1\x2f\x5f\x69\x5e\x5f\xab\x3f\xdb\x4d\xe6\x77\x5e\xcf\xa2\x61\x69\xac\xf6\xe4\x56\xed\xf0\xeb\x2c\x1a\xbe\x27\xa1\x4b\x69\xfc\x4e\x8c\x35\xbf\xb9\xd6\xf8\x7e\x25\xc0\x6f\x04\x80\x8b\xb4\x03\x19\x42\x05\x29\xa8\xd3\x87\x68\xcf\x6c\xf5\x6a\xda\x4b\x0b\x6d\x5a\x41\x53\x0d\x33\x40\x0c\x75\x5d\x96\x04\xe8\x88\x1a\x7f\xdf\xd0\xd4\xd6\x83\xfe\xeb\x9a\x40\x10\x19\x35\x08\x46\x50\xe9\xf0\xd2\xb1\x26\x9a\x42\x9f\x78\x41\x52\x31\x3a\xc3\x7d\x7c\xb1\x34\x2e\x50\xd7\xf9\x87\xe3\x3c\xf2\x8f\x4e\xc7\x72\x53\x51\x20\x5e\xa2\xfd\x96\x3a\xaf\xf6\x7c\xdb\xbe\xb2\xd7\x6e\xc7\x70\x4b\x36\x9e\xdf\xb1\x1e\x7c\xe5\xb6\xa3\xf5\xec\x33\x6b\x75\x2d\xee\x41\x4d\x47\x98\x6a\x3c\x23\x86\x3a\xd2\xec\x34\x22\xce\xe8\xf6\x91\x63\x64\xe8\x9a\x6a\x20\x23\xa0\x21\x00\x85\x13\x13\x13\xcc\xa5\xb0\x56\x53\xc0\x30\x05\x01\x19\x46\xd9\x94\x41\x8b\xd3\x98\x8f\xbd\x6b\xad\xe3\x67\x18\x62\x06\x40\xe1\x15\x8c\xca\x0e\x9f\xdf\x8c\x8b\xa8\x2c\xa9\x12\x1d\xe9\xe3\x8b\x25\x57\xe9\x42\x80\x7c\xd9\xf7\x6b\xb9\x18\xd4\xb4\x94\xaa\xe9\x3b\x88\x98\x58\x45\x22\xb8\x54\x41\x2a\x20\x15\xe4\xa8\xab\x99\x58\x40\x40\xc0\x08\x12\x24\xb6\x4c\x49\x50\x3f\x49\x85\x53\x79\x54\x10\x91\x8c\xf2\xaa\x70\x2a\x83\xbf\xa2\x54\xf8\xc0\x44\x06\x01\x22\x24\x10\x2c\x42\x59\x12\x21\x41\xa0\x0c\x25\x19\x89\x7d\x70\xe4\x1b\x18\x6b\xd8\x78\x7b\xee\x7d\x24\x90\xac\xee\x3c\xd5\x93\x3b\x4d\x03\x61\x20\x6a\xc8\x00\xaa\x46\x00\x34\x49\x05\xa9\xc4\x1b\xbb\x3d\xb6\xe7\xc9\xdc\x6a\x54\xe0\x22\x02\x3a\xc2\x8a\x64\x38\x13\x37\x20\x1a\x80\xd4\xc3\x01\xf7\xf7\xa8\x5e\xae\x1e\xe7\x68\x57\xd6\x4c\x35\xc9\xc9\x49\xc2\x5f\xeb\x52\x78\xab\x9f\x99\x3a\xed\x60\x4e\x8c\x94\x25\x81\xf4\x26\xfd\x44\xb7\x9e\x69\x9b\x2d\x6b\xc2\x42\x62\xc7\x4e\x92\xda\xab\xcd\x44\xd3\x80\x02\xd5\x25\x20\xa9\x00\x02\x53\x95\x08\x20\x92\xd2\x9b\xdb\x7f\x9b\x61\x94\x3b\xc1\x1e\x61\x80\x9c\xb1\xd7\x93\x10\x11\x95\xa1\x29\x93\x54\x41\xe7\x55\x54\xd5\x91\x40\x52\x45\xf5\x39\x5c\x8c\x44\xa8\x1d\x84\xa3\xde\xb5\x20\x8a\x6a\xdf\xb9\xe8\x7b\xcc\x40\x82\x89\x25\xb2\xc4\x3c\xca\x18\x3e\xa5\xeb\x74\x3a\xbd\x70\x91\xb1\xf1\x75\x04\x31\xc2\xef\x6a\x0b\x48\xa5\xb7\x23\xd5\x6c\x5d\x6d\xab\x5b\xd0\xcd\x78\x44\x60\x3f\xf8\xc9\xbe\xfb\xc8\x03\x75\xf1\x88\xc0\x25\xcb\x8d\x08\xce\xd3\x01\xc9\x11\x01\x47\x04\x1c\x11\x70\x44\xc0\x11\x41\x57\x52\x39\x22\x18\x66\x44\xa0\x43\x0c\x15\x44\x10\x66\x71\x01\x63\x43\x2b\xa3\x21\xa2\x39\x73\x9e\x55\x99\x5d\x87\x3f\xba\xda\xd8\xfb\xdc\xde\xd9\xb6\x0e\xd7\x59\x52\x89\x52\x7c\x60\x22\xbc\xc4\xde\x72\x1c\x2f\x61\xe4\xcc\xbf\x65\x28\x1b\x88\xb9\x4d\x96\x74\xaa\xc1\x9c\xa6\xc9\x08\xaa\x85\x68\x14\x71\xcc\xc0\x0e\xfd\xeb\xf9\x83\x26\x46\x44\x2f\x4f\x36\xea\x26\x22\xdb\xe9\x11\x5d\x33\xe2\xd1\x50\xe3\xd3\x5f\xac\xf5\xbb\x6e\xe2\xcc\xda\x7a\x64\x7d\x79\x39\x01\x13\x59\xd7\x1f\xd7\x0e\xee\xba\x98\x28\xfc\xa0\xb5\xf7\xd4\x7a\x78\xb7\x7e\x70\xcf\xba\xb9\xff\xe2\xf0\x76\xe3\xf9\xbd\xe6\xcd\xdb\xb5\xa7\x7f\xb7\xd6\xf7\x6a\x07\xdf\xda\xab\x9f\x58\xb7\x76\xdc\xa7\x12\xd0\x13\x93\xec\x9b\x7d\x13\x11\xa1\x72\x1e\x0f\x7b\x4e\xa5\x2c\xc9\x88\xe6\x95\x67\xbd\xbc\xf2\x2c\xd4\xa5\x96\x43\x16\x4b\x2d\x2b\xde\xf1\xe4\x71\xa0\xd5\x8d\x0a\x1c\x68\x71\xa0\xc5\x81\x16\x07\x5a\x1c\x68\x65\x03\x5a\x73\x9a\x18\x42\x48\x2e\x78\x8a\xba\xe3\xc3\x4e\x04\x9b\x2c\x74\x1a\xd8\x44\x48\x3b\x50\x96\x96\x48\xc3\x65\xec\xf6\xe0\x10\x22\x33\xa7\x51\x8c\xac\x3b\x56\xd6\xca\x66\x63\x7b\x27\x29\x33\x45\x77\x4e\xc3\x64\x0c\x92\xf2\xef\xc3\xce\x9e\x85\xf3\x92\x7a\x1c\x12\x51\x2d\x45\x39\x52\xe2\x48\x89\x23\x25\x8e\x94\x62\xa5\x73\xa4\xc4\x91\x12\xab\x76\xd7\x48\x49\x87\xf3\x28\x25\x23\x75\x16\xce\x23\xa0\x9a\xca\x1c\xc2\x45\xe0\x35\xca\x64\xa9\xff\xb9\x29\x49\x25\x68\x1e\x61\xf6\xe9\xb2\x86\x15\x48\x3c\x82\xdf\x9d\x2a\xc4\xf9\x2b\xc6\x40\x59\x52\x24\x92\xc5\x42\x43\xfa\x10\xf9\xec\x9b\x38\x2e\x06\x2e\xa0\xa5\x4b\x1a\x16\x53\x4c\x7c\xcb\xa5\x02\x06\x82\x58\xa8\x14\x81\x2c\x2d\xa0\xd3\xde\xa3\x93\xd5\xea\x8b\xc3\xdb\xad\x1f\x92\x38\x59\xfa\xab\xc3\x7c\xb2\x5a\xad\xf6\xbf\x11\x0c\x82\x25\x75\xbe\x5b\x23\x0d\x0d\xa7\x39\xf1\x9c\x86\x09\x90\x25\x83\x78\xc6\x01\xe7\x99\xc9\x57\x61\x71\x74\xae\xf8\xaa\x50\x1c\x0d\xb5\xd0\x40\x6c\xc9\x0c\xda\x03\x45\x82\xc3\x8a\xd8\xc7\x3f\x92\xc4\x65\x3f\x6c\x77\x21\x5a\x02\x72\xff\xba\x79\xef\x61\x52\xfe\x94\x12\xb8\xf8\x3d\x2b\x72\x9f\x76\x65\x0e\x0b\x6e\x6f\x39\x5f\x73\xe3\x73\x91\xbd\xaf\x63\xc7\x18\x22\xb9\xda\x2d\x73\xf4\xde\x85\x0a\x1c\xbd\x73\xf4\xce\xd1\x3b\x47\xef\x1c\xbd\x67\x43\xef\x52\x1a\xec\x9b\x99\x8e\x46\x3d\x3a\x24\x95\xee\xd2\xa0\x39\x40\xec\xff\x0d\x26\xd2\xdc\x37\x45\xb2\xe6\x31\xdd\x37\x46\x12\x60\x4e\xf0\xcd\x93\x59\xf7\xe7\x1f\x24\x83\x0c\x0d\xd8\x89\xeb\xe4\x1d\x55\x79\x9a\x92\x03\x1d\x0e\x74\x38\xd0\x89\x95\xce\x81\x0e\x07\x3a\xac\xda\x91\xb3\x3f\xf3\x1e\x66\x5f\xe6\xff\x54\x18\x52\x1d\xd5\xb0\x48\x5f\xb0\x2d\xc5\x4e\xfb\x26\x7d\xb5\x71\x94\xbe\x76\x87\x95\xcc\x85\x65\xf5\xed\xdd\xc6\xee\x43\xf7\x7d\xc7\xfa\xfd\x6b\xe1\xa4\x07\xe3\xa0\x48\xfa\x17\x87\xb7\xad\x8d\xef\xac\x95\x7b\xb5\xc3\xfb\x8d\x6f\xfe\xd9\xb8\xf9\x83\x75\x6b\xc7\xbe\x7a\xdd\xba\xf1\x73\x02\xb0\x08\xbc\x8c\x39\x7b\xc6\x53\x7c\xd8\x41\x85\xa7\x27\x47\x14\x1c\x51\x70\x44\xc1\x11\x45\xac\x74\x8e\x28\x38\xa2\x60\xd5\x3e\x56\x25\x62\xbe\xa9\xae\x6f\x45\x60\xc1\xf3\x17\xfa\x02\x9e\xfa\x9b\x3c\xf1\x50\x14\x53\x9a\x9f\x94\x3f\x69\x15\xd8\x3b\x80\xa8\xa7\xca\xfc\xce\x83\x7d\xa9\xcc\x0f\xa2\xaa\xe3\x5c\x97\xef\xfa\x82\x57\xe5\x73\xc8\x05\x38\xe4\xe2\x90\x8b\x43\x2e\x0e\xb9\x5e\x46\xad\x19\xd6\x22\x4a\x26\x58\x13\x63\xa8\xb2\x55\xeb\x24\x6c\x5c\xf5\x56\x78\x64\xa6\x6e\xb1\x45\x50\xe4\xd6\x75\x30\x95\x62\x06\xa2\x31\x71\x26\xcd\x22\x8f\x6e\x76\x00\x86\xf5\xe6\x04\x45\x13\x4d\x39\xad\x4c\x31\x9a\xe8\xa8\x34\x86\xd5\x73\xd2\x87\x69\x2a\x1b\x11\x24\xc3\x5a\x66\x28\x68\x2a\x41\x2a\x79\xd7\x11\x92\x6c\x95\x47\x39\x4b\x22\x48\x8f\xc8\x1d\xa8\x4a\x90\x4a\x4f\x36\x4c\x56\x3d\x96\xee\x88\xf4\x26\x44\x4e\xd1\x38\x82\x62\x48\xa3\x8f\x0e\x53\x4b\x38\x1d\x12\xa0\x9a\xca\x71\x19\x13\x0a\xac\x9e\xd1\x4c\x35\xcd\x2c\x05\x56\x87\xc6\xaa\xf6\xff\xc7\x3e\x9f\xd0\x39\xab\x34\x53\x32\xa1\xbe\xba\x62\x6f\xfd\xcb\x5a\xff\x25\x21\x87\x10\x3e\x03\x31\xf2\x29\x26\x2d\xe0\x3f\x88\x74\xf6\x3d\x4f\xab\xe1\x4e\x0a\x2c\x96\x3c\x3d\xf9\xc2\x9f\x2f\xfc\xf9\xc2\x9f\x2f\xfc\x63\xa5\xf3\x85\x7f\xa2\x16\xbf\xce\x85\x7f\x14\x5e\x08\x1c\xc7\xdd\x17\xb8\xd0\x2d\x1e\x90\xd0\xa5\xee\x77\x17\xdc\xe3\xa3\x7b\xd8\x5d\xf0\x3f\xd8\x97\xdd\x05\xdf\x71\xd7\xb3\xce\xff\xc3\xbf\xb5\xb0\x58\xf2\xf4\xe4\x28\x82\xa3\x08\x8e\x22\x38\x8a\x88\x95\xce\x51\x04\x47\x11\xac\xda\xbf\x8a\xed\x83\xe3\x97\xb9\xa6\x7f\x93\xf5\x8d\x22\xe1\x09\xd2\x3e\xe5\xdd\xfc\x5f\x3d\xe9\x0b\x8c\xee\x73\xd6\xcd\x43\xd9\x99\x5f\x82\x3a\x06\x30\xdb\x38\x2e\x38\xdb\xe0\x40\x9b\x03\x6d\x0e\xb4\x39\xd0\x8e\x95\xce\x81\x36\x07\xda\xac\xda\x1c\x68\x0f\x2d\xd0\x36\x32\x20\xed\x10\x4d\xfe\x7d\x63\x88\x31\x0c\x17\xbf\x13\xa4\xb0\xa0\x27\xca\xcc\x22\x7b\xdf\x27\xf4\x02\x73\x0f\xb4\x4c\x60\xae\x5f\x0c\xf6\x60\x46\x13\x41\x93\x65\x24\x38\x6d\xf0\x66\x1b\x51\x2b\xa6\x4c\x24\xbe\x3a\x18\xc6\xd5\x41\xfb\x7b\x9d\xbe\x88\xd5\xee\x47\x85\x2e\x8f\xc3\xf5\xad\x2a\x62\x0e\x5a\x62\x0e\x58\xf2\x85\x39\x2f\x20\x31\xb8\x3d\xa1\xfb\xc6\x85\xb4\xc8\x28\x6a\x4a\x62\x1c\xeb\x28\x8f\x87\xfc\x9d\x24\xd8\xe1\x1d\x29\xd4\x8b\x58\xbd\x9b\xe4\x31\x88\x64\xee\x0d\x93\x5e\x59\xd3\xc7\x23\x19\x3b\xa3\x6a\x50\x4d\xe5\xf0\x8e\x14\x2a\xd0\x4a\x9c\x41\x89\x75\xb9\x77\x04\x8f\x30\x0a\x44\x47\xc1\x88\x49\x92\xa9\x17\x0d\xcf\x49\x6c\x7a\x85\x89\x51\x41\x4d\xdc\xa1\xd8\x5a\xa0\x77\xfb\x0d\x86\x1c\x83\x2d\xb8\xd1\x06\xba\xec\x3a\xce\xd3\xe1\xb6\x4c\xb7\x25\xf6\xbd\x95\x1c\x96\x0c\xf3\x10\xa3\x5f\x6b\x8e\x1f\x67\x6e\x73\xcc\xc4\xc6\xa5\x2c\xca\x3b\xf3\x2a\xad\xbb\x73\x99\x81\xb8\x48\x94\xe0\xf0\x30\x9c\x88\x01\x13\x59\x11\x53\xa8\xbb\xb8\xaa\x99\x38\x38\x59\x77\xbe\x7d\x6d\x7d\xf7\xb1\xfd\xd5\x96\xb5\x72\xa3\xbe\x7a\xb3\x76\x78\xdf\xad\xe3\xb2\x1e\xde\xaf\x3d\xf9\x01\xd8\xab\x97\x6b\x07\xdf\xda\x5f\xec\xb9\xbf\xbb\x1f\xc3\xfe\xf6\x0f\x8e\xb7\xf6\x57\xe3\x72\x74\x3f\xf7\x9b\x40\x31\x2d\xdb\xfa\x5c\x4f\x52\xe3\x04\x3e\x18\x94\x32\xa8\x42\x2f\x1e\xf2\xe9\x36\x20\xb4\x53\x21\xdf\xbb\x55\xbe\xea\xf9\x97\x3f\xa5\x13\x88\xd9\x64\x6c\x77\xcc\x3d\x06\xb1\xc1\x2c\x94\x16\x7d\x69\x41\x80\x59\x48\xf4\x6f\x06\xee\x38\x3d\x69\x90\xfb\xce\xa5\xc8\x31\x68\xbc\x34\x66\x9e\xf1\xee\xb1\x00\x1a\xf6\x92\x91\xd1\xce\xa2\x89\x87\x3c\x53\x0f\xe5\x0d\x14\x64\x18\x70\x1e\xa5\x07\x96\x37\x54\x38\x27\xa3\x73\x04\x92\xc8\x06\x62\x24\x16\x90\x6a\x2a\x41\x47\x4d\x4b\x86\xc3\x21\xe0\x1a\x97\x69\xe0\xd2\xb4\x97\x81\x69\xf9\xaa\xcd\xb1\x93\x9a\x09\xb3\xf2\xcd\x14\x1b\x7b\xf5\x3b\x3b\xa0\xfe\xdd\x95\xfa\x9d\x9d\x02\x6b\x83\xd3\x66\x5e\x8e\x25\x87\x93\x05\x4d\x8c\x1d\xdf\xb9\x63\x57\xab\x17\xba\x99\x25\x40\x65\x05\xe8\x75\x48\x08\xc2\x94\xf6\x2f\x17\x26\x46\x5f\xbb\xf8\x51\xa9\xb8\xfc\x4a\x4c\x2c\xf2\xbc\xdb\x7b\x37\x61\xd4\x89\xef\x2e\x61\x57\x34\xef\xdc\x6b\xec\xed\x45\xfa\xc0\xe0\x4e\xe8\xab\x13\xd8\xb8\xd0\xc7\x28\x1e\x79\x0c\x72\x72\x1a\x33\x9c\xc5\x4c\x0c\xfc\x41\xeb\x8c\x18\x08\xe8\xf6\xa6\xe6\x67\xff\xed\xa2\xef\x01\x17\x12\x46\x77\xc4\x37\x25\x19\xd1\x03\x29\xf3\xf4\xc2\x01\x82\x98\x38\x7c\x91\x1f\x97\xb9\xfb\xaf\xcd\xed\xa7\xf5\x07\xbb\x03\xc2\x30\x0e\x5c\xfd\x72\xb3\x6b\xe4\x97\x65\x69\x69\x20\x1c\xbb\x88\xc9\xb9\x1c\xf3\x8e\xf0\x1a\x0c\xf2\xaa\xef\x6e\xd7\x37\x6e\x58\x7b\x4f\x1b\x3f\x6e\x77\xbd\x04\xcb\xc0\x3f\xb0\x05\x1f\x1d\x1a\xbc\xd9\x96\x91\x11\x3b\x96\x7d\x33\x7e\x92\x60\x77\xca\xad\xdf\x7a\x6c\x5f\xbe\x12\x93\xba\x71\xf7\x99\xa7\xba\x6a\xbe\xce\x58\x11\x21\x41\xa3\x44\x52\x52\xd4\x58\x79\x60\x1d\xec\xdb\x9b\x8f\x9b\x9b\x3f\x65\x8a\x11\xae\xb7\x1b\x3f\x5f\xb3\xf7\x37\xd8\xe0\x30\xa3\x92\xb7\x5b\x9c\x8f\x24\x38\x9c\x3c\x91\x68\xec\xcc\xf4\x40\x06\x80\xb5\xb1\x56\xff\xfe\x51\xa6\xd6\x93\x44\x9a\xb8\x00\xd6\x67\x6b\xd6\xfe\x1d\xb6\xfd\x22\xce\x8f\xcd\xd1\x90\x28\x12\x7b\x82\x97\x39\xb1\x75\x3a\x44\xd6\x69\xcd\x19\x16\x14\x85\x86\x46\x46\x0c\xc2\x6e\x7d\x18\x2c\x7f\xce\xc1\xfb\xd4\x87\x77\xe0\xe2\x51\x35\xd9\x39\xda\xdf\xba\x6d\xb5\xeb\xff\x69\xde\xd9\xb5\xfe\xbd\x59\xff\xf1\xc0\xfa\xea\x13\xf7\x88\xe5\x17\x87\xb7\xdd\x0c\x50\xed\xc9\x7e\xfd\x1f\xfb\xd6\xca\x3d\x6b\xfd\x07\x7b\x6b\xb5\x4d\x6c\x6f\x6c\xd5\x7f\xfa\x26\x66\xcd\xaf\x61\x72\x46\x93\x4d\x25\xbe\x25\x22\xec\x2a\x40\x51\xa4\x96\x40\xf9\x6c\x74\x2b\x83\x1c\x6b\x5d\x6b\x7d\xcf\xfe\xf4\x6f\xd6\xfe\xba\xb5\xb2\x59\x5c\x40\x4b\x93\xd6\xca\xe6\x8b\xc3\xdb\x8b\x50\x36\xd1\xa4\xb5\xfe\xb1\xfd\xf9\xa3\x05\xb4\x14\x6d\x8f\x7b\x48\xf5\x10\x5a\xd4\x78\x7e\xd3\x3e\x78\xe8\x7a\xcc\xb1\x0b\xb0\x86\xb9\x9a\xb7\x09\x1a\xdb\x3b\xf5\xfb\xd7\x82\x76\xa6\x0c\x8d\x3f\x22\x02\xf3\x0c\x0c\xa2\x11\x38\xb8\xad\x8b\x77\x5a\xb5\x16\x54\x0c\x50\x4d\xc5\x88\x81\x70\x09\xcb\x81\xdc\x5a\x9c\x31\x31\x46\x2a\x01\x8e\x90\x58\xa0\xe4\x7e\x35\xe9\xa5\xa8\x40\x0f\x41\x88\x86\x05\x6c\xa0\x03\x49\xe1\x84\x09\x8f\xc9\x50\xc0\xe9\x5c\xcd\xeb\x6b\xf5\x67\xbb\x45\xaa\xc5\x64\xc9\xde\x7c\x6c\x6f\xad\xba\xd7\x5e\x1c\x7a\x65\x85\x8d\xab\xcf\x6a\x4f\xf6\x55\x29\x6a\xb7\x22\x22\xb7\xb0\x72\xa3\xb9\xfd\xb3\x75\xfd\xaa\xfd\xf9\x23\x7b\x6d\x97\x9d\xf3\x42\x1f\x76\xcc\xb3\x69\x11\xec\xe8\x99\x1a\x86\x0e\x8e\x18\x6f\x1b\xb1\xce\x1e\xf4\x2c\xd0\x59\x66\xf9\x43\x49\xea\x88\x0f\x4c\x1e\x03\xc1\x60\x19\xe0\xd0\xd1\xa3\xac\x05\xb4\x94\x04\xb3\xd8\xb7\xbc\x73\x34\x54\xf8\x75\xfb\x6e\xcd\xea\xbc\x4b\x9f\xea\x5d\xf6\xbd\xb2\x61\xde\xa8\x8c\xa8\xce\xcd\xa7\xee\xf0\x4c\xda\xf1\x1b\x6e\xb4\xcf\x4d\xfe\xd9\x9c\x98\x38\x89\x40\x52\x23\xb5\x8b\x43\x5a\x85\x29\xd3\x51\x45\x22\xad\x7a\x94\x50\xb3\x41\x5d\x7a\x0b\x75\xc2\x4f\xbb\xb2\xe7\x4f\xa3\x53\xba\x3e\xea\x3b\xc9\xc8\x2b\xdb\xa9\x20\x28\x22\x1c\x1c\x06\xc1\x9a\x96\xcc\x22\xa6\x4c\x52\xd1\xb0\xf4\x21\xad\x93\x4d\x94\xe3\xd8\x38\xb2\x3c\xf2\xbf\x00\x00\x00\xff\xff\xa7\x18\x59\xe1\xb1\x97\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 38833, mode: os.FileMode(420), modTime: time.Unix(1708664436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1708664436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
