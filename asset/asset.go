// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x4f\xdc\x46\x1e\x7f\xcf\xa7\x18\xed\xf5\x5d\x97\x02\x69\xee\xa4\x46\x42\x3a\x1a\x5a\x09\xf5\x4e\x8d\x9a\xa6\x3a\x29\xcd\xa1\xc1\x9e\x65\x5d\xbc\xb6\x3b\x1e\x13\x68\x0f\x89\x34\x0f\x3c\x14\x0a\xba\x92\xd0\x24\x34\xed\x46\xb4\xe5\x7a\x2d\x50\x5d\x93\x26\x40\x2e\x5f\x66\xed\xdd\x7d\xc5\x57\x38\x79\xec\xdd\xb5\xc7\x8f\xbb\x5e\x92\xa5\x37\xaf\x12\xd6\x33\xff\xe7\xff\xcc\x6f\xfe\x9e\x19\x7f\xda\x07\x40\x4e\xbf\x0a\x27\x27\x11\xce\x9d\x03\xb9\x33\xaf\x0d\xe6\xf2\xf6\x6f\x92\x52\x50\x73\xe7\x80\xfd\x1c\x80\x1c\x91\x88\x8c\xec\xe7\x6f\x42\x61\x0a\x29\x22\x18\xb9\x30\x46\xdb\x01\x90\x13\x91\x2e\x60\x49\x23\x92\xaa\xd8\x2d\xde\x2f\x22\x50\x90\x64\x04\xa0\xae\x23\x02\x26\xdc\x0e\x50\x93\x1a\x1d\xa6\x11\xd6\xdd\xc6\x43\x2e\x3b\x00\x72\x82\xaa\x10\x28\x90\x26\x4f\x00\x72\x0a\x2c\x51\xa6\xa8\x20\xcf\xba\xcd\x00\xc8\x19\x58\xb6\x7f\x2c\x12\xa2\xe9\xe7\x06\x06\xec\x87\xfd\x02\x22\xc2\x6b\x82\x5a\x6a\xb5\x42\x25\x28\xd1\x76\x8a\xaa\xa0\x3f\xa3\x19\x58\xd2\x64\x44\x9b\xd0\x16\x73\x7d\x00\xcc\x51\x45\x09\x9c\xd4\x73\xe7\xc0\x65\xfa\x73\x80\xf5\x98\x22\xa2\x99\x8b\x08\x4f\x4b\x02\x6a\x11\x67\x54\xae\x1f\x7e\x55\xdb\xdd\x76\x09\xe7\xc3\x09\xbd\x4b\x5b\xeb\x89\xa4\xe6\x97\xea\xe5\xa7\xd5\xdd\x72\x75\xfd\x56\x3c\xc1\x11\xdb\xbc\x49\xe4\xac\x3b\x0b\x95\xc3\xc7\x69\xc8\x8d\xaa\x57\x15\x59\x85\x62\x12\xc5\xca\x93\xcf\x6b\xcf\x9e\x59\x5b\xab\xe6\x72\x39\x9e\xe2\x79\x55\x29\x48\x93\x49\xf4\xcc\xe5\x1d\x6b\xfe\x5a\xfd\xe6\x6a\xf5\xd9\x6e\x3c\xbd\x4b\x5a\x3a\xf9\x96\x2b\x47\xdf\xa6\x91\xef\x03\x09\x5d\x4d\x74\xc7\xc3\x1b\xb5\x1f\x16\x7d\xd4\xfa\x00\xb8\x42\x03\x47\x17\x8a\xa8\x84\x5a\xb1\x43\x23\xb2\x11\xcd\x34\x3a\x73\xcd\xb6\x82\xaa\xe8\x86\xaf\x31\xd4\x34\x59\x12\xa0\xcd\x68\xe0\x23\x5d\x55\x1a\x1d\xbd\xbf\xab\x02\x41\xa4\x5f\x27\x18\xc1\x52\x8b\x96\x86\x55\xd1\x10\xba\x44\x0b\x92\xa2\xde\x4a\xf3\x81\xe9\xa1\x01\x81\xba\xcd\x9b\x86\x93\xc8\x9b\x95\xb6\xe6\x46\xa9\x04\xf1\x2c\x35\x10\x75\x5c\xe5\x79\xd9\xba\xb6\xd7\xb4\x62\xd0\x8e\xb5\xe7\x1b\xe6\xfd\x07\x8e\x1d\xcd\x67\x5f\x9a\x4b\xab\x51\x1d\x55\x0d\x61\x2a\xf1\x98\x18\x08\xa2\xf1\x51\x44\xec\xac\xf6\x34\xc7\x48\xd7\x54\x45\x47\xba\x4f\x42\x00\x72\x67\x06\x07\x99\x9f\x82\x52\x8d\x00\xdd\x10\x04\xa4\xeb\x05\x43\x06\x0d\x4a\xaf\x79\xc8\x3b\xda\xda\x7e\x86\x01\x62\x00\xe4\x5e\xc1\xa8\x60\xd3\xf9\xc3\x80\x88\x0a\x92\x22\xd1\x0c\x1f\x98\x1e\x72\x84\xce\xf9\x9a\xcf\x79\xfe\x9a\xcb\xfb\x25\x1d\x4a\x94\xf4\x3d\x44\x0c\xac\x20\x11\x5c\x2d\x22\x05\x90\x22\xb2\xc5\x55\x0d\x2c\x20\x20\x60\x04\x09\x12\x1b\xaa\xc4\x88\x1f\x27\xc2\xd9\x2c\x22\x88\x48\x46\x59\x45\x38\x9b\xc2\x5f\x61\x22\x7c\x6c\x20\x9d\x00\x11\x12\x08\xa6\xa1\x2c\x89\x90\x20\x50\x80\x92\x8c\xc4\x2e\x38\xf2\x2d\x8c\x55\xac\xbf\x3b\xf1\x11\x12\x48\x5a\x77\x9e\xed\xc8\x9d\x86\x8e\x30\x10\x55\xa4\x03\x45\x25\x00\x1a\xa4\x88\x14\xe2\xe6\x6e\x87\xf6\x7c\x3d\xb3\x18\x45\x38\x8d\x80\x86\x70\x49\xd2\xed\x09\x1b\x10\x15\x40\xea\x61\x9f\xfb\x3b\x14\x2f\x53\xc4\xd9\xd2\x15\x54\x43\x89\x73\x72\x1c\xf3\x37\xda\x64\xde\x88\x33\x43\xa3\x01\x66\x8f\x91\xb2\x24\x90\xce\xb8\x9f\x69\xd7\x33\x4d\xb5\x65\x55\x98\x8a\x0d\xec\x38\xae\x9d\xea\x4c\x54\x15\x94\xa0\x32\x0b\x24\x05\x40\x60\x28\x12\x01\x44\x2a\x75\xe6\xf6\x3f\xa6\xc8\x72\x7b\xb0\x47\x18\x20\x3b\xf7\x3a\x62\x22\xa2\x02\x34\x64\x92\xc8\xe8\x92\x82\x66\x34\x24\x90\x44\x56\x5d\x1e\x2e\xfa\x42\xc4\xf6\xc3\x50\xf7\x37\x3f\x82\x6a\x3e\xb9\xe2\xe9\xa6\x23\xc1\xc0\x12\x99\x65\xba\x32\x8a\x8f\x68\x1a\x9d\x4e\x2f\x5f\x61\x74\x7c\x13\x41\x8c\xf0\xfb\xea\x14\x52\xe8\xe3\x50\x31\x1b\xbf\x36\xc5\xcd\x69\x46\x34\x22\xb0\xee\xff\x6a\xdd\xd9\x77\x01\x5d\x34\x22\x70\x9a\x65\x46\x04\x97\x68\x42\x72\x44\xc0\x11\x01\x47\x04\x1c\x11\x70\x44\xd0\x16\x57\x8e\x08\x7a\x19\x11\x68\x10\xc3\x12\x22\x08\xb3\xb8\x80\xd1\xa1\x51\xcf\x10\xd1\x84\x31\xc9\x8a\xcc\xae\xc3\xf7\xaf\xd7\xf6\x6e\x5b\x3b\x65\xf3\x68\x8d\x6d\x2a\xd1\x16\x1f\x1b\x08\xcf\xb2\x8f\x6c\xc7\x4b\x18\xd9\xf3\x6f\x01\xca\x3a\x62\x1e\x93\x59\x8d\x4a\x30\xa1\xaa\x32\x82\x4a\x2e\x1c\x45\x9c\x32\xb0\x43\xff\x75\xfd\x41\x0b\x23\xa2\x5b\x21\xeb\x77\x0a\x90\xcd\xf2\x88\xa6\xea\xd1\x68\xa8\xf6\xc5\x6f\xe6\xda\x1d\xa7\x68\x66\x6e\xed\x9b\x5f\xcf\xc7\x60\x22\xf3\xe6\xe3\xca\xe1\x1d\x07\x13\x05\x3b\x9a\x7b\x4f\xcd\xed\x3b\xd5\xc3\xbb\xe6\xc2\xc1\xf1\xd1\x4a\xed\xf9\xdd\xfa\xc2\x4a\xe5\xe9\x37\xe6\xda\x5e\xe5\xf0\x3b\x6b\xe9\x73\x73\x79\xc7\xe9\x15\x83\x9e\x98\x32\xdf\xf8\xdb\x88\x08\xc5\x4b\xb8\xd7\x6b\x2a\x05\x49\x46\xb4\x9e\x3c\xee\xd6\x93\xc7\xa1\x26\x35\x1c\x32\x3d\xd4\xd0\xe2\x3d\x97\x1f\x07\x5a\xed\x88\xc0\x81\x16\x07\x5a\x1c\x68\x71\xa0\xc5\x81\x56\x3a\xa0\x35\xa1\x8a\x01\x84\xe4\x80\xa7\xb0\x27\x1e\xec\x44\xb0\xc1\x42\xa7\x13\x9b\x08\x69\x00\xa5\xb1\x44\x12\x2e\x63\x5f\x0c\xf6\x20\x32\xb3\x8d\xa2\xa7\x7d\x63\x65\x2e\x6e\xd6\xca\x3b\x71\x95\x29\xfa\xce\x34\xd8\x8c\x41\x52\xde\xf7\xaf\xe3\x17\xe0\xa4\xa4\x9c\x86\x42\x54\x43\x50\x8e\x94\x38\x52\xe2\x48\x89\x23\xa5\x48\xee\x1c\x29\x71\xa4\xc4\x8a\xdd\x36\x52\xd2\xe0\x24\x4a\xa8\x48\x5d\x80\x93\x08\x28\x46\x69\x02\xe1\x3c\x70\x8d\x32\x3c\xd4\xfd\xda\x94\xa4\x10\x34\x89\x30\xdb\xbb\xa0\xe2\x12\x24\x6e\x83\x3f\x9d\xcd\x45\xf9\x2b\x42\x41\x59\x2a\x49\x24\x8d\x86\xba\xf4\x09\xf2\xe8\x37\x78\x5a\x14\x9c\x42\xb3\x57\x55\x2c\x26\xa8\xf8\x8e\xd3\x0a\xe8\x08\x62\xa1\x98\x07\xb2\x34\x85\xce\xb9\x5d\x87\x67\x66\x8e\x8f\x56\x1a\x7f\x48\xe2\xf0\xd0\x3f\x6c\xe2\xc3\x33\x33\x33\xdd\x37\x82\x4e\xb0\xa4\x4c\xb6\xab\xa4\xae\xe2\x24\x27\x5e\x54\x31\x01\xb2\xa4\x13\x57\x39\x60\xf7\x19\x7e\x15\xe6\xfb\x27\xf2\xaf\x0a\xf9\xfe\x80\x85\x4e\x44\x97\xd4\xa0\xdd\xb7\x39\xb0\x57\x11\xfb\xc0\xa7\x92\x38\xe7\x85\xed\x0e\x44\x8b\x41\xee\xdf\xd6\xef\x6e\xc7\xd5\x4f\x69\x03\x07\xbf\xa7\x45\xee\xa3\x0e\xcf\x5e\xc1\xed\x0d\xe7\xab\xce\xf8\x9c\x67\x9f\x6b\xd8\x56\x86\x48\x8e\x74\x73\x1c\xbd\xb7\x21\x02\x47\xef\x1c\xbd\x73\xf4\xce\xd1\x3b\x47\xef\xe9\xd0\xbb\x94\x04\xfb\xc6\x46\xc3\x51\x8f\x06\x49\xb1\xbd\x32\x68\x06\x10\xfb\xbb\xc1\x44\xaa\x73\x42\x24\x6d\x1d\xd3\x39\x29\x12\x03\x73\xfc\x27\x4e\xc6\x9d\x3f\xff\x22\xe9\xa4\x67\xc0\x4e\x54\x90\xb7\x44\xe5\x65\x4a\x0e\x74\x38\xd0\xe1\x40\x27\x92\x3b\x07\x3a\x1c\xe8\xb0\x62\x87\xce\xfe\xcc\xf9\xcb\xae\xcc\xff\x89\x30\x64\xa6\x5f\xc5\x22\x3d\x58\x3b\x14\x39\xed\x1b\xf4\x58\x63\x3f\x3d\x76\x87\x4b\xa9\x37\x96\x55\xcb\xbb\xb5\xdd\x6d\xe7\xb4\x63\xf5\xde\x8d\x60\xd1\x83\x71\x50\x68\xfb\xe3\xa3\x15\x73\xfd\x7b\x73\xf1\x6e\xe5\xe8\x5e\xed\xe1\xbf\x6b\x0b\x3f\x9a\xcb\x3b\xd6\xf5\x9b\xe6\xad\x47\x31\xc0\xc2\x77\x10\x73\xfc\xbc\x2b\x78\xaf\x83\x0a\x57\x4e\x8e\x28\x38\xa2\xe0\x88\x82\x23\x8a\x48\xee\x1c\x51\x70\x44\xc1\x8a\x7d\xaa\xb6\x88\x79\xa6\xba\xae\x6d\x02\xf3\xdf\xbd\xd0\x15\xf0\xd4\xdd\xe2\x89\x8b\xa2\x98\xad\xf9\x71\xf5\x93\xc6\x06\x7b\x1b\x10\x75\xb4\x33\xbf\xd5\xb1\x2b\x3b\xf3\xfd\xa8\xea\x34\xef\xcb\x77\x7c\xc1\x77\xe5\x73\xc8\x05\x38\xe4\xe2\x90\x8b\x43\x2e\x0e\xb9\x5e\xc4\x5e\x33\xac\x86\x6c\x99\x60\x55\x8c\x68\x95\x6e\xb7\x4e\xcc\x8b\xab\xce\x36\x1e\x95\x54\xd1\x90\x93\x76\xc8\x85\x37\x7a\x59\x12\xc3\x99\x8b\xd2\x27\x49\x22\x3b\xd5\x25\x6b\x6b\xde\xdc\xfe\xc1\xfc\x79\xb3\xb6\xfc\xd9\x87\xca\x87\x8a\x1e\xd2\xb1\x57\xf7\xbd\x09\xaa\x42\x90\x42\xde\xb7\x99\x24\xe8\xba\xb1\x67\xad\x5c\xab\xde\xbb\x51\xfd\xe5\xd0\x7c\xf0\xb9\xad\xa8\xdb\x79\x9c\x84\xf4\x7e\x49\x7e\x43\x33\x04\x29\xf4\xd6\xbd\x94\xda\x98\xeb\x5f\x54\x8f\xe6\x6d\x6d\x22\xbb\xbe\x24\x55\x08\x91\x13\x94\xa8\x3d\x5f\xb0\xb6\xbe\xb1\x36\x1f\xd7\x37\x7f\xb5\x35\x08\xe9\x91\x59\xf6\x93\x09\x3b\x0d\x26\xee\x44\x34\x17\x6f\x55\x97\x16\xac\xdb\xfb\xf5\x85\x35\x30\x38\x5c\x79\xb2\x6a\x2e\xde\xb2\xb5\xb4\xfb\x02\xc5\x28\xf5\x44\x8a\xfd\x7e\x56\x96\xad\xdb\x2a\x53\x2d\x2b\xab\x4b\x8b\xd6\xd6\x4f\xe6\xda\x6f\x31\xab\xc9\xe0\x6d\x78\xa1\xbd\x98\x05\xa2\xf7\x2a\xca\xf1\x0f\x5c\xa9\x7a\x7b\x79\x38\x3d\xe4\xca\xc9\x97\x80\x7c\x09\xc8\x97\x80\x7c\x09\x18\xc9\x9d\x2f\x01\xf9\x12\x90\x15\x3b\x14\x2f\xf8\x2e\x64\xee\x0a\x5c\x68\x17\x0f\x48\xe8\x6a\xfb\x75\x66\xe7\x22\xe1\x0e\xea\xcc\xde\x8e\x5d\xa9\x33\x7b\xae\x3d\x1e\xb7\xff\xdf\xfb\x45\xe6\xe9\x21\x57\x4e\x8e\x22\x38\x8a\xe0\x28\x82\xa3\x88\x48\xee\x1c\x45\x70\x14\xc1\x8a\xcd\x0b\xc9\x3d\x59\x48\xa6\xff\xc6\xcb\x1b\xd6\xa4\x67\x6b\x8e\x3d\x52\x63\x0c\x45\xc4\x61\x38\xda\xfb\xf5\x8b\xae\xc0\xe8\x2e\x57\xdd\x5c\x94\x9d\xfa\x38\xcc\x29\x80\xd9\xfa\x69\xc1\xd9\x3a\x07\xda\x1c\x68\x73\xa0\xcd\x81\x76\x24\x77\x0e\xb4\x39\xd0\x66\xc5\xe6\x40\xbb\x67\x81\xb6\x9e\x02\x69\x07\xda\x64\x7f\x6f\x0c\x31\x86\xc1\x6d\xd0\x04\x95\x58\xd0\x13\xa6\x66\x9e\x7d\xee\x61\x7a\x99\x79\x06\x1a\x2a\x30\xbf\x5f\xf1\x47\x30\x23\x89\xa0\xca\x32\x12\x6c\x1b\xbc\xdd\x44\xd4\x25\x43\x26\x12\x5f\x1d\xf4\xe2\xea\xa0\xf9\xc5\x46\xcf\x88\xd5\x8c\xa3\x5c\x9b\x17\xa3\x7a\x56\x15\x11\x57\xee\x30\x57\xed\x78\x86\x39\x77\x40\x62\x70\x7b\x4c\xf8\x46\x0d\x69\xa1\xa3\xa8\x3b\x78\x74\x4e\xdd\x25\x10\x4a\xdc\x8d\xd8\x4e\x49\xd3\xee\xa1\x84\xed\x00\x8f\xa0\x1b\x16\xa7\x81\x28\x8d\xe3\xca\x26\x4f\xeb\x6b\xa4\xde\x8d\x3e\xe1\x72\x09\xaa\xa1\x44\xba\x2a\xb3\x64\x0e\xf5\x70\xd9\xdc\x0f\x65\xfe\x54\xb6\x6e\xef\x7b\x64\xeb\x63\x64\x0c\x1f\xd6\x42\x66\xbd\xe0\xac\xc2\x16\x48\x18\x43\xb9\xd2\xb9\x7f\x3b\xc9\xd4\x58\x62\xb7\x7b\x9f\x7e\x86\x74\xf1\xbf\x2a\x03\x6d\x46\x9c\xdd\x3b\x68\xbc\x64\x5d\x22\xcf\x20\x64\xd0\xe4\x74\x66\x66\x8c\xfd\x83\xf3\x73\xc4\xec\x9c\x16\x82\x84\x79\x2f\x3c\x3b\xcc\xef\x3f\xb3\x1e\x6c\x39\x7b\xd9\x2a\x47\xf7\x9c\x1d\x51\xe6\xf6\xbd\xca\x93\x1f\x81\xb5\x34\x5f\x39\xfc\xce\xfa\x6a\xcf\xf9\xbb\xfd\xe4\x89\xc8\x94\xd0\x4c\x68\x7e\x9b\x2b\x43\x60\x38\x5f\x5e\x89\x30\x72\xe3\xa3\x28\x71\x76\xf2\x7d\x96\x25\x21\xdc\x03\xc7\xbb\xfe\x4f\xa7\x32\x02\x31\x5b\x0f\x6c\x8f\xb8\x4b\x20\x32\x1b\x03\x95\xb9\x17\x96\x36\x41\x38\xee\x49\x1c\x9a\x13\xee\x1d\xe5\xb4\x20\x69\xae\xaf\x58\x9b\x8f\x9d\xf3\xfd\xc7\x47\x2b\x34\x9b\xee\xd7\xca\x2b\xe6\xc3\x07\xe6\xe2\xb7\xce\x77\xf6\x3a\x9f\x80\xe2\x92\xc6\x73\x9a\x3e\x43\x10\xba\x25\xb7\xa4\xfc\x09\xf5\x13\x5d\xf6\x26\xc4\x40\x62\x3e\xbd\xa5\xc0\x09\x19\x5d\x24\x90\x84\xea\xc1\x84\x52\x0e\x29\x46\xc9\x6f\xab\x51\x49\xb7\x29\x78\xaf\xcb\xca\x39\x44\x7d\x3f\x8d\xba\x8b\xfa\x86\x49\x9b\x14\x5b\xab\xfd\x20\x29\x8f\xe7\xd7\xf7\xaa\x1b\x3b\xa0\xfa\xfd\xb5\xea\xc6\x4e\x8e\xd5\xc1\x36\x84\xbb\x6c\xcf\xe0\x0b\x41\x15\x23\xf3\x35\x33\x5a\x6a\x04\x8b\x53\xac\x00\x94\x97\xaf\xbd\x06\x09\x41\x98\xb6\xfd\xfb\xe5\xc1\xfe\x37\xae\x7c\x3a\x94\x9f\x7b\x25\x62\x6c\x41\xba\x0e\x27\xb3\x0c\x2e\x8c\x38\x0d\x82\x31\x99\xd2\x74\x45\x7d\xe3\x6e\x6d\x6f\x2f\xd4\x07\x3a\x77\x42\x57\x9d\xc0\x26\x7b\x17\x47\xe5\xd0\x3b\x56\xe3\x2b\x63\xc1\xc2\x58\xec\x40\xee\xd7\x2e\x6a\x48\x77\xa2\xa9\xfe\xe5\x7f\xdb\x88\x3d\xe0\xcc\x03\xe1\x81\xf8\xb6\x24\x23\x7a\xdb\x5d\x96\x28\x94\xc4\x13\x8b\x41\x49\x0c\x77\x70\x76\x38\xe2\xbc\xd2\xab\x97\x9f\x56\xef\xef\x9e\x10\x26\xb1\x51\xda\xd7\x9b\x27\x02\xe2\xdd\x4b\x7c\x4e\x06\xee\x54\x77\xcb\xd5\xf5\x5b\xe6\xde\xd3\xda\x2f\xe5\xb6\x57\x0a\x29\xe8\xfb\x5e\xbd\x86\xe7\xaf\x3b\x25\x32\x3c\x22\x13\xce\x33\x2d\xc7\x31\x76\xe6\xc5\xea\xf2\x63\x6b\xfe\x5a\x44\x11\xc0\x79\xbf\x38\xd2\x96\xf9\x5a\x01\x2d\x42\x82\xfa\x89\x54\x4a\x10\x63\xf1\xbe\x79\x78\x10\xa8\x45\x44\x27\xb2\xe3\xed\xda\xa3\x1b\xd6\xc1\x3a\x9b\xc1\x63\x0a\x79\xb7\x41\xf9\xa5\x64\xf0\xeb\x67\x62\x95\x1d\x1b\x3d\x91\x04\x30\xd7\x57\xab\x3f\xc4\x82\xd5\xa6\xf5\x24\x11\xd8\xcc\x80\xf9\xe5\xaa\x79\xb0\xc1\xda\x2f\xe4\x06\xc9\x0c\x86\x44\xa1\x00\x11\xbc\xc8\xd9\xa7\x15\x10\x69\xe7\x1e\x3b\x2d\x28\x54\x0c\x64\x46\x04\x0c\x6e\x7c\x1a\x28\xfb\x7a\xd8\xbd\xec\xdf\xbd\x72\xed\x65\x99\xec\x22\x8d\xb7\x76\xad\x76\xf3\x3f\xf5\x8d\x5d\xf3\xe7\x4d\xe7\x34\xa7\x73\xc9\xea\xf1\xd1\x8a\x53\xaf\xa8\x3c\x39\xa8\xfe\xeb\xc0\x5c\xbc\x6b\xae\xfd\x68\x6d\x2d\x35\x1b\x5b\xeb\x5b\xd5\x5f\x1f\x86\xa7\x84\xae\x62\x72\x5e\x95\x8d\x52\xb4\x25\x42\xf4\xca\x41\x51\xa4\x9a\x40\xf9\x42\xb8\x95\x41\x86\x05\xa6\xb9\xb6\x67\x7d\xf1\x4f\xf3\x60\xcd\x5c\xdc\xcc\x4f\xa1\xd9\x61\x73\x71\xf3\xf8\x68\x65\x1a\xca\x06\x1a\x36\xd7\x3e\xb3\x6e\xef\x4f\xa1\xd9\x70\x7d\x9c\x6b\x6a\x7b\x50\xa3\xda\xf3\x05\xeb\x70\xdb\xf1\x98\xad\x17\x60\x15\x73\x24\x6f\x36\xa8\x95\x77\xaa\xf7\x6e\xf8\xf5\x4c\x48\x8d\xbf\x22\x02\xb3\x24\x06\x51\x09\x3c\xb9\x3a\xf9\x7b\x8d\x77\xec\x94\x0d\x50\x8c\x92\x1e\x81\xb3\x62\x30\x7b\x66\x29\xce\x1b\x18\x23\x85\x00\x9b\x09\x88\x42\x7a\xce\x77\x53\x5e\x88\x08\xf4\xd4\x79\x38\x2c\x60\x07\x3a\x10\x37\x9c\x30\xc3\x63\x3c\x14\xb0\x83\xab\x7e\x73\xb5\xfa\x6c\x37\x4f\xa5\x18\x1e\xb2\x36\x1f\x5b\x5b\x4b\xce\x6f\xc7\x47\xee\x76\xb2\xda\xf5\x67\x95\x27\x07\x8a\x14\x56\xe3\x0e\x29\x00\x2c\xde\xaa\x97\x1f\x99\x37\xaf\x5b\xb7\xf7\xad\xd5\x5d\x76\xce\x0b\x7c\xda\x2d\x4b\xa9\xdb\x1f\xe8\xa9\x0c\x43\x93\x23\xc2\xdb\x7a\xa4\xb3\x4f\x7a\x16\x68\xad\x85\xbc\x43\x49\x62\xc6\xfb\x26\x8f\x13\xc1\x60\x29\xe0\xd0\xcb\x47\x59\x53\x68\x36\x0e\x66\xb1\xa7\x7b\x33\x18\x2a\x78\xcc\xba\x5d\xb5\x5a\x67\xa8\x13\xbd\xcb\x9e\x27\xea\xe5\xd7\x5b\x21\xbb\x32\xb3\x89\xdb\x3b\x93\x76\xf4\xeb\x21\x1a\x73\xc3\x1f\x1a\x83\x83\xaf\x23\x10\x67\xa4\xe6\xa6\x80\xc6\x86\x84\xd1\xb0\xcd\x01\x8d\x7d\x08\x01\xb3\x41\x4d\x7a\x07\xb5\x86\x9f\xe6\x8e\x8e\xbf\xf5\x8f\x68\x5a\xff\x98\xa7\x0c\xeb\x6c\xd7\x28\x22\x28\x22\xec\x4f\x03\xff\x5e\x86\xd4\x2c\x46\x0c\x52\x54\xb1\xf4\x09\xdd\x1f\x19\xcb\xc7\xd6\xb1\x6f\xae\xef\x7f\x01\x00\x00\xff\xff\x97\xe8\x73\x41\xab\x93\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 37803, mode: os.FileMode(420), modTime: time.Unix(1708578324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1708578325, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
