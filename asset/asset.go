// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5b\x6f\xdc\xc6\x15\x7e\xd7\xaf\x18\x6c\xf3\x96\xd5\x65\x6d\xb7\x40\x0c\x08\xa8\x62\x25\x80\x90\x16\x31\xe2\x38\x28\xe0\xba\xc2\x88\x9c\xd5\x32\xe2\x2d\xc3\xa1\xbc\x4a\x2a\xc0\x8e\x6f\x92\x63\x45\x42\xe3\x58\xb1\xad\xa4\x51\xe0\x24\x6a\xda\x4a\x0e\x9a\x38\xb6\x24\xd7\x7f\x66\xb9\x97\x27\xff\x85\x82\x43\x72\x97\x1c\x5e\x77\xb9\x6b\xad\x9a\x79\x92\x96\x3c\x3c\x97\x39\x33\x67\x3e\x9e\x39\x33\xfc\x68\x04\x80\x82\x71\x09\xce\xcf\x23\x5c\x38\x0d\x0a\x27\xc6\x26\x0a\x45\xfb\x9a\xa4\x96\xb5\xc2\x69\x60\xdf\x07\xa0\x40\x24\x22\x23\xfb\xfe\xeb\x50\x58\x40\xaa\x08\xa6\xce\xce\x50\x3a\x00\x0a\x22\x32\x04\x2c\xe9\x44\xd2\x54\x9b\xe2\xdd\x0a\x02\x65\x49\x46\x00\x1a\x06\x22\x60\xce\x7d\x00\xea\x92\xf7\xc0\x22\xc2\x86\x4b\x5c\x72\xc5\x01\x50\x10\x34\x95\x40\x81\xb4\x65\x02\x50\x50\xa1\x42\x85\xa2\xb2\xbc\xe4\x92\x01\x50\x30\xb1\x6c\x5f\xac\x10\xa2\x1b\xa7\xc7\xc7\xed\x9b\xa3\x02\x22\xc2\x98\xa0\x29\x1d\x2a\xa4\x40\x89\xd2\xa9\x9a\x8a\x7e\x8f\xaa\x50\xd1\x65\x44\x49\x28\xc5\xf2\x08\x00\xcb\xd4\x50\x02\xe7\x8d\xc2\x69\x70\x81\x5e\x0e\x89\x9e\x51\x45\x54\x3d\x87\xf0\xa2\x24\xa0\x0e\x73\xc6\xe4\xd6\xc1\x17\xcd\xdd\x87\x2e\xe3\x62\x34\xa3\xb7\x29\xb5\x91\xca\xea\xf2\x6a\x6b\xfb\x69\x63\x77\xbb\xb1\x71\x23\x99\xe1\x94\xdd\xbc\x69\xec\x4e\x8d\xd5\xef\xde\xac\x1d\x3c\xce\xc2\x70\x5a\xbb\xa4\xca\x1a\x14\xd3\x78\x9e\x1c\xab\x3d\xf9\xa4\xf9\xec\x59\x7d\x6b\xcd\xba\xb5\x9d\xcc\xf3\x8c\xa6\x96\xa5\xf9\x34\x8e\xd6\xad\x9d\xfa\xe5\x2b\xad\xeb\x6b\x8d\x67\xbb\xc9\xfc\xce\xeb\x59\x34\x2c\x8d\xd5\x9e\xdc\xaa\x1d\x7e\x9d\x45\xc3\xf7\x24\x74\x29\x8d\xdf\x89\xb1\xd6\x37\xd7\x9a\xdf\xaf\x04\xf8\x8d\x00\x70\x91\x76\x20\x43\xa8\x20\x05\x75\xfa\x10\xed\x99\x5e\xaf\xa6\xbd\xb4\xd0\xa6\x15\x34\xd5\x30\x03\xc4\x50\xd7\x65\x49\x80\xb6\xa8\xf1\xf7\x0d\x4d\xf5\x1e\xf4\x5f\xd7\x04\x82\xc8\xa8\x41\x30\x82\x4a\x87\x97\x8e\x35\xd1\x14\xfa\xc4\x0b\x92\x8a\xd1\x19\xee\xe3\x8b\xa5\x71\x81\xba\xce\x3f\x1c\xe7\x91\x7f\x74\xda\x96\x9b\x8a\x02\xf1\x12\xed\xb7\xd4\x79\xb5\xe7\xdb\xf5\x2b\x7b\xed\x76\x0c\xb7\x64\xf3\xf9\x1d\xeb\xc1\x57\x4e\x3b\x5a\xcf\x3e\xb3\x56\xd7\xe2\x1e\xd4\x74\x84\xa9\xc6\x33\x62\xa8\x23\xcd\x4e\x23\x62\x8f\x6e\x1f\x39\x46\x86\xae\xa9\x06\x32\x02\x1a\x02\x50\x38\x31\x31\xc1\x5c\x0a\x6b\x35\x05\x0c\x53\x10\x90\x61\x94\x4d\x19\x78\x9c\xc6\x7c\xec\x1d\x6b\x6d\x3f\xc3\x10\x33\x00\x0a\xaf\x60\x54\xb6\xf9\xfc\x66\x5c\x44\x65\x49\x95\xe8\x48\x1f\x5f\x2c\x39\x4a\x17\x02\xe4\xcb\xbe\x5f\xcb\xc5\xa0\xa6\xa5\x54\x4d\xdf\x41\xc4\xc4\x2a\x12\xc1\xa5\x0a\x52\x01\xa9\x20\x5b\x5d\xcd\xc4\x02\x02\x02\x46\x90\x20\xd1\x33\x25\x41\xfd\x24\x15\x4e\xe5\x51\x41\x44\x32\xca\xab\xc2\xa9\x0c\xfe\x8a\x52\xe1\x03\x13\x19\x04\x88\x90\x40\xb0\x08\x65\x49\x84\x04\x81\x32\x94\x64\x24\xf6\xc1\x91\x6f\x60\xac\x61\xe3\xed\xb9\xf7\x91\x40\xb2\xba\xf3\x54\x4f\xee\x34\x0d\x84\x81\xa8\x21\x03\xa8\x1a\x01\xd0\x24\x15\xa4\x12\x77\xec\xf6\xd8\x9e\x27\x73\xab\x51\x81\x8b\x08\xe8\x08\x2b\x92\x61\x4f\xdc\x80\x68\x00\x52\x0f\x07\xdc\xdf\xa3\x7a\xb9\x7a\x9c\xad\x5d\x59\x33\xd5\x24\x27\x27\x09\x7f\xad\x4b\xe1\x5e\x3f\x33\x75\xda\xc1\xec\x18\x29\x4b\x02\xe9\x4d\xfa\x89\x6e\x3d\xd3\x36\x5b\xd6\x84\x85\xc4\x8e\x9d\x24\xb5\x57\x9b\x89\xa6\x01\x05\xaa\x4b\x40\x52\x01\x04\xa6\x2a\x11\x40\x24\xa5\x37\xb7\xff\x36\xc3\x28\xb7\x83\x3d\xc2\x00\xd9\x63\xaf\x27\x21\x22\x2a\x43\x53\x26\xa9\x82\xce\xab\xa8\xaa\x23\x81\xa4\x8a\xea\x73\xb8\x18\x89\x50\x3b\x08\x47\xdd\x6b\x41\x14\xd5\xbe\x73\xd1\xf7\x98\x81\x04\x13\x4b\x64\x89\x79\x94\x31\x7c\x4a\xd7\xe9\x74\x7a\xe1\x22\x63\xe3\xeb\x08\x62\x84\xdf\xd5\x16\x90\x4a\x6f\x47\xaa\xe9\x5d\x6d\xab\x5b\xd0\xcd\x78\x44\x50\x7f\xf0\x53\xfd\xee\x23\x17\xd4\xc5\x23\x02\x87\x2c\x37\x22\x38\x4f\x07\x24\x47\x04\x1c\x11\x70\x44\xc0\x11\x01\x47\x04\x5d\x49\xe5\x88\x60\x98\x11\x81\x0e\x31\x54\x10\x41\x98\xc5\x05\x8c\x0d\x5e\x46\x43\x44\x73\xe6\x3c\xab\x32\xfb\x1e\xfe\xe8\x6a\x73\xef\xf3\xfa\xce\xb6\x75\xb8\xce\x92\x4a\x94\xe2\x03\x13\xe1\x25\xf6\x96\xed\x78\x09\x23\x7b\xfe\x2d\x43\xd9\x40\xcc\x6d\xb2\xa4\x53\x0d\xe6\x34\x4d\x46\x50\x2d\x44\xa3\x88\x63\x06\x76\xe8\x5f\xd7\x1f\x34\x31\x22\xba\x79\xb2\x51\x27\x11\xd9\x4e\x8f\xe8\x9a\x11\x8f\x86\x9a\x9f\xfe\x62\xad\xdf\x75\x12\x67\xd6\xd6\x23\xeb\xcb\xcb\x09\x98\xc8\xba\xfe\xb8\x76\x70\xd7\xc1\x44\xe1\x07\xad\xbd\xa7\xd6\xc3\xbb\x8d\x83\x7b\xd6\xcd\xfd\x17\x87\xb7\x9b\xcf\xef\xb5\x6e\xde\xae\x3d\xfd\xbb\xb5\xbe\x57\x3b\xf8\xb6\xbe\xfa\x89\x75\x6b\xc7\x79\x2a\x01\x3d\x31\xc9\xbe\xd9\x37\x11\x11\x2a\xe7\xf1\xb0\xe7\x54\xca\x92\x8c\x68\x5e\x79\xd6\xcd\x2b\xcf\x42\x5d\xf2\x1c\xb2\x58\xf2\xac\x78\xc7\x95\xc7\x81\x56\x37\x2a\x70\xa0\xc5\x81\x16\x07\x5a\x1c\x68\x71\xa0\x95\x0d\x68\xcd\x69\x62\x08\x21\x39\xe0\x29\xea\x8e\x0f\x3b\x11\x6c\xb2\xd0\x69\x60\x13\x21\xed\x40\x59\x5a\x22\x0d\x97\xb1\xcb\x83\x43\x88\xcc\xec\x46\x31\xb2\xae\x58\x59\x2b\x9b\xcd\xed\x9d\xa4\xcc\x14\x5d\x39\x0d\x93\x31\x48\xca\xbf\x0e\x3b\x7b\x16\xce\x4b\xea\x71\x48\x44\x79\x8a\x72\xa4\xc4\x91\x12\x47\x4a\x1c\x29\xc5\x4a\xe7\x48\x89\x23\x25\x56\xed\xae\x91\x92\x0e\xe7\x51\x4a\x46\xea\x2c\x9c\x47\x40\x35\x95\x39\x84\x8b\xc0\x6d\x94\xc9\x52\xff\x73\x53\x92\x4a\xd0\x3c\xc2\xec\xd3\x65\x0d\x2b\x90\xb8\x04\xbf\x3b\x55\x88\xf3\x57\x8c\x81\xb2\xa4\x48\x24\x8b\x85\x86\xf4\x21\xf2\xd9\x37\x71\x5c\x0c\x5c\x40\x4b\x97\x34\x2c\xa6\x98\xf8\x96\x43\x05\x0c\x04\xb1\x50\x29\x02\x59\x5a\x40\xa7\xdd\x47\x27\xab\xd5\x17\x87\xb7\xbd\x1f\x92\x38\x59\xfa\xab\xcd\x7c\xb2\x5a\xad\xf6\xbf\x11\x0c\x82\x25\x75\xbe\x5b\x23\x0d\x0d\xa7\x39\xf1\x9c\x86\x09\x90\x25\x83\xb8\xc6\x01\xfb\x99\xc9\x57\x61\x71\x74\xae\xf8\xaa\x50\x1c\x0d\xb5\xd0\x40\x6c\xc9\x0c\xda\x03\x45\x82\xc3\x8a\xd8\xc7\x3f\x92\xc4\x65\x3f\x6c\x77\x20\x5a\x02\x72\xff\xba\x75\xef\x61\x52\xfe\x94\x12\x38\xf8\x3d\x2b\x72\x9f\x76\x64\x0e\x0b\x6e\xf7\x9c\xaf\x39\xf1\xb9\xc8\xde\xd7\xb1\x6d\x0c\x91\x1c\xed\x96\x39\x7a\xef\x42\x05\x8e\xde\x39\x7a\xe7\xe8\x9d\xa3\x77\x8e\xde\xb3\xa1\x77\x29\x0d\xf6\xcd\x4c\x47\xa3\x1e\x1d\x92\x4a\x77\x69\xd0\x1c\x20\xf6\xff\x06\x13\x69\xce\x4e\x91\xac\x79\x4c\x67\xc7\x48\x02\xcc\x09\xee\x3c\x99\x75\x7e\xfe\x41\x32\xc8\xd0\x80\x9d\xb8\x4e\xde\x51\x95\xa7\x29\x39\xd0\xe1\x40\x87\x03\x9d\x58\xe9\x1c\xe8\x70\xa0\xc3\xaa\x1d\x39\xfb\x33\xfb\x30\xfb\x32\xff\xa7\xc2\x90\xea\xa8\x86\x45\xba\xc1\xb6\x14\x3b\xed\x9b\x74\x6b\xe3\x28\xdd\x76\x87\x95\xcc\x85\x65\x8d\xed\xdd\xe6\xee\x43\x67\xbf\x63\xe3\xfe\xb5\x70\xd2\x83\x71\x50\x24\xfd\x8b\xc3\xdb\xd6\xc6\x77\xd6\xca\xbd\xda\xe1\xfd\xe6\x37\xff\x6c\xde\xfc\xc1\xba\xb5\x53\xbf\x7a\xdd\xba\xf1\x73\x02\xb0\x08\x6c\xc6\x9c\x3d\xe3\x2a\x3e\xec\xa0\xc2\xd5\x93\x23\x0a\x8e\x28\x38\xa2\xe0\x88\x22\x56\x3a\x47\x14\x1c\x51\xb0\x6a\x1f\xab\x12\x31\xdf\x54\xd7\xb7\x22\xb0\xe0\xf9\x0b\x7d\x01\x4f\xfd\x4d\x9e\xb8\x28\x8a\x29\xcd\x4f\xca\x9f\x78\x05\xf6\x36\x20\xea\xa9\x32\xbf\xf3\x60\x5f\x2a\xf3\x83\xa8\xea\x38\xd7\xe5\x3b\xbe\xe0\x55\xf9\x1c\x72\x01\x0e\xb9\x38\xe4\xe2\x90\x8b\x43\xae\x97\x51\x6b\x86\xb5\x88\x92\x09\xd6\xc4\x18\xaa\x6c\xd5\x3a\x09\x0b\x57\xbd\x15\x1e\x99\xa9\x4b\x6c\x11\x14\xb9\x75\x1d\x4c\xa5\x98\x81\x68\x4c\x9c\x49\xb3\xc8\xa5\x9b\x1d\x80\x61\xbd\x39\x41\xd1\x44\x53\x4e\x2b\x53\x8c\x26\x3a\x2a\x8d\x61\xf5\x9c\xf4\x61\x9a\xca\x46\x04\xc9\xb0\x96\x19\x0a\x9a\x4a\x90\x4a\xde\xb5\x85\x24\x5b\xe5\x52\xce\x92\x08\xd2\x23\x72\x07\xaa\x12\xa4\xd2\x93\x0d\x93\x55\x8f\xa5\x3b\x22\xbd\x09\x91\x53\x34\x8e\xa0\x18\xd2\xe8\xa3\xc3\xd4\x12\x4e\x9b\x04\xa8\xa6\x72\x5c\xc6\x84\x02\xab\x67\x34\x53\x4d\x33\x4b\x81\xd5\xa1\xb1\xaa\xfd\xff\xb1\xcf\x27\x74\xce\x2a\xcd\x94\x4c\x68\xac\xae\xd4\xb7\xfe\x65\xad\xff\x92\x90\x43\x08\x9f\x81\x18\xf9\x14\x93\x16\xf0\x1f\x44\x3a\xfb\x9e\xab\xd5\x70\x27\x05\x16\x4b\xae\x9e\xfc\xc5\x9f\xbf\xf8\xf3\x17\x7f\xfe\xe2\x1f\x2b\x9d\xbf\xf8\x27\x6a\xf1\xeb\x7c\xf1\x8f\xc2\x0b\x81\xe3\xb8\xfb\x02\x17\xba\xc5\x03\x12\xba\xd4\xfd\xea\x82\x73\x7c\x74\x0f\xab\x0b\xfe\x07\xfb\xb2\xba\xe0\x3b\xee\x7a\xd6\xfe\x7f\xf8\x97\x16\x16\x4b\xae\x9e\x1c\x45\x70\x14\xc1\x51\x04\x47\x11\xb1\xd2\x39\x8a\xe0\x28\x82\x55\xfb\x57\xb1\x7c\x70\xfc\x32\xd7\xf4\x6f\xb2\xbe\x51\x24\x3c\x41\xda\xa7\xbc\x9b\xff\xab\x27\x7d\x81\xd1\x7d\xce\xba\xb9\x28\x3b\xf3\x26\xa8\x63\x00\xb3\x8d\xe3\x82\xb3\x0d\x0e\xb4\x39\xd0\xe6\x40\x9b\x03\xed\x58\xe9\x1c\x68\x73\xa0\xcd\xaa\xcd\x81\xf6\xd0\x02\x6d\x23\x03\xd2\x0e\xd1\xe4\x5f\x37\x86\x18\xc3\x70\xf1\x3b\x41\x0a\x0b\x7a\xa2\xcc\x2c\xb2\xf7\x7d\x42\x2f\x30\xf7\x80\x67\x02\x73\xfd\x62\xb0\x07\x33\x9a\x08\x9a\x2c\x23\xc1\x6e\x83\x37\xdb\x88\x5a\x31\x65\x22\xf1\xb7\x83\x61\x7c\x3b\x68\x7f\xaf\xd3\x17\xb1\xda\xfd\xa8\xd0\xe5\x71\xb8\xbe\xb7\x8a\x98\x83\x96\x98\x03\x96\x7c\x61\xce\x0d\x48\x0c\x6e\x4f\xe8\xbe\x71\x21\x2d\x32\x8a\x9a\x92\x18\xc7\x3a\xca\xe3\x21\x7f\x27\x09\xb6\x79\x47\x0a\x75\x23\x56\xef\x26\xb9\x0c\x22\x99\xbb\xc3\xa4\x57\xd6\xf4\xf1\x48\xc6\xf6\xa8\x1a\x54\x53\xd9\xbc\x23\x85\x0a\xb4\x12\x67\x50\x62\x1d\xee\x1d\xc1\x23\x8c\x02\xd1\x51\x30\x62\x92\x64\xea\x45\xc3\x73\x12\x9b\x5e\x61\x62\x54\x50\x13\x67\x28\x7a\x2f\xe8\xdd\x7e\x83\x21\xc7\x60\x0b\x2e\xb4\x81\x2e\xbb\x8e\xfd\x74\xb8\x2d\xd3\x6d\x89\xdd\xb7\x92\xc3\x92\x61\x1e\x62\xf4\x6b\xcd\xf1\xe3\xcc\x69\x8e\x99\xd8\xb8\x94\x45\x79\x7b\x5e\xa5\x75\x77\x0e\x33\x10\x17\x89\x12\x1c\x1e\x86\x13\x31\x60\x22\x2b\x62\x0a\x75\x17\x47\x35\x13\x07\x27\xeb\xce\xb7\xaf\xad\xef\x3e\xae\x7f\xb5\x65\xad\xdc\x68\xac\xde\xac\x1d\xde\x77\xea\xb8\xac\x87\xf7\x6b\x4f\x7e\x00\xf5\xd5\xcb\xb5\x83\x6f\xeb\x5f\xec\x39\xbf\xbb\x1f\xc3\xfe\xf6\xcf\x30\xde\xda\x7d\x54\x92\xd1\x0c\x41\x4a\xae\x51\xf6\x12\x1d\xdc\xdf\xd9\x20\x72\x4c\xb7\xbf\xb2\x97\xa3\x49\x9c\x6f\x28\xc5\xe8\xe9\x7d\xde\x28\x49\xd1\xc0\x07\x96\xb2\x29\xdc\xd9\xa8\xc9\xe1\x49\x40\x68\x67\x47\x41\xef\x56\xf9\x76\x1b\xbc\x7c\x08\x44\x20\x66\x93\xd7\xdd\x31\x77\x19\x44\x32\x8f\x0a\x82\x39\x82\x66\xe4\x81\xa3\x3d\xed\xfa\xf4\x22\x53\xd6\xf8\xeb\x28\x36\x00\xf0\xd3\xe9\x3f\x91\xf1\x35\x7c\x24\x48\x8e\xf1\xe7\x66\x90\xf3\x84\x0e\x97\x05\xd0\xb0\x9b\x07\x8e\xf6\x3b\xcd\xf9\xe4\x99\xf5\x29\x6f\xa0\x20\xc3\x80\xf3\x19\x82\xea\x1b\x2a\x9c\x93\xd1\x39\x02\x49\x64\x03\x31\x12\x0b\x48\x35\x95\xa0\xa3\xa6\x25\xc3\xe6\x10\x70\x8d\xc3\x34\x70\x69\xda\x4d\x7e\x79\xbe\x6a\x73\xec\x64\xc5\xc2\xac\x7c\x93\xf4\xc6\x5e\xe3\xce\x0e\x68\x7c\x77\xa5\x71\x67\xa7\xc0\xda\x60\xb7\x99\x9b\xde\xca\xe1\x64\x41\x13\x63\x43\x45\xee\x30\xe8\xf5\x42\x27\xa9\x07\xa8\xac\x00\xbd\x0e\x09\x41\x98\xd2\xfe\xe5\xc2\xc4\xe8\x6b\x17\x3f\x2a\x15\x97\x5f\x89\x09\x6b\xae\x77\x7b\xef\x26\x8c\x3a\xf1\xdd\x25\xec\x8a\xd6\x9d\x7b\xcd\xbd\xbd\x48\x1f\x18\xdc\x09\x7d\x75\x02\x1b\x17\x8e\x68\x42\x08\x8e\xb0\xac\x81\x3f\x68\x9d\x11\x83\xbe\x9d\xde\xd4\xfa\xec\xbf\x5d\xf4\x3d\xe0\xa0\xf1\xe8\x8e\x68\x4f\x50\xf4\x2c\xd0\x3c\xbd\x70\x80\x78\x28\x0e\xaa\xe4\x87\x78\xce\xd2\x77\x6b\xfb\x69\xe3\xc1\xee\x80\xe0\x90\x8d\x7c\xbf\xdc\x3c\x02\x10\x69\x20\x3c\xa8\x97\x0f\xf7\x6c\xb5\xc1\x40\xbc\xc6\xee\x76\x63\xe3\x86\xb5\xf7\xb4\xf9\xe3\x76\xd7\xef\xc6\x19\xf8\x07\x6a\x23\xa2\x03\x87\x3b\x17\x33\x32\x62\x47\xba\x0f\x0f\x24\x09\x76\x26\xe4\xc6\xad\xc7\xf5\xcb\x57\x62\x72\x6a\x4e\x01\xc0\x54\x57\xcd\xd7\xe9\x14\x22\x24\x68\x94\x48\x4a\x8a\x1a\x2b\x0f\xac\x83\xfd\xfa\xe6\xe3\xd6\xe6\x4f\x99\x22\x88\xe3\xed\xe6\xcf\xd7\xea\xfb\x1b\x6c\xe8\x98\x51\xc9\xdb\x1e\xe7\x23\x09\x1d\x27\x4f\x24\x1a\x3b\x33\x3d\x90\x01\x60\x6d\xac\x35\xbe\x7f\x94\xa9\xf5\x24\x91\x66\x94\x80\xf5\xd9\x9a\xb5\x7f\x87\x6d\xbf\x88\x83\x7d\x73\x34\x24\x8a\x44\xa6\xe0\x65\x4e\x7b\x9d\x0e\x91\x75\xd2\xb3\x87\x05\xc5\xa8\xa1\x91\x11\x83\xbf\xbd\x2f\xb6\xe5\x4f\x6e\xb8\xdf\x60\x71\x4f\xc2\x3c\xaa\x26\x3b\x47\xfb\x5b\xb7\xad\x76\xfd\x3f\xad\x3b\xbb\xd6\xbf\x37\x1b\x3f\x1e\x58\x5f\x7d\xe2\x9c\x7d\xfd\xe2\xf0\xb6\x93\x9a\xab\x3d\xd9\x6f\xfc\x63\xdf\x5a\xb9\x67\xad\xff\x50\xdf\x5a\x6d\x13\xd7\x37\xb6\x1a\x3f\x7d\x13\x93\x5c\xd0\x30\x39\xa3\xc9\xa6\x12\xdf\x12\x11\x76\x15\xa0\x28\x52\x4b\xa0\x7c\x36\xba\x95\x41\xc4\xd8\xca\x6c\xe5\xfa\x5e\xfd\xd3\xbf\x59\xfb\xeb\xd6\xca\x66\x71\x01\x2d\x4d\x5a\x2b\x9b\x2f\x0e\x6f\x2f\x42\xd9\x44\x93\xd6\xfa\xc7\xf5\xcf\x1f\x2d\xa0\xa5\x68\x7b\x9c\xd3\xc3\x87\xd0\xa2\xe6\xf3\x9b\xf5\x83\x87\x8e\xc7\x6c\xbb\x00\x6b\x98\xa3\x79\x9b\xa0\xb9\xbd\xd3\xb8\x7f\x2d\x68\x67\xca\xd0\xf8\x23\x22\x30\xcf\xc0\x20\x1a\x81\x83\x5b\x53\x7a\xc7\x2b\x82\xa1\x62\x80\x6a\x06\xb2\x1d\x7e\x80\x97\xf0\xb2\x90\x5b\x8b\x33\x26\xc6\x48\x25\xc0\x16\x12\x0b\x94\x9c\xcf\x59\xbd\x14\x15\xe8\xe9\x14\xd1\xb0\x80\x0d\x74\x20\x29\x9c\x30\xe1\x31\x19\x0a\xd8\x9d\xab\x75\x7d\xad\xf1\x6c\xb7\x48\xb5\x98\x2c\xd5\x37\x1f\xd7\xb7\x56\x9d\x6b\x2f\x0e\xdd\x7a\xcf\xe6\xd5\x67\xb5\x27\xfb\xaa\x14\xb5\x8c\x14\x91\x79\x58\xb9\xd1\xda\xfe\xd9\xba\x7e\xb5\xfe\xf9\xa3\xfa\xda\x2e\x3b\xe7\x85\xbe\xb8\x99\x67\x35\x29\xd8\xd1\x33\x35\x0c\x1d\x1c\x31\xde\x36\x62\x9d\x3d\xe8\x59\xa0\xf3\x12\xe6\x0f\x25\xa9\x23\x3e\x30\x79\x0c\x04\x83\x65\x80\x43\x47\x8f\xb2\x16\xd0\x52\x12\xcc\x62\xb7\xdf\xe7\x68\xa8\xf0\x39\x08\xdd\x9a\xd5\x39\xe4\x20\xd5\xbb\xec\x86\xbf\x61\x5e\x41\x8e\x28\x9b\xce\xa7\xee\xf0\x4c\xda\xf1\x2b\xa1\xb4\xcf\x4d\xfe\xd9\x9c\x98\x38\x89\x40\x52\x23\xb5\xab\x76\xbc\x8a\xa1\xe9\xa8\xea\x1d\xaf\x50\x28\xd4\x6c\x50\x97\xde\x42\x9d\xf0\xd3\x2e\xb9\xfa\xd3\xe8\x94\xae\x8f\xfa\x8e\x98\x72\xeb\xa9\x2a\x08\x8a\x08\x07\x87\x41\xb0\xd8\x28\xb3\x88\x29\x93\x54\x34\x2c\x7d\x48\x0b\x98\x13\xe5\xd8\x36\x8e\x2c\x8f\xfc\x2f\x00\x00\xff\xff\x46\x02\xb3\x4f\x4a\x99\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 39242, mode: os.FileMode(420), modTime: time.Unix(1714276001, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1714276001, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
