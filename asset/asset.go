// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5b\x6f\xdb\x46\xf6\x7f\xcf\xa7\x18\xe8\xdf\xb7\xca\xb7\x24\xff\x05\x1a\xc0\xc0\xba\x71\x0b\x18\xdd\x6e\x83\xa6\x29\x16\xc8\x66\x8d\x31\x39\xb6\x59\x53\x24\x4b\x0e\x1d\xbb\x59\x03\x4e\xe3\x6b\x6a\xd7\xee\xc6\x89\x1b\xc7\x6d\xa3\xc0\x4d\xbd\x69\xd7\x72\x91\x36\x95\x6d\xb9\xfe\x32\x22\x29\x3d\xf9\x2b\x2c\x38\xa4\x2e\x1c\x91\x14\x25\x4a\xb1\xbc\x9d\x97\x38\x22\x0f\xcf\x65\xce\xcc\x99\x1f\xcf\x9c\x19\xde\xb9\x00\x40\x42\xbb\x0d\xc7\xc6\x90\x9a\xb8\x02\x12\x17\xbb\x7b\x13\x49\xfb\x9a\x20\x8d\xca\x89\x2b\xc0\xbe\x0f\x40\x02\x0b\x58\x44\xf6\xfd\xb7\x21\x37\x81\x24\x1e\x0c\x5c\x1b\x22\x74\x00\x24\x78\xa4\x71\xaa\xa0\x60\x41\x96\x6c\x8a\x8f\xc6\x11\x18\x15\x44\x04\xa0\xa6\x21\x0c\x46\xdc\x07\xa0\x22\x94\x1e\x98\x44\xaa\xe6\x12\xf7\xb9\xe2\x00\x48\x70\xb2\x84\x21\x87\xcb\x32\x01\x48\x48\x30\x45\x84\xa2\x51\x71\xda\x25\x03\x20\xa1\xab\xa2\x7d\x71\x1c\x63\x45\xbb\xd2\xd3\x63\xdf\xec\xe2\x10\xe6\xba\x39\x39\x55\xa1\x42\x29\x28\x10\x3a\x49\x96\xd0\x9f\xd1\x14\x4c\x29\x22\x22\x24\x84\x62\xe6\x02\x00\x33\xc4\x50\x0c\xc7\xb4\xc4\x15\x70\x93\x5c\xae\x11\x3d\x24\xf1\x68\xea\x3a\x52\x27\x05\x0e\x55\x98\x53\x26\x17\x8f\xbe\x2e\xec\xed\xb8\x8c\x93\xfe\x8c\x3e\x20\xd4\x5a\x5d\x56\xb3\xcb\xc5\xf4\x81\xb5\x97\xb6\xd6\x17\xc2\x19\x0e\xd8\xcd\x5b\x8f\xdd\xe5\x6e\xf3\xd1\x62\xfe\xe8\x55\x14\x86\x83\xf2\x6d\x49\x94\x21\x5f\x8f\xe7\xa5\xee\x7c\xf6\x8b\xc2\xf1\xb1\xb9\xbd\x6a\xdc\x4f\x87\xf3\xbc\x2a\x4b\xa3\xc2\x58\x3d\x8e\xc6\xfd\x5d\x73\xf6\x6e\x71\x7e\xd5\x3a\xde\x0b\xe7\x77\x43\x89\xa2\x61\x5f\x77\x3e\x7b\x3f\x9f\x7b\x1a\x45\xc3\x8f\x05\x74\xbb\x1e\xbf\x8b\xdd\xc5\x67\x73\x85\x1f\x96\x3c\xfc\x2e\x00\x70\x8b\x74\x20\x8d\x1b\x47\x29\x54\xe9\x43\xa4\x67\x96\x7a\x35\xe9\xa5\x89\x32\x2d\x27\x4b\x9a\xee\x21\x86\x8a\x22\x0a\x1c\xb4\x45\xf5\x7c\xa2\xc9\x52\xe9\xc1\xea\xeb\x32\x87\x11\xee\xd2\xb0\x8a\x60\xaa\xc2\x4b\x51\x65\x5e\xe7\x5a\xc4\x0b\xe2\x71\xad\x32\xdc\x7b\x26\xfb\x7a\x38\xe2\xba\xea\xe1\x38\x86\xaa\x47\xa7\x6d\xb9\x9e\x4a\x41\x75\x9a\xf4\x5b\xe2\xbc\xfc\x49\xda\xbc\x9b\x29\xb7\x63\x6d\x4b\x16\x4e\x36\x8c\x27\xdf\x3a\xed\x68\x1c\x3f\x30\x96\x57\x83\x1e\x94\x15\xa4\x12\x8d\x87\xf8\x9a\x8e\x34\x3c\x88\xb0\x3d\xba\xab\xc8\x55\xa4\x29\xb2\xa4\x21\xcd\xa3\x21\x00\x89\x8b\xbd\xbd\xd4\xa5\x5a\xad\x06\x80\xa6\x73\x1c\xd2\xb4\x51\x5d\x04\x25\x4e\xdd\x55\xec\x1d\x6b\x6d\x3f\xc3\x1a\x66\x00\x24\xde\x50\xd1\xa8\xcd\xe7\xff\x7a\x78\x34\x2a\x48\x02\x19\xe9\x3d\x93\x7d\x8e\xd2\x09\x0f\xf9\x4c\xd5\xaf\x99\xa4\x57\xd3\xbe\xba\x9a\x7e\x88\xb0\xae\x4a\x88\x07\xb7\xc7\x91\x04\xf0\x38\xb2\xd5\x95\x75\x95\x43\x80\x53\x11\xc4\x88\x2f\x99\x12\xa2\x7e\x98\x0a\x97\xe3\xa8\xc0\x23\x11\xc5\x55\xe1\x72\x04\x7f\xf9\xa9\xf0\xa9\x8e\x34\x0c\x78\x88\x21\x98\x84\xa2\xc0\x43\x8c\xc0\x28\x14\x44\xc4\xb7\xc0\x91\xef\xa8\xaa\xac\x6a\x1f\x8c\x7c\x82\x38\x1c\xd5\x9d\x97\x9b\x72\xa7\xae\x21\x15\xf0\x32\xd2\x80\x24\x63\x00\x75\x3c\x8e\x24\xec\x8e\xdd\x26\xdb\xf3\x52\x6c\x35\xc6\xe1\x24\x02\x0a\x52\x53\x82\x66\x4f\xdc\x00\xcb\x00\x12\x0f\x7b\xdc\xdf\xa4\x7a\xb1\x7a\x9c\xad\xdd\xa8\xac\x4b\x61\x4e\x0e\x13\xfe\x56\x83\xc2\x4b\xfd\x4c\x57\x48\x07\xb3\x63\xa4\x28\x70\xb8\x39\xe9\x17\x1b\xf5\x4c\xd9\x6c\x51\xe6\x26\x42\x3b\x76\x98\xd4\x66\x6d\xc6\xb2\x0c\x52\x50\x9a\x06\x82\x04\x20\xd0\x25\x01\x03\x2c\xa4\x9a\x73\xfb\xff\x47\x18\xe5\x76\xb0\x47\x2a\x40\xf6\xd8\x6b\x4a\x08\x8f\x46\xa1\x2e\xe2\xba\x82\x6e\x48\x68\x4a\x41\x1c\xae\x2b\xaa\xc5\xe1\xe2\x82\x8f\xda\x5e\x38\xea\x5e\xf3\xa2\xa8\xf2\x9d\x5b\x55\x8f\x69\x88\xd3\x55\x01\x4f\x53\x8f\x52\x86\x0f\x28\x0a\x99\x4e\x6f\xde\xa2\x6c\x7c\x1b\x41\x15\xa9\x1f\xc9\x13\x48\x22\xb7\x7d\xd5\x2c\x5d\x2d\xab\x9b\x50\xf4\x60\x44\x60\x3e\xf9\xc5\x7c\xb4\xef\x82\xba\x60\x44\xe0\x90\xc5\x46\x04\x37\xc8\x80\x64\x88\x80\x21\x02\x86\x08\x18\x22\x60\x88\xa0\x21\xa9\x0c\x11\x74\x32\x22\x50\xa0\x0a\x53\x08\x23\x95\xc6\x05\x94\x0d\xa5\x8c\x06\x8f\x46\xf4\x31\x5a\x65\xfa\x3d\x7c\xff\x5e\x21\xf3\xd0\xdc\x4d\x1b\xb9\x35\x9a\x54\x20\x14\x9f\xea\x48\x9d\xa6\x6f\xd9\x8e\x17\x54\x64\xcf\xbf\xa3\x50\xd4\x10\x75\x1b\x4f\x2b\x44\x83\x11\x59\x16\x11\x94\x12\xfe\x28\xe2\x9c\x81\x1d\xf2\xd7\xf5\x07\x49\x8c\xf0\x6e\x9e\xac\xcb\x49\x44\x96\xd3\x23\x8a\xac\x05\xa3\xa1\xc2\x97\xbf\x19\x6b\x8f\x9c\xc4\x99\xb1\xbd\x6f\x7c\x33\x1b\x82\x89\x8c\xf9\x57\xf9\xa3\x47\x0e\x26\xaa\x7d\xd0\xc8\x1c\x18\x3b\x8f\xac\xa3\xc7\xc6\xe2\xe1\x69\x6e\xa5\x70\xf2\xb8\xb8\xb8\x92\x3f\xf8\xce\x58\xcb\xe4\x8f\xbe\x37\x97\xbf\x30\xee\xef\x3a\x4f\x85\xa0\x27\x2a\xd9\x37\xfc\x2e\xc2\xdc\xf8\x0d\xb5\xd3\x73\x2a\xa3\x82\x88\x48\x5e\x79\xd8\xcd\x2b\x0f\x43\x45\x28\x39\x64\xb2\xaf\x64\xc5\x87\xae\x3c\x06\xb4\x1a\x51\x81\x01\x2d\x06\xb4\x18\xd0\x62\x40\x8b\x01\xad\x68\x40\x6b\x44\xe6\x6b\x10\x92\x03\x9e\xfc\xee\x54\x61\x27\xac\xea\x34\x74\x6a\xdb\x44\x48\x3a\x50\x94\x96\xa8\x87\xcb\xe8\xe5\xc1\x0e\x44\x66\x76\xa3\x68\x51\x57\xac\x8c\xa5\xcd\x42\x7a\x37\x2c\x33\x45\x56\x4e\x6b\xc9\x28\x24\x55\xbd\x0e\x3b\x7c\x0d\x8e\x09\xd2\x79\x48\x44\x95\x14\x65\x48\x89\x21\x25\x86\x94\x18\x52\x0a\x94\xce\x90\x12\x43\x4a\xb4\xda\x0d\x23\x25\x05\x8e\xa1\x3a\x19\xa9\x6b\x70\x0c\x01\x49\x4f\x8d\x20\x35\x09\xdc\x46\xe9\xef\x6b\x7d\x6e\x4a\x90\x30\x1a\x43\x2a\xfd\xf4\xa8\xac\xa6\x20\x76\x09\xfe\x74\x39\x11\xe4\xaf\x00\x03\x45\x21\x25\xe0\x28\x16\x6a\xc2\x67\xa8\xca\xbe\xde\xf3\x62\xe0\x04\x9a\xbe\x2d\xab\x7c\x1d\x13\xdf\x73\xa8\x80\x86\xa0\xca\x8d\x27\x81\x28\x4c\xa0\x2b\xee\xa3\xfd\x53\x53\xa7\xb9\x95\xd2\x0f\x81\xef\xef\xfb\xa7\xcd\xbc\x7f\x6a\x6a\xaa\xf5\x8d\xa0\x61\x55\x90\xc6\x1a\x35\x52\x93\xd5\x7a\x4e\xbc\x2e\xab\x18\x88\x82\x86\x5d\xe3\x80\xfd\x4c\xff\x9b\x30\xd9\x35\x92\x7c\x93\x4b\x76\xd5\xb4\x50\x5b\x6c\x89\x0c\xda\x3d\x45\x82\x9d\x8a\xd8\x7b\xee\x08\xfc\x4c\x35\x6c\x77\x20\x5a\x08\x72\x7f\x5a\x7c\xbc\x13\x96\x3f\x25\x04\x0e\x7e\x8f\x8a\xdc\x07\x1d\x99\x9d\x82\xdb\x4b\xce\x97\x9d\xf8\x9c\xa4\xef\x2b\xaa\x6d\x0c\x16\x1c\xed\x66\x18\x7a\x6f\x40\x05\x86\xde\x19\x7a\x67\xe8\x9d\xa1\x77\x86\xde\xa3\xa1\x77\xa1\x1e\xec\x1b\x1a\xf4\x47\x3d\x0a\xc4\xe3\x8d\xa5\x41\x63\x80\xd8\xff\x19\x4c\x24\x3b\x3b\x45\xa2\xe6\x31\x9d\x1d\x23\x21\x30\xc7\xbb\xf3\x64\xd8\xf9\xf9\x17\x41\xc3\x1d\x03\x76\x82\x3a\x79\x45\x55\x96\xa6\x64\x40\x87\x01\x1d\x06\x74\x02\xa5\x33\xa0\xc3\x80\x0e\xad\xb6\xef\xec\x4f\xed\xc3\x6c\xc9\xfc\x5f\x17\x86\x4c\x75\xc9\x2a\x4f\x36\xd8\xf6\x05\x4e\xfb\x3a\xd9\xda\xd8\x45\xb6\xdd\xa9\xa9\xc8\x85\x65\x56\x7a\xaf\xb0\xb7\xe3\xec\x77\xb4\xb6\xe6\x6a\x93\x1e\x94\x83\x7c\xe9\x4f\x73\x2b\xc6\xfa\x73\x63\xe9\x71\x3e\xb7\x55\x78\xf6\x63\x61\xf1\x85\x71\x7f\xd7\xbc\x37\x6f\x2c\xfc\x1a\x02\x2c\x3c\x9b\x31\x87\xaf\xba\x8a\x77\x3a\xa8\x70\xf5\x64\x88\x82\x21\x0a\x86\x28\x18\xa2\x08\x94\xce\x10\x05\x43\x14\xb4\xda\xe7\xaa\x44\xac\x6a\xaa\x6b\x59\x11\x98\xf7\xfc\x85\x96\x80\xa7\xd6\x26\x4f\x5c\x14\x45\x95\xe6\x87\xe5\x4f\x4a\x05\xf6\x36\x20\x6a\xaa\x32\xbf\xf2\x60\x4b\x2a\xf3\xbd\xa8\xea\x3c\xd7\xe5\x3b\xbe\x60\x55\xf9\x0c\x72\x01\x06\xb9\x18\xe4\x62\x90\x8b\x41\xae\xd7\x51\x6b\xa6\xca\x3e\x25\x13\xb4\x89\x01\x54\xd1\xaa\x75\x42\x16\xae\x9a\x2b\x3c\xd2\xeb\x2e\xb1\xf9\x50\xc4\xd6\xb5\x3d\x95\x62\x1a\x22\x31\x71\xa8\x9e\x45\x85\xc5\x17\xc6\xde\x56\xfe\x60\x19\xb8\x4f\x0c\x0b\x7c\x12\xe4\xb3\x47\x85\xe7\x77\xad\x8d\xdd\xfc\xe1\x97\xc6\xd2\x82\xb1\xf6\x55\x3e\x3b\x6b\xfe\x94\x76\x60\x56\x3e\xb7\x55\xc8\x7c\x63\x7c\xb5\x6b\x6e\x7f\x77\x9a\x5b\xc9\xff\x7e\x62\x93\x65\x0e\xec\xbb\xd9\xd9\x7c\xf6\x45\x85\x95\xb5\x35\x67\x3e\xdc\x37\x57\xf7\x0a\x27\x4f\x0a\xe9\x15\x33\x3b\x6f\xad\x2f\x74\x88\xbb\x53\x32\xaf\x8b\xf5\x0a\x22\xfd\x89\xce\x4a\x63\x38\x75\x5d\xf8\xac\x9e\xca\x9a\x0f\x49\xa7\x16\x34\x72\xb2\x84\x91\x84\x3f\xb2\x85\x84\x5b\xe5\x52\x0e\x63\x1f\xd2\x33\x72\x07\x9a\xc2\x48\x22\x67\x28\x86\xab\x1e\x48\x77\x46\x7a\x63\x2c\xd6\xd1\xd8\x87\xa2\x43\xe3\x9c\x02\xeb\x16\x8b\xda\x24\x40\xd2\x53\xe7\x65\x4c\xa4\xe0\xd4\x55\x59\x97\xea\x99\x95\x82\x53\xe7\xc9\xaa\x31\x55\xd6\x95\x3a\x26\x59\x47\x73\xce\x0c\x73\x9a\x5b\x31\x56\x5f\x1a\xeb\x2b\xe6\xe6\xab\x7c\x6e\x2b\x9f\x7b\x5a\xf8\xfd\x81\xb1\xf3\x43\x71\x71\xcd\x59\x2a\x29\xfc\x3a\x67\x1e\xae\xdb\x6f\xf7\xb3\x2b\xf9\xec\xaa\x79\xef\x65\x3e\x3b\x6b\xe4\x9e\x3a\xff\x5a\x5b\x73\xd6\xc6\xcb\x42\xe6\x37\x27\x21\x60\xcf\x51\xd5\x13\xda\xc2\x7c\xf1\xde\x6e\x59\x50\x59\xa8\x2d\x2b\xbb\xea\x9c\x8d\x68\x2c\x2d\x5a\xcb\x8b\xcd\xce\xf6\x6d\x3b\x95\xa1\xe3\x13\x3f\x95\x43\x65\x23\x65\x7d\xac\xe5\x25\x73\xfb\x27\x63\xed\xb7\x90\x64\x4f\xed\x61\x95\xbe\x4f\x51\xf9\x9b\xea\x13\x63\x87\x3f\x76\xb5\xea\xec\xec\xcd\x64\x9f\xab\x27\xcb\xd0\xb0\x0c\x0d\xcb\xd0\xb0\x0c\x4d\xa0\x74\x96\xa1\x09\xd5\xe2\x8f\x99\xa1\xf1\xc3\x0b\x9e\x73\xd3\x5b\x02\x17\x1a\xc5\x03\x02\xba\xdd\xf8\x32\x90\x73\xce\x77\x13\xcb\x40\xd5\x0f\xb6\x64\x19\xa8\xea\x5c\xf2\x61\xfb\xff\x9d\xbf\x06\x34\xd9\xe7\xea\xc9\x50\x04\x43\x11\x0c\x45\x30\x14\x11\x28\x9d\xa1\x08\x86\x22\x68\xb5\xff\x10\xeb\x3c\xe7\x2f\xf1\x4f\xfe\x86\xeb\xeb\x47\xc2\xf2\xcb\x2d\xda\xac\x56\xfd\x79\x9a\x96\xc0\xe8\x16\x67\xdd\x5c\x94\x1d\x79\xb7\xda\x39\x80\xd9\xda\x79\xc1\xd9\x1a\x03\xda\x0c\x68\x33\xa0\xcd\x80\x76\xa0\x74\x06\xb4\x19\xd0\xa6\xd5\x66\x40\xbb\x63\x81\xb6\x16\x01\x69\xd7\xd0\xc4\x5f\x18\x86\xaa\x0a\x6b\x77\x29\x60\x94\xa2\x41\x8f\x9f\x99\x49\xfa\x7e\x95\xd0\x9b\xd4\x3d\x50\x32\x81\xba\x7e\xcb\xdb\x83\x29\x4d\x38\x59\x14\x11\x67\xb7\xc1\xbb\x65\x44\x9d\xd2\x45\x2c\xb0\xb7\x83\x4e\x7c\x3b\x28\x7f\x58\xb5\x2a\x62\x95\xfb\x51\xa2\xc1\x73\x8b\xab\xde\x2a\x02\x4e\xc4\xa2\x4e\xc2\xaa\x0a\x73\x6e\x40\xa2\x70\x7b\x48\xf7\x0d\x0a\x69\xbe\x51\x54\x17\xf8\x20\xd6\x7e\x1e\xaf\xf1\x77\x98\x60\x9b\xb7\xaf\x50\x37\x62\x35\x6f\x92\xcb\xc0\x97\xb9\x3b\x4c\x9a\x65\x4d\x1e\xf7\x65\x6c\x8f\xaa\x76\x35\x95\xcd\xdb\x57\x28\x47\x0a\x99\xda\x25\xd6\xe1\x5e\x11\x7c\x81\x52\xc0\x3f\x0a\xfa\x4c\x92\x54\x61\x6f\xed\x9c\x44\xa7\x57\xa8\x18\xe5\xd5\xc4\x19\x8a\xa5\x17\xf4\x46\x3f\x96\x11\x63\xb0\x79\x17\xda\x40\x83\x5d\xc7\x7e\xba\xb6\x2d\xeb\xdb\x12\xb8\xc1\x28\x86\x25\x9d\x3c\xc4\xc8\x67\xb5\x83\xc7\x99\xd3\x1c\x43\x81\x71\x29\x8a\xf2\xf6\xbc\x4a\xca\x16\x1d\x66\x20\x28\x12\x85\x38\xbc\x16\x4e\x04\x80\x89\xa8\x88\xa9\xa6\xbb\x38\xaa\xe9\xaa\x48\x15\xd1\x91\xb6\xc9\x1f\x93\xcf\x07\x92\x83\x0c\xcc\x27\x27\xe6\xea\xb3\x7c\xf6\xf0\xce\x5f\x07\xde\x7f\x67\x26\x59\xdc\x9e\x2d\x3c\xbf\xeb\x1e\x7e\xf0\x63\xa6\x7c\xbb\x5c\x8b\x6e\x6d\xcd\xd5\xa4\x33\x2b\x1f\x3f\x37\x9e\x7f\x6e\x7e\xbb\x6d\x2c\x2d\x58\xcb\x8b\xb6\x00\xa7\x60\x6f\x67\x2b\x9f\x7d\x01\xcc\xe5\xd9\xfc\xd1\xf7\xe6\xd7\x19\xe7\x77\xe3\xb1\xa1\xda\xaf\x11\xc6\x71\xb9\xef\x0b\x22\x1a\xc2\x28\x15\x6b\xf4\xbe\xc6\x8e\xd3\xda\x59\xc6\x37\x56\x94\x3f\xb3\x18\xa3\x49\x9c\x8f\x68\x05\xe8\x59\xaa\xa4\x0c\x53\xd4\xf3\x85\xad\x68\x0a\x57\x76\xea\x32\xd8\xe3\x11\x5a\xd9\x52\xd2\xbc\x55\x95\x9d\x21\x67\x00\xad\x30\x54\xe9\xa4\x78\x63\xcc\x5d\x06\xbe\xcc\xfd\x82\x6b\x8c\x60\xec\x7b\xe2\x6c\x53\xdb\x7e\x4b\x91\x29\x6a\x5c\x77\x14\xf3\xb5\xd1\xa9\xe1\x8e\x31\x1c\x3d\x05\xde\xe4\x9c\x1b\x63\xe9\x89\x71\x74\x58\xc8\x7c\x6f\xac\xaf\x5a\x3f\xec\x5b\x5b\x73\x85\xbd\x7d\xe3\xf8\x61\x3b\x50\x5d\xa5\x03\xfb\x06\xf8\xda\x43\x69\x62\x04\x00\x37\x35\x1e\xa7\xb1\x5c\x16\x40\x56\xdd\x04\xb7\xbf\x53\x48\x32\x2b\x0e\x9c\x21\xbc\x41\x0a\x69\x1a\x1c\x8b\x10\xd5\xdf\x91\xe0\x88\x88\xae\x63\x88\x7d\x1b\x88\x92\x98\x40\x92\x9e\xf2\x3a\x6a\x50\xd0\x6c\x0e\x1e\xd7\x38\x4c\x3d\x97\x06\xdd\xac\x5e\xc9\x57\x65\x8e\x95\x74\x5f\x2d\xab\x2a\x94\xb0\x9e\xb1\x36\x76\x81\x45\xaa\xfe\x13\xb4\x0d\x76\x9b\xb9\x79\xbb\x18\x4e\xe6\x64\x3e\x30\x56\xc5\x8e\xc3\xa5\x5e\xe8\x64\x2b\x01\x91\xe5\xa1\x57\x20\xc6\x48\x25\xb4\xff\xb8\xd9\xdb\xf5\xd6\xad\x3b\x7d\xc9\x99\x37\x02\xe2\xaa\xeb\xdd\xe6\xbb\x09\xa5\x4e\x70\x77\xa9\x75\x45\x71\xe3\x71\x21\x93\xf1\xf5\x81\xc6\x9c\xd0\x52\x27\xd0\x71\xe1\x8c\x66\x24\xef\x08\x8b\x3a\xf3\x78\xad\xd3\x02\xe0\xbf\xd3\x9b\x8a\x0f\x7e\x6f\xa0\xef\x01\xe7\x75\xc0\xbf\x23\xda\x33\x24\x39\x8d\x36\x4e\x2f\x6c\x23\x20\x0b\xc2\x4a\xf1\x31\xa6\xb3\xa6\x5f\x4c\x1f\x58\x4f\xf6\xda\x84\xc7\x6c\xe8\xfd\xcd\xe6\x19\xa0\x58\x0d\xa9\xed\x7a\xfb\x71\x4f\xf7\x6b\x0f\xc6\xb4\xf6\xd2\xd6\xfa\x82\x91\x39\x28\xfc\x9c\x6e\xf8\xa5\x3f\x02\x7f\x4f\xd1\x87\x7f\xe0\x70\xe7\x62\x4a\x46\xe0\x48\xaf\xc2\x03\x61\x82\x9d\x09\xd9\xba\xff\xca\x9c\xbd\x1b\x90\x2c\x74\x2a\x1b\x06\x1a\x6a\xbe\x4a\xa7\xe0\x21\x46\x5d\x58\xa0\xf3\x06\xb4\x1a\x04\x70\x9a\x9b\xaf\x8a\x9b\xbf\x44\x8a\x20\xd5\x1b\x0e\xe9\xd0\x31\x24\xe1\x0f\x4a\x9c\xcf\x24\x74\x5c\xba\x18\x6a\xec\xd0\x60\x5b\x06\x80\x83\xd5\x23\xb5\x9e\xc0\x93\x74\x10\x30\x1e\xac\x1a\x87\x1b\x74\xfb\xf9\x1c\x2d\x1d\xa3\x21\x91\x2f\x32\x05\xaf\x73\xda\xab\x74\x88\xa8\x93\x9e\x3d\x2c\x08\x46\xad\x19\x19\x01\xf8\xbb\xf4\xcd\xc0\xf8\xd9\x15\xf7\x2b\x40\xee\x59\xac\x67\xd5\x64\xd7\x49\x7f\x6b\xb4\xd5\xe6\x5f\x16\x37\xf6\x8c\xff\x6c\x5a\x3f\x1f\x19\xdf\x7e\xe1\x9c\xbe\x6e\xbf\x54\x92\xdc\x60\x3e\x7b\x68\xfd\xfb\xd0\x58\x7a\x6c\xac\xbd\x30\xb7\x97\xcb\xc4\xe6\xfa\xb6\xf5\xcb\xb3\x80\xec\x86\xac\xe2\xab\xb2\xa8\xa7\x82\x5b\xc2\xc7\xae\x04\xe4\x79\x62\x09\x14\xaf\xf9\xb7\x32\xf0\x19\x5b\x91\xad\x5c\xcb\x98\x5f\xfe\xcb\x38\x5c\x33\x96\x36\x93\x13\x68\xba\xdf\x58\xda\x3c\xcd\xad\x4c\x42\x51\x47\xfd\xc6\xda\xe7\xe6\xc3\xfd\x09\x34\xed\x6f\x8f\x73\x7e\x7d\x07\x5a\x54\x38\x59\x34\x8f\x76\x1c\x8f\xd9\x76\x01\xda\x30\x47\xf3\x32\x41\x21\xbd\x6b\x6d\xcd\x79\xed\xac\x33\x34\xde\x47\x18\xc6\x19\x18\x58\xc6\xb0\x7d\x8b\x65\x1f\x96\xaa\x7b\x88\x18\x20\xe9\x41\xe9\x16\x25\xe4\x65\x21\xb6\x16\x57\x75\x55\x45\x12\x06\xb6\x90\x40\xa0\xe4\x7c\x50\xed\xb5\xa8\x40\x4e\x2d\xf1\x87\x05\x74\xa0\x03\x61\xe1\x84\x0a\x8f\xe1\x50\xc0\xee\x5c\xc5\xf9\x55\xeb\x78\x2f\x49\xb4\xe8\xef\x33\x37\x5f\x99\xdb\xcb\xce\xb5\xd3\x9c\x5b\xc8\x5a\xb8\x77\x9c\xcf\x1e\x4a\x82\xdf\xfa\x98\x4f\xe6\x61\x69\xa1\x98\xfe\xd5\x98\xbf\xe7\x9c\x7c\x43\xcf\x79\x35\xdf\x7c\x8d\xb3\x4c\xe6\xed\xe8\x91\x1a\x86\x0c\x8e\x00\x6f\x6b\x81\xce\x6e\xf7\x2c\x50\x79\x09\xab\x0e\x25\x75\x47\xbc\x67\xf2\x68\x0b\x06\x8b\x00\x87\xce\x1e\x65\x4d\xa0\xe9\x30\x98\x45\x9f\x2b\x10\xa3\xa1\x6a\x0f\x78\x68\xd4\xac\xca\xe9\x0d\x75\xbd\x4b\xef\x64\xec\xe4\xa5\x71\x9f\x7a\xf0\x78\xea\x76\xce\xa4\xad\xab\x62\x40\x2e\x86\xf4\xb9\xfe\xbf\xeb\xbd\xbd\x97\x10\x08\x6b\xa4\x72\x39\x52\xa9\x14\x6a\xd0\xaf\x2c\xa9\x54\x01\x55\xd3\x6c\x50\x11\xde\x43\x95\xf0\x53\xae\x25\xfb\x5b\xd7\x80\xa2\x74\x55\x1d\x72\xe6\x16\x8a\x8d\x23\xc8\x23\xd5\x3b\x0c\xbc\x55\x54\x91\x45\x0c\xe8\x78\x5c\x56\x85\xcf\x48\x65\x76\xa8\x1c\xdb\xc6\x0b\x33\x17\xfe\x1b\x00\x00\xff\xff\xe7\x64\xdb\x1f\xcc\x9b\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 39884, mode: os.FileMode(420), modTime: time.Unix(1718100431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1718100431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
