// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xed\x4f\xdc\x46\x1a\xff\x9e\xbf\x62\xb4\xd7\x6f\x5d\x02\x24\xb9\x93\x1a\x09\xe9\x68\x68\x25\xd4\x3b\x35\x6a\x9a\xea\xa4\x5c\x0e\x0d\xf6\x00\x2e\x5e\xdb\x1d\x8f\x09\xb4\x87\x44\x1a\x5e\xd3\xa5\xd0\x0b\x09\x0d\xa1\x6d\xb6\xa2\x2d\x97\xeb\x01\x55\x5a\xba\xc0\xa6\xf9\x67\xfc\xb2\xfb\x89\x7f\xe1\xe4\x97\xdd\xb5\xbd\x7e\xdb\xf5\x6e\x58\xae\xf3\x25\x64\xed\xf1\xf3\x32\xcf\x33\xcf\xfc\xfc\xcc\x33\xe3\x4f\x2e\x00\x90\x91\xef\xc0\xf1\x71\x84\x33\x57\x41\xe6\xd2\xc5\xbe\x4c\xd6\xbc\xc6\x09\x63\x62\xe6\x2a\x30\xef\x03\x90\x21\x1c\xe1\x91\x79\xff\x4d\xc8\x4c\x22\x81\x05\x83\xd7\x87\xad\x76\x00\x64\x58\x24\x33\x98\x93\x08\x27\x0a\x66\x8b\xf7\x27\x10\x18\xe3\x78\x04\xa0\x2c\x23\x02\x46\x9d\x07\xa0\xc4\x55\x1f\x98\x42\x58\x76\x1a\xf7\x3b\xec\x00\xc8\x30\xa2\x40\x20\x43\x6a\x3c\x01\xc8\x08\x30\x67\x31\x45\x63\xfc\x8c\xd3\x0c\x80\x8c\x82\x79\xf3\xe2\x04\x21\x92\x7c\xb5\xb7\xd7\xbc\xd9\xc3\x20\xc2\x5c\x64\xc4\x5c\xbd\x15\xca\x41\xce\x6a\x27\x88\x02\xfa\x33\x9a\x86\x39\x89\x47\x56\x13\xab\xc5\xec\x05\x00\x66\x2d\x45\x09\x1c\x97\x33\x57\xc1\x2d\xeb\x72\x03\xeb\x61\x81\x45\xd3\x37\x10\x9e\xe2\x18\x54\x27\xee\x53\xb9\x72\xf2\x65\x79\x6f\xc7\x21\x9c\x0d\x26\xf4\xae\xd5\x5a\x8e\x25\x35\xb7\x52\x29\x1c\x19\x7b\x05\x63\x7d\x31\x9a\xe0\xa0\xd9\xbd\x71\xe4\xae\x5c\xd4\x1f\x2d\xa9\x27\x87\x49\x08\x0e\x89\x77\x04\x5e\x84\x6c\x1c\xcd\xcb\x17\xd5\xe2\x67\xe5\x17\x2f\xf4\xed\x55\xed\x7e\x21\x9a\xe6\x35\x51\x18\xe3\xc6\xe3\x28\x6a\xf7\x77\xf5\xb9\xbb\x95\x85\x55\xe3\xc5\x5e\x34\xbd\x9b\x52\x12\x09\xfb\x2f\xaa\xc5\xfb\x6a\xe9\x69\x12\x09\x3f\xe0\xd0\x9d\x38\x7a\x97\x2e\x56\xbe\x9d\x2f\xff\xb0\xec\xa1\x77\x01\x80\xdb\x96\x03\xc9\xcc\x04\xca\xa1\xba\x0f\x59\x9e\x59\xf5\x6a\xcb\x4b\x33\xb5\xb6\x8c\x28\xc8\x8a\xa7\x31\x94\x24\x9e\x63\xa0\xc9\xaa\xf7\x43\x59\x14\xaa\x0f\xba\xaf\x8b\x0c\x41\xa4\x47\x26\x18\xc1\x5c\x9d\x96\x84\x45\x56\x61\xda\x44\x0b\x92\x09\xb9\x3e\xdc\x7b\xa7\xfa\x7b\x19\xcb\x74\xee\xe1\x38\x8e\xdc\xa3\xd3\xd4\x5c\xc9\xe5\x20\x9e\xb1\xfc\xd6\x32\x9e\xfa\xb2\xa0\xdf\xdd\xaf\xf5\x63\x63\x4f\x96\x5f\x6e\x68\x4f\xbe\xb6\xfb\x51\x7b\xf1\x40\x5b\x59\x0d\x7b\x50\x94\x10\xb6\x24\x1e\x66\x1b\x1c\x69\x64\x08\x11\x73\x74\xbb\x9a\x63\x24\x4b\xa2\x20\x23\xd9\x23\x21\x00\x99\x4b\x7d\x7d\xbe\x4b\x8d\x52\x0d\x02\x59\x61\x18\x24\xcb\x63\x0a\x0f\xaa\x94\x2e\xba\xc8\xdb\xda\x9a\x76\x86\x0d\xc4\x00\xc8\xbc\x86\xd1\x98\x49\xe7\x0f\xbd\x2c\x1a\xe3\x04\xce\x1a\xe9\xbd\x53\xfd\xb6\xd0\x19\x4f\xf3\x59\xd7\xaf\xd9\xac\x57\xd2\xfe\x58\x49\xdf\x43\x44\xc1\x02\x62\xc1\x9d\x09\x24\x00\x32\x81\x4c\x71\x45\x05\x33\x08\x30\x18\x41\x82\xd8\xaa\x2a\x11\xe2\x47\x89\x70\x25\x8d\x08\x2c\xe2\x51\x5a\x11\xae\x24\xb0\x57\x90\x08\x1f\x29\x48\x26\x80\x85\x04\x82\x29\xc8\x73\x2c\x24\x08\x8c\x41\x8e\x47\x6c\x1b\x0c\xf9\x16\xc6\x22\x96\xdf\x1d\xfd\x10\x31\x24\xa9\x39\xaf\xb4\x64\x4e\x45\x46\x18\xb0\x22\x92\x81\x20\x12\x00\x15\x32\x81\x04\xe2\x8c\xdd\x16\xfb\xf3\x72\x6a\x31\x26\xe0\x14\x02\x12\xc2\x39\x4e\x36\x27\x6e\x40\x44\x00\x2d\x0b\x7b\xcc\xdf\xa2\x78\xa9\x3c\xce\x94\x6e\x4c\x54\x84\x28\x23\x47\x31\x7f\xa3\x49\xe6\x55\x3f\x53\x24\xcb\xc1\xcc\x18\xc9\x73\x0c\x69\x8d\xfb\xa5\x66\x2d\x53\x53\x9b\x17\x99\xc9\x48\xc7\x8e\xe2\xda\xaa\xce\x44\x14\x41\x0e\x0a\x33\x80\x13\x00\x04\x8a\xc0\x11\x40\xb8\x5c\x6b\x66\xff\x63\x82\x51\x6e\x06\x7b\x84\x01\x32\xc7\x5e\x4b\x4c\x58\x34\x06\x15\x9e\xc4\x32\xba\x29\xa0\x69\x09\x31\x24\x96\x55\x9b\xc3\xc5\x85\x00\xb1\xbd\x70\xd4\xb9\xe6\x45\x51\xb5\x3b\xb7\x5d\x8f\xc9\x88\x51\x30\x47\x66\x7c\x8f\xfa\x14\x1f\x94\x24\x6b\x3a\xbd\x75\xdb\xa7\xe3\x9b\x08\x62\x84\xdf\x17\x27\x91\x60\xdd\x0e\x14\xb3\x7a\xb5\x26\x6e\x46\x52\xc2\x11\x81\xfe\xe4\x67\xfd\xd1\x81\x03\xea\xc2\x11\x81\xdd\x2c\x35\x22\xb8\x69\x0d\x48\x8a\x08\x28\x22\xa0\x88\x80\x22\x02\x8a\x08\x9a\xe2\x4a\x11\x41\x37\x23\x02\x09\x62\x98\x43\x04\x61\x3f\x2e\xf0\xe9\x50\xcd\x68\xb0\x68\x54\x19\xf7\x8b\xec\x7f\x0f\x3f\xb8\x57\xde\x7f\xa8\xef\x16\xb4\xd2\x9a\xbf\x29\x67\xb5\xf8\x48\x41\x78\xc6\x7f\xcb\x34\x3c\x87\x91\x39\xff\x8e\x41\x5e\x46\xbe\xdb\x64\x46\xb2\x24\x18\x15\x45\x1e\x41\x21\x13\x8c\x22\xce\x19\xd8\xb1\xfe\x3a\xf6\xb0\x12\x23\xac\x93\x27\xeb\xb1\x13\x91\xb5\xf4\x88\x24\xca\xe1\x68\xa8\xfc\xf9\xaf\xda\xda\x23\x3b\x71\xa6\x6d\x1f\x68\x5f\xcd\x45\x60\x22\x6d\xe1\x50\x3d\x79\x64\x63\xa2\xc6\x07\xb5\xfd\x23\x6d\xe7\x91\x71\xf2\x58\x5b\x3a\x3e\x2d\xe5\xcb\x2f\x1f\x57\x96\xf2\xea\xd1\x37\xda\xda\xbe\x7a\xf2\x9d\xbe\xf2\x99\x76\x7f\xd7\x7e\x2a\x02\x3d\xf9\x92\x7d\x23\x6f\x23\xc2\x4c\xdc\xc4\xdd\x9e\x53\x19\xe3\x78\x64\xe5\x95\x47\x9c\xbc\xf2\x08\x94\xb8\xaa\x41\xa6\xfa\xab\x5a\xbc\xe7\xf0\xa3\x40\xab\x19\x11\x28\xd0\xa2\x40\x8b\x02\x2d\x0a\xb4\x28\xd0\x4a\x06\xb4\x46\x45\xb6\x01\x21\xd9\xe0\x29\xe8\x8e\x0b\x3b\x11\xac\xf8\xa1\x53\xc7\x26\x42\xcb\x81\x92\xf4\x44\x1c\x2e\xf3\x2f\x0f\x76\x21\x32\x33\x3b\x45\x4e\xba\x62\xa5\x2d\x6f\x96\x0b\xbb\x51\x99\x29\x6b\xe5\xb4\xb1\x99\x0f\x49\xb9\xd7\x61\x47\xae\xc3\x71\x4e\x38\x0f\x89\xa8\xaa\xa0\x14\x29\x51\xa4\x44\x91\x12\x45\x4a\xa1\xdc\x29\x52\xa2\x48\xc9\x2f\x76\xd3\x48\x49\x82\xe3\x28\x26\x23\x75\x1d\x8e\x23\x20\x28\xb9\x51\x84\xb3\xc0\xe9\x94\x81\xfe\xf6\xe7\xa6\x38\x81\xa0\x71\x84\xfd\x4f\x8f\x89\x38\x07\x89\xd3\xe0\x4f\x57\x32\x61\xf6\x0a\x51\x90\xe7\x72\x1c\x49\xa2\xa1\xcc\x7d\x8c\x5c\xfa\xf5\x9d\x17\x05\x27\xd1\xcc\x1d\x11\xb3\x31\x2a\xbe\x63\xb7\x02\x32\x82\x98\x99\xc8\x02\x9e\x9b\x44\x57\x9d\x47\x07\xa6\xa7\x4f\x4b\xf9\xea\x0f\x8e\x1d\xe8\xff\xa7\x49\x7c\x60\x7a\x7a\xba\xfd\x9d\x20\x13\xcc\x09\xe3\xcd\x2a\x29\x8b\x38\xce\x88\x37\x44\x4c\x00\xcf\xc9\xc4\x51\x0e\x98\xcf\x0c\xbc\x0e\xb3\x3d\xa3\xd9\xd7\x99\x6c\x4f\x43\x0f\x75\x44\x97\xc4\xa0\xdd\x53\x24\xd8\xad\x88\xbd\xf7\x13\x8e\x9d\x75\xc3\x76\x1b\xa2\x45\x20\xf7\xa7\x95\xc7\x3b\x51\xf9\x53\xab\x81\x8d\xdf\x93\x22\xf7\x21\x9b\x67\xb7\xe0\xf6\xaa\xf1\x45\x3b\x3e\x67\xfd\xf7\x25\x6c\x2a\x43\x38\x5b\xba\x59\x8a\xde\x9b\x10\x81\xa2\x77\x8a\xde\x29\x7a\xa7\xe8\x9d\xa2\xf7\x64\xe8\x9d\x8b\x83\x7d\xc3\x43\xc1\xa8\x47\x82\x64\xa2\xb9\x34\x68\x0a\x10\xfb\x7f\x83\x89\x44\x7b\xa7\x48\xd2\x3c\xa6\xbd\x63\x24\x02\xe6\x78\x77\x9e\x8c\xd8\x3f\xff\xc2\xc9\xa4\x6b\xc0\x4e\x98\x93\xd7\x45\xa5\x69\x4a\x0a\x74\x28\xd0\xa1\x40\x27\x94\x3b\x05\x3a\x14\xe8\xf8\xc5\x0e\x9c\xfd\x7d\xfb\x30\xdb\x32\xff\xc7\xc2\x90\xe9\x1e\x11\xb3\xd6\x06\xdb\xfe\xd0\x69\x5f\xb1\xb6\x36\xf6\x58\xdb\xee\x70\x2e\x71\x61\x99\x51\xd8\x2b\xef\xed\xd8\xfb\x1d\x8d\xad\xf9\xc6\xa4\x87\xcf\x40\x81\xed\x4f\x4b\x79\x6d\xfd\x7b\x6d\xf9\xb1\x5a\xda\x2a\x7f\xfb\x9f\xf2\xd2\x33\xed\xfe\xae\x7e\x6f\x41\x5b\xfc\x25\x02\x58\x78\x36\x63\x8e\x5c\x73\x04\xef\x76\x50\xe1\xc8\x49\x11\x05\x45\x14\x14\x51\x50\x44\x11\xca\x9d\x22\x0a\x8a\x28\xfc\x62\x9f\xab\x12\x31\xd7\x54\xd7\xb6\x22\x30\xef\xf9\x0b\x6d\x01\x4f\xed\x4d\x9e\x38\x28\xca\x57\x9a\x1f\x95\x3f\xa9\x16\xd8\x9b\x80\xa8\xa5\xca\xfc\xfa\x83\x6d\xa9\xcc\xf7\xa2\xaa\xf3\x5c\x97\x6f\xdb\x82\x56\xe5\x53\xc8\x05\x28\xe4\xa2\x90\x8b\x42\x2e\x0a\xb9\x5e\x45\xad\x19\x16\x03\x4a\x26\xfc\x2a\x86\xb4\x4a\x56\xad\x13\xb1\x70\xd5\x5a\xe1\x91\x12\xbb\xc4\x16\xd0\x22\xb5\xac\x9d\xa9\x14\x93\x91\x15\x13\x87\xe3\x34\x2a\x2f\x3d\xd3\xf6\xb6\xd4\xa3\x15\xe0\x3c\x31\xc2\xb1\x59\xa0\x16\x4f\xca\xdf\xdf\x35\x36\x76\xd5\xe3\xcf\xb5\xe5\x45\x6d\xed\x0b\xb5\x38\xa7\xff\x58\xb0\x61\x96\x5a\xda\x2a\xef\x7f\xa5\x7d\xb1\xab\x6f\x7f\x73\x5a\xca\xab\xbf\xbd\x34\x9b\xed\x1f\x99\x77\x8b\x73\x6a\xf1\x59\x9d\x94\xb1\x35\xaf\x3f\x3c\xd0\x57\xf7\xca\x2f\x9f\x94\x0b\x79\xbd\xb8\x60\xac\x2f\x76\x89\xb9\x73\x22\xab\xf0\x71\x05\x91\xc1\x8d\xce\x4a\x62\x38\x7d\x83\xfb\x38\x4e\x64\x39\xa0\x49\xb7\x16\x34\x32\xa2\x40\x90\x40\xde\x37\x99\x44\x6b\xe5\xb4\x1c\x21\x01\x4d\xcf\xc8\x1c\x68\x9a\x20\xc1\x3a\x43\x31\x5a\xf4\xd0\x76\x67\x24\x37\x21\x7c\x8c\xc4\x01\x2d\xba\x34\xce\x49\x30\xb6\x58\x54\x5b\x5e\x34\x56\x96\x9c\xb3\x08\x37\x0f\xed\x9f\xfa\xc3\x83\xca\xd2\xda\x69\x29\xaf\x2f\x3f\x2a\xcf\x2d\x18\x27\xf3\xb5\x06\xc6\xc6\x37\xfa\xf2\xba\xb1\x35\xef\x7e\xa9\xb4\x03\x59\x65\xa9\x03\xfb\xf4\x3b\xd3\x31\x39\x38\x7d\x4d\x54\x84\xb8\xce\xc9\xc1\x69\x20\x28\xb9\xf3\xa2\xd5\x38\x16\x15\x29\x46\xa5\x9a\x2d\x4f\x4b\x79\x6d\xf5\xb9\xb6\x9e\xd7\x37\x0f\xd5\xd2\x96\x5a\x7a\x5a\xfe\xed\x81\xb6\xf3\x43\x65\x69\xcd\x5e\x70\x29\xff\x32\xaf\x1f\xaf\x9f\x96\xf2\xe5\xb9\xbc\x5a\x5c\xd5\xef\x3d\x57\x8b\x73\x5a\xe9\xa9\xfd\xaf\xb1\x35\x6f\x6c\x3c\x2f\xef\xff\x6a\x7b\x80\x39\xd3\xb9\xa7\xc5\xc5\x85\xca\xbd\xdd\x1a\x23\xb7\x03\xa9\xc5\x55\xdb\xc9\x4e\x4b\x79\xd3\x3f\xd5\xe2\xb1\x71\xd2\x31\xf7\x49\x75\xcc\x43\xd7\x67\x92\xea\xa7\xd4\x26\x4a\x23\x19\x2b\xcb\xfa\xf6\x8f\xda\xda\xaf\x11\xd9\xa3\xc6\xd3\x2f\x03\x9f\xf2\x25\x84\xdc\x47\xd0\x8e\x7c\xe0\x48\xd5\xdd\xe9\xa0\xa9\x7e\x47\x4e\x9a\xf2\xa1\x29\x1f\x9a\xf2\xa1\x29\x9f\x50\xee\x34\xe5\x13\x29\xc5\xef\x33\xe5\x13\x84\x17\x3c\x07\xb1\xb7\x05\x2e\x34\x8b\x07\x38\x74\xa7\xf9\x75\x25\xfb\xe0\xf0\x16\xd6\x95\xdc\x0f\xb6\x65\x5d\xc9\x75\xd0\xf9\x88\xf9\xff\xee\x5f\x54\x9a\xea\x77\xe4\xa4\x28\x82\xa2\x08\x8a\x22\x28\x8a\x08\xe5\x4e\x51\x04\x45\x11\x7e\xb1\x7f\x17\x0b\x47\xe7\x6f\x25\xc1\xfa\x1b\x2d\x6f\x50\x13\x9a\xb0\x6e\xd3\xee\x37\xf7\xf7\x6e\xda\x02\xa3\xdb\x9c\x75\x73\x50\x76\xe2\xed\x6f\xe7\x00\x66\xcb\xe7\x05\x67\xcb\x14\x68\x53\xa0\x4d\x81\x36\x05\xda\xa1\xdc\x29\xd0\xa6\x40\xdb\x2f\x36\x05\xda\x5d\x0b\xb4\xe5\x04\x48\xbb\xa1\x4d\xfa\x85\x61\x88\x31\x6c\xdc\xf6\x40\x50\xce\x0f\x7a\x82\xd4\xcc\xfa\xef\xbb\x98\xde\xf2\xdd\x03\x55\x15\x7c\xd7\x6f\x7b\x3d\xd8\x27\x09\x23\xf2\x3c\x62\xcc\x3e\x78\xbb\x86\xa8\x73\x0a\x4f\x38\xfa\x76\xd0\x8d\x6f\x07\xb5\x2f\xb5\xba\x22\x56\xcd\x8f\x32\x4d\x1e\x84\xec\x7a\xab\x08\x39\x62\xcb\x77\xb4\x96\x2b\xcc\x39\x01\xc9\x87\xdb\x23\xdc\x37\x2c\xa4\x05\x46\x51\x85\x63\xc3\x48\x07\x59\xbc\xc1\xde\x51\x8c\x4d\xda\x81\x4c\x9d\x88\xd5\xba\x4a\x0e\x81\x40\xe2\xce\x30\x69\x95\xb4\xf5\x78\x20\x61\x73\x54\x75\xaa\xab\x4c\xda\x81\x4c\x19\xab\xa6\xa9\x53\x6c\x6d\xea\x75\xc6\x17\x7c\x02\x04\x47\xc1\x80\x49\xd2\x57\x29\xdc\x38\x27\xf9\xd3\x2b\xbe\x18\xe5\x95\xc4\x1e\x8a\xd5\x17\xf4\x66\xbf\xbe\x91\x62\xb0\x79\x17\xda\x40\x93\xae\x63\x3e\xdd\xd8\x97\xf1\xba\x84\xee\x58\x4a\xa1\x49\x37\x0f\x31\xeb\x3b\xdd\xe1\xe3\xcc\xee\x8e\xe1\xd0\xb8\x94\x44\x78\x73\x5e\x95\x20\x36\xdf\x3f\x4c\x62\x20\x2c\x12\x45\x18\xbc\x11\x4e\x84\x80\x89\xa4\x88\xa9\xc1\x5d\x6c\xd1\x14\xcc\x9f\x96\xf2\xbe\xa2\x4d\xb5\x78\xec\xbe\x52\xab\xc8\xf3\x96\xdd\x1d\xab\xc5\xb9\xda\x95\x86\x34\x94\xfb\x03\xea\xda\xf7\x9f\xea\x5f\x6f\x3b\x24\x4b\x5b\x76\x49\x98\xb6\xb3\xa5\x16\x9f\x01\x7d\x65\x4e\x3d\xf9\x4e\xff\x72\xdf\xfe\xdd\x7c\x38\x70\x9b\x32\xc1\xd0\xad\xb9\x3b\xc7\xa3\x61\x82\x72\xa9\x06\xec\x2b\xf4\x95\xf6\x4e\x2c\x81\xe1\xa1\xf6\xa9\xc6\x14\x5d\x62\x7f\x88\x2b\x44\xce\x6a\xf1\x64\x94\xa0\x9e\xaf\x74\x25\x13\xb8\xbe\xdb\x97\x22\x1d\x0f\xd3\xfa\xb6\x94\xd6\xb5\xaa\xef\x2e\x39\x03\x34\x45\x20\xf6\xe7\xc1\x9b\x23\xee\x10\x08\x24\x1e\x14\x4f\x53\xc4\xdf\xc0\x53\x6b\x5b\xda\x3a\x5c\x8d\x4c\x49\x43\xb9\x2d\x58\x07\x70\x54\xdd\x7f\x02\xe3\x6b\xe3\xb9\x32\x29\xc6\x9f\x93\x8c\x4e\x13\x3a\x1c\x12\x40\xc4\x4e\x4a\x39\xd8\xee\x56\xfa\x28\x0d\x80\xb0\x68\x83\x1c\x92\x65\x38\x9e\x20\xa8\xbe\x25\xc0\x51\x1e\xdd\x20\x90\x04\x76\x90\x8f\x63\x06\x09\x4a\xce\x6b\xa8\x21\x4e\x36\x29\x78\x4c\x63\x13\xf5\x5c\x1a\x72\xf2\x68\x55\x5b\xd5\x28\xd6\x13\x6c\x8d\xa4\x5c\x93\xf4\xfa\xbe\xb1\xb1\x0b\x0c\xab\xe4\x3e\xe3\xd7\xc1\xec\x33\x27\x53\x96\xc2\xc8\x8c\xc8\x86\x86\x8a\xd4\x61\xb0\xea\x85\x76\x7e\x10\x58\xbc\x3c\xed\x25\x48\x08\xc2\x56\xdb\x7f\xdc\xea\xeb\x79\xe3\xf6\x27\xfd\xd9\xd9\xd7\x42\xc2\x9a\x63\xdd\xd6\xdd\xc4\x27\x4e\xb8\xbb\x34\x9a\xa2\xb2\xf1\xb8\xbc\xbf\x1f\x68\x03\x99\x1a\xa1\xad\x46\xf0\xc7\x85\x33\x9a\x10\xbc\x23\x2c\x69\xe0\xf7\x6a\x27\x87\xa0\x6f\xdb\x9b\x2a\x0f\x7e\x6b\xc2\xf7\x80\x8d\xc6\x83\x1d\xd1\x9c\xa0\xac\x03\x65\xd3\x78\x61\x07\xf1\x50\x18\x54\x49\x0f\xf1\xec\x55\xf4\x4a\xe1\xc8\x78\xb2\xd7\x21\x38\x64\x22\xdf\xaf\x36\xcf\x00\x44\xca\x08\x77\xea\xe5\xc3\x39\xa0\xaf\x33\x10\xcf\xd8\x2b\x18\xeb\x8b\xda\xfe\x51\xf9\xa7\x42\xd3\xaf\xd9\x09\xe8\x7b\xca\x2c\x82\x03\x87\x33\x17\xfb\x78\x84\x8e\x74\x17\x1e\x88\x62\x6c\x4f\xc8\xc6\xfd\x43\x7d\xee\x6e\x48\x7a\xce\xae\x25\x18\x6c\xaa\xfb\xea\x4e\xc1\x42\x82\x7a\x08\x97\x8b\x11\x63\xf9\x89\x76\x72\xac\x6f\x1e\x56\x36\x7f\x4e\x14\x41\xdc\xbb\xfd\xfc\xa1\x63\x58\x20\xef\x56\x29\x9f\x49\xe8\xb8\x7c\x29\x52\xd9\xe1\xa1\x8e\x0c\x00\x6d\x7d\xd5\xf8\xe1\x20\x51\xef\x71\xac\x95\x9c\x02\xda\x83\x55\xed\x78\xc3\xdf\x7f\x01\xa7\x43\xa7\xe8\x48\x14\x88\x4c\xc1\xab\x9c\xf6\xea\x0e\x91\x74\xd2\x33\x87\x85\x85\x51\x1b\x46\x46\x08\xfe\xae\x7e\xf6\x2f\x7d\x72\xc3\xf9\x90\x8f\x73\x9c\xea\x59\x75\xd9\x0d\xcb\xdf\x9a\xed\xb5\x85\xe7\x95\x8d\x3d\xed\xbf\x9b\xc6\x4f\x27\xda\xd7\x9f\xd9\x07\xa8\x9f\x96\xf2\x76\x6a\x4e\x2d\x1e\x1b\xff\x3e\xd6\x96\x1f\x6b\x6b\xcf\xf4\xed\x95\x5a\x63\x7d\x7d\xdb\xf8\xf9\xdb\x90\xe4\x82\x88\xc9\x35\x91\x57\x72\xe1\x3d\x11\xa0\x57\x06\xb2\xac\xa5\x09\xe4\xaf\x07\xf7\x32\x08\x18\x5b\x89\xb5\x5c\xdb\xd7\x3f\xff\x97\x76\xbc\xa6\x2d\x6f\x66\x27\xd1\xcc\x80\xb6\xbc\x79\x5a\xca\x4f\x41\x5e\x41\x03\xda\xda\xa7\xfa\xc3\x83\x49\x34\x13\xac\x8f\x7d\x04\x7d\x17\x6a\x54\x7e\xb9\xa4\x9f\xec\xd8\x16\x33\xf5\x02\x7e\xc5\x6c\xc9\x6b\x0d\xca\x85\x5d\x63\x6b\xde\xab\x67\xcc\xd0\xf8\x2b\x22\x30\xcd\xc0\x20\x22\x81\x9d\x5b\x9e\x7a\xaf\x5a\x4f\x63\xb1\x01\x82\xe2\xc9\x76\xb8\x01\x5e\xc4\xcb\x42\x6a\x29\xae\x29\x18\x23\x81\x00\x93\x49\x28\x50\xb2\xbf\x89\xf6\x4a\x44\xb0\x0e\x1e\x09\x86\x05\xfe\x40\x07\xa2\xc2\x89\x2f\x3c\x46\x43\x01\xd3\xb9\x2a\x0b\xab\xc6\x8b\xbd\xac\x25\xc5\x40\xbf\xbe\x79\xa8\x6f\xaf\xd8\xd7\x4e\x4b\x4e\xe9\x68\xf9\xde\x0b\xb5\x78\x2c\x70\x41\x2b\x52\x01\x99\x87\xe5\xc5\x4a\xe1\x17\x6d\xe1\x9e\x7d\x78\x8d\x7f\xce\x6b\xf8\x6c\x6b\x9a\x85\x29\xaf\xa3\x27\xea\x18\x6b\x70\x84\x58\x5b\x0e\x35\x76\xa7\x67\x81\xfa\x4b\x98\x3b\x94\xc4\x8e\x78\xcf\xe4\xd1\x11\x0c\x96\x00\x0e\x9d\x3d\xca\x9a\x44\x33\x51\x30\xcb\xbf\x93\x3f\x45\x47\x35\x1e\xa9\xd0\xac\x5a\xf5\xf3\x12\x62\xad\xeb\xdf\x3b\xd8\xcd\x8b\xd1\x01\x15\xd8\xe9\xc4\xed\x9e\x49\x5b\xc1\x7c\x48\x2e\xc6\xf2\xb9\x81\xbf\x2b\x7d\x7d\x97\x11\x88\xea\xa4\x5a\x01\x50\xb5\xf8\x68\x28\xa8\x10\xa8\x5a\x73\xd4\xd0\x6d\x50\xe2\xde\x41\xf5\xf0\x53\xab\xde\xfa\x5b\xcf\xa0\x24\xf5\xb8\xce\x29\x73\x4a\xb3\x26\x10\x64\x11\xf6\x0e\x03\x6f\xdd\x52\x62\x16\x83\x0a\x99\x10\x31\xf7\xb1\x55\x0b\x1d\xc9\xc7\xd4\xf1\xc2\xec\x85\xff\x05\x00\x00\xff\xff\x3a\x46\xb5\x86\x8f\x9b\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 39823, mode: os.FileMode(420), modTime: time.Unix(1718196517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6b\x1b\x47\x10\x7f\xd7\xa7\x18\xae\x79\xb4\x22\xcb\x71\x0b\xf1\x53\x5d\xd2\x82\x68\x21\x25\x49\x4b\x21\xb8\x61\xb3\x37\x27\x6d\x72\xb7\x7b\xdd\x9d\x53\xac\x06\x41\xf2\x52\x9a\x80\x69\xc0\x7e\xe8\x9f\x50\x30\x84\xb6\x94\x12\xf7\xa9\x7f\x69\xfb\x65\x2a\xcb\xfe\x16\xe5\x56\x77\xba\x3f\x3a\xc9\xb2\xe4\x40\x1f\xf4\xa8\xdb\xd9\xf9\xfd\x66\x7e\x73\x3b\x73\xab\x87\x35\x00\xc7\x3c\x60\xed\x36\x6a\x67\x0b\x9c\x8d\xcb\xeb\xce\x5a\xfc\x4c\x48\x4f\x39\x5b\x10\xaf\x03\x38\x24\xc8\xc7\x78\xfd\x1d\xad\x24\xa1\x74\x61\xfb\xfd\x96\x35\x04\x70\x5c\x34\x5c\x8b\x90\x84\x92\xb1\xc9\xad\x0e\x82\x27\x7c\x04\x66\x0c\x12\x78\xe9\x0e\x16\x8a\x74\x47\x17\xb5\x49\xac\x9b\x09\x20\x80\xc3\x95\x24\xc6\x69\x8c\x0a\xe0\x48\x16\x58\x58\xf4\xfc\x5e\x62\x06\xe0\x44\xda\x8f\x1f\x76\x88\x42\xb3\xd5\x68\xc4\x8b\x75\x8e\xc4\x2f\x73\x15\x64\x56\x18\x30\x61\xed\xa4\x92\xf8\x26\xee\xb2\x20\xf4\xd1\x9a\x58\x8b\x7e\x0d\xa0\x6f\x43\x25\xd6\x36\xce\x16\xdc\xb6\x8f\x27\xa0\x5b\xd2\xc5\xdd\x9b\xa8\xbb\x82\x63\xe6\xbc\x14\xf3\xe9\x9f\x5f\x9e\xbc\x7c\x91\x38\x5e\xab\x76\x74\xdd\x5a\x9b\x33\x5d\x3d\x7a\x72\x7a\xf8\xfb\xf0\xe5\xe1\xf0\xd9\x67\x19\xd3\x1d\xcb\xd4\xf0\x0e\x06\x98\x91\xb5\x29\x48\xd3\x67\xd3\xe1\x8c\x6d\xb9\x92\x26\x2a\x18\xb3\x30\xf4\x05\x67\x31\x50\xe3\x9e\x51\x32\xdd\x98\x7f\xae\x38\x21\xd5\x0d\x69\x64\x41\xe6\x2b\xd4\xca\x8d\xf8\x05\xf9\x62\xd4\x31\x59\x65\x35\xba\xcd\x86\x1a\x65\x26\x2f\x7c\x1b\xf3\x75\x10\x87\x1e\x05\x01\xd3\xbd\x2c\x43\xe3\x04\x02\x38\x2a\x44\x6d\x31\x5b\xee\x64\xa6\xef\x8c\x7e\xbe\x27\x0c\xe5\xf7\x68\x34\xa1\x92\x06\x4d\x01\x07\xc0\xd9\x58\x5f\x2f\x3d\x9a\x14\x69\x1b\x4c\xc4\x39\x1a\xe3\x45\x3e\xa4\x9e\x2e\xe7\xdc\x8f\x38\xc7\x72\xb1\x09\x67\x00\xce\x25\x8d\x5e\xec\xe7\xb5\x86\x8b\x9e\x90\xc2\xf2\x6d\x74\x9b\x19\xd5\x1b\x89\x53\xa7\xb0\xb5\x9f\xfb\xd5\x5f\x2b\xb2\x6e\x9e\xc9\xfa\x06\x52\xa4\x25\xba\xf0\xa0\x83\x12\xa8\x83\x31\x75\x15\x69\x8e\xc0\x35\x32\x42\x37\x0d\x6b\x46\x28\xb3\x28\x6c\x2e\x43\xc1\x45\x1f\x97\xa5\xb0\x39\x87\x76\x55\x14\x3e\x89\xd0\x10\xb8\x8c\x18\x74\x99\x2f\x5c\x46\x08\x1e\x13\x3e\xba\x17\x20\xea\xdb\x5a\x2b\x6d\xae\xdf\xbd\x87\x9c\xe6\x95\x73\x73\x21\x39\x23\x83\x1a\x5c\x85\x06\xa4\x22\x60\x11\x75\x50\x52\xf2\x3a\x2e\x98\xcf\x2b\x4b\xd3\xe8\xb0\x2e\x42\x88\x3a\x10\x26\x3e\xf4\x81\x14\x30\xab\x70\x41\xfe\x05\xe9\x2d\x55\x71\x31\x3b\x4f\x45\x72\x96\xc8\xb3\xc0\xaf\x9e\x13\x3c\xad\xb3\x28\xb4\x05\xc6\x95\xf4\x7c\xc1\x69\x31\xf4\x8d\xf3\x2a\x33\x0e\xdb\x57\xfc\xfe\xcc\xc2\x9e\x85\xba\x68\xcc\xa4\x14\x04\x4c\xf6\x40\x48\x60\x10\x49\x41\x40\x22\x58\x4c\xf6\xd7\xe7\x78\xcb\xe3\xc3\x1f\x35\x60\xfc\xee\x2d\x04\xe2\xa2\xc7\x22\x9f\xce\x04\xfa\x40\xe2\x6e\x88\x9c\xce\x84\xba\xe0\xe3\xa2\x56\x41\xbb\x38\xca\x24\xcf\x4a\x73\xc7\x78\x69\x27\xb7\xcf\x20\x8f\xb4\xa0\x5e\x69\x6f\x29\xf2\xed\x30\xb4\x0d\xf6\xf6\x4e\x25\x91\xbc\xc3\xdd\xba\xd2\xae\x1d\x29\x9b\xb5\xbc\x5d\x42\xd6\xb6\xfd\x6c\x0a\x9c\xab\xed\x0f\x9f\x7c\x7e\xfc\xfc\xa7\xc1\x17\xbf\xe6\xbb\x78\x49\x8c\x93\x7f\x0e\x06\xdf\x7c\x7b\xfc\x7c\x6f\xf0\xf4\x70\xf0\xd7\xfe\xe0\xc9\x5e\xe5\xae\xd2\xbc\x90\x1f\xf1\xee\x7c\x98\xb0\xfa\xbf\x8f\x0a\x09\xcf\xd5\x9c\xb0\x9a\x13\x56\x73\xc2\x6a\x4e\x98\x8a\xbe\x9a\x13\x56\x73\x42\x99\x76\xe5\x9c\x50\xb8\xe8\x78\x85\x53\x42\x71\x1e\x18\xdf\xc2\xe4\x82\xcb\x6e\x07\x92\x28\x93\x20\x73\x83\x02\xf5\x42\x7b\xa9\xa2\x46\x2b\xe3\xcb\x94\x50\xc7\xbd\x9d\x44\xa9\x57\x3b\x5c\xb9\x58\xee\xde\xa9\x0f\x21\x09\xdb\xa8\x0b\x8a\x38\x9e\xd2\x01\xa3\x64\xf9\x8d\x4d\xa7\xa4\x79\xa9\x92\x47\x3d\x78\x24\x2d\x58\xac\x82\x7d\xc8\x88\x50\x5b\xdb\x8f\x6f\xaf\xd7\xaf\xee\x3c\x6c\xae\xf5\x2f\x39\x95\xd2\x04\x68\x0c\x6b\x4f\x25\x6b\x48\x0b\xd9\x3e\x0f\x9d\xd4\x61\xad\xac\xc5\x18\x35\xbb\xde\x3b\x3d\xf8\xea\xe4\xe8\xa8\x70\x8f\xe5\x94\x2a\x6d\x25\xc2\xc5\x88\x90\x43\xb3\x26\x13\xc3\x65\x0a\xc6\xb4\x66\xbd\x22\x96\x20\x0c\xca\xf6\xd3\xf5\x48\x56\x67\x9e\x23\x93\xc7\x48\xf9\x94\x9b\x11\x9d\x29\xb2\x2b\x55\xd3\xe9\xfe\xdf\xe7\xa8\x3d\x18\xbc\xf8\xfa\xdf\xdf\x7e\xac\x2e\xc4\x96\xa4\xeb\x29\x87\x85\xab\x50\xb8\x8b\xd7\xe0\x95\x8d\x99\xa2\xb7\xae\x55\x0b\x9c\x5c\x01\x2f\x5a\x4b\x83\x67\x7b\xc3\xef\x7f\x9e\x2b\x89\xc2\x85\x18\x0c\x06\xfb\x7b\x83\x3f\x0e\xca\xf9\xab\xb8\x5e\x5c\x22\x91\x28\xd9\x5d\x1f\x6f\x12\xa3\xa9\xc1\xbd\xea\xda\xcd\x0a\x62\xde\xca\x1d\x3c\x3b\x1a\x7e\xf7\x78\x78\xf0\xc3\xf0\xe9\x2f\xc7\x8f\x1e\x57\x24\xb5\x94\xb3\xf2\x77\xd6\x12\x09\x9b\xfc\xe0\x3d\x6f\x25\x64\x5f\xb3\xd3\x78\x8f\xfb\x69\xda\xac\xaf\x55\xf5\xd5\xb4\x47\x4f\x84\xc2\x42\xf1\x2e\xe6\xfe\x6a\x49\xff\xbc\xf8\xa8\xbe\x1d\x86\xf5\x96\x9b\xad\x08\x4b\xa8\x83\x2c\xfe\xcc\x2f\xe4\xec\x2d\x64\x1a\xf5\x2d\x75\x1f\x2b\xdf\xd3\x69\x10\xdb\x11\x75\x94\x16\x9f\xda\xaf\x90\x99\x38\x71\x8c\xb5\x7e\xed\xbf\x00\x00\x00\xff\xff\xb6\xe2\xf8\x09\xbc\x1a\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 6844, mode: os.FileMode(420), modTime: time.Unix(1718196517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
