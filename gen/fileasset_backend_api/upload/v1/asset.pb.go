// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: fileasset_backend_api/upload/v1/asset.proto

package uploadv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/obnahsgnaw/fileassetapi/gen/fileasset_backend_api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClearCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearCacheRequest) Reset() {
	*x = ClearCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheRequest) ProtoMessage() {}

func (x *ClearCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearCacheRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_backend_api_upload_v1_asset_proto_rawDescGZIP(), []int{0}
}

type ClearCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearCacheResponse) Reset() {
	*x = ClearCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheResponse) ProtoMessage() {}

func (x *ClearCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheResponse.ProtoReflect.Descriptor instead.
func (*ClearCacheResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_backend_api_upload_v1_asset_proto_rawDescGZIP(), []int{1}
}

type PaginateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *v1.PaginateMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	List []*PaginateData  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PaginateResponse) Reset() {
	*x = PaginateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateResponse) ProtoMessage() {}

func (x *PaginateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginateResponse.ProtoReflect.Descriptor instead.
func (*PaginateResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_backend_api_upload_v1_asset_proto_rawDescGZIP(), []int{2}
}

func (x *PaginateResponse) GetMeta() *v1.PaginateMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *PaginateResponse) GetList() []*PaginateData {
	if x != nil {
		return x.List
	}
	return nil
}

type PaginateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PaginateData) Reset() {
	*x = PaginateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateData) ProtoMessage() {}

func (x *PaginateData) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginateData.ProtoReflect.Descriptor instead.
func (*PaginateData) Descriptor() ([]byte, []int) {
	return file_fileasset_backend_api_upload_v1_asset_proto_rawDescGZIP(), []int{3}
}

func (x *PaginateData) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *PaginateData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_fileasset_backend_api_upload_v1_asset_proto protoreflect.FileDescriptor

var file_fileasset_backend_api_upload_v1_asset_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x66,
	0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x66, 0x69, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a,
	0x11, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x3a, 0x03, 0x80, 0x43, 0x01, 0x22, 0x38, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x32, 0xfd, 0x04, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xdc, 0x01, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x32, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x92, 0x41, 0x49,
	0x12, 0x0c, 0xe6, 0xb8, 0x85, 0xe9, 0x99, 0xa4, 0xe7, 0xbc, 0x93, 0xe5, 0xad, 0x98, 0x1a, 0x1b,
	0xe6, 0xb8, 0x85, 0xe9, 0x99, 0xa4, 0xe7, 0xbc, 0x93, 0xe5, 0xad, 0x98, 0xe7, 0x9a, 0x84, 0xe4,
	0xb8, 0x8a, 0xe4, 0xbc, 0xa0, 0xe6, 0x96, 0x87, 0xe4, 0xbb, 0xb6, 0x62, 0x1c, 0x0a, 0x09, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x73, 0x12, 0xc6, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x92, 0x41, 0x3a, 0x12, 0x06, 0xe5, 0x88, 0x97, 0xe8, 0xa1,
	0xa8, 0x1a, 0x12, 0xe4, 0xb8, 0x8a, 0xe4, 0xbc, 0xa0, 0xe6, 0x96, 0x87, 0xe4, 0xbb, 0xb6, 0xe5,
	0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0xb1, 0x01, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x5d, 0x92, 0x41, 0x3d, 0x12, 0x06, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x15, 0xe5,
	0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe4, 0xb8, 0x8a, 0xe4, 0xbc, 0xa0, 0xe7, 0x9a, 0x84, 0xe6, 0x96,
	0x87, 0xe4, 0xbb, 0xb6, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x1a,
	0x11, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe6, 0x96, 0x87, 0xe4, 0xbb, 0xb6, 0xe4, 0xb8, 0x8a, 0xe4,
	0xbc, 0xa0, 0x42, 0x98, 0x02, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e, 0x61, 0x68, 0x73, 0x67, 0x6e, 0x61, 0x77, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x55, 0x58, 0xaa,
	0x02, 0x1d, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x1d, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x29, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x46, 0x69,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x3a, 0x3a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fileasset_backend_api_upload_v1_asset_proto_rawDescOnce sync.Once
	file_fileasset_backend_api_upload_v1_asset_proto_rawDescData = file_fileasset_backend_api_upload_v1_asset_proto_rawDesc
)

func file_fileasset_backend_api_upload_v1_asset_proto_rawDescGZIP() []byte {
	file_fileasset_backend_api_upload_v1_asset_proto_rawDescOnce.Do(func() {
		file_fileasset_backend_api_upload_v1_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileasset_backend_api_upload_v1_asset_proto_rawDescData)
	})
	return file_fileasset_backend_api_upload_v1_asset_proto_rawDescData
}

var file_fileasset_backend_api_upload_v1_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fileasset_backend_api_upload_v1_asset_proto_goTypes = []interface{}{
	(*ClearCacheRequest)(nil),  // 0: fileasset_backend_api.upload.v1.ClearCacheRequest
	(*ClearCacheResponse)(nil), // 1: fileasset_backend_api.upload.v1.ClearCacheResponse
	(*PaginateResponse)(nil),   // 2: fileasset_backend_api.upload.v1.PaginateResponse
	(*PaginateData)(nil),       // 3: fileasset_backend_api.upload.v1.PaginateData
	(*v1.PaginateMeta)(nil),    // 4: fileasset_backend_api.common.v1.PaginateMeta
	(*v1.PaginateRequest)(nil), // 5: fileasset_backend_api.common.v1.PaginateRequest
	(*v1.StringIdRequest)(nil), // 6: fileasset_backend_api.common.v1.StringIdRequest
	(*emptypb.Empty)(nil),      // 7: google.protobuf.Empty
}
var file_fileasset_backend_api_upload_v1_asset_proto_depIdxs = []int32{
	4, // 0: fileasset_backend_api.upload.v1.PaginateResponse.meta:type_name -> fileasset_backend_api.common.v1.PaginateMeta
	3, // 1: fileasset_backend_api.upload.v1.PaginateResponse.list:type_name -> fileasset_backend_api.upload.v1.PaginateData
	0, // 2: fileasset_backend_api.upload.v1.AssetService.ClearCache:input_type -> fileasset_backend_api.upload.v1.ClearCacheRequest
	5, // 3: fileasset_backend_api.upload.v1.AssetService.Paginate:input_type -> fileasset_backend_api.common.v1.PaginateRequest
	6, // 4: fileasset_backend_api.upload.v1.AssetService.Delete:input_type -> fileasset_backend_api.common.v1.StringIdRequest
	1, // 5: fileasset_backend_api.upload.v1.AssetService.ClearCache:output_type -> fileasset_backend_api.upload.v1.ClearCacheResponse
	2, // 6: fileasset_backend_api.upload.v1.AssetService.Paginate:output_type -> fileasset_backend_api.upload.v1.PaginateResponse
	7, // 7: fileasset_backend_api.upload.v1.AssetService.Delete:output_type -> google.protobuf.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fileasset_backend_api_upload_v1_asset_proto_init() }
func file_fileasset_backend_api_upload_v1_asset_proto_init() {
	if File_fileasset_backend_api_upload_v1_asset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_backend_api_upload_v1_asset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileasset_backend_api_upload_v1_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileasset_backend_api_upload_v1_asset_proto_goTypes,
		DependencyIndexes: file_fileasset_backend_api_upload_v1_asset_proto_depIdxs,
		MessageInfos:      file_fileasset_backend_api_upload_v1_asset_proto_msgTypes,
	}.Build()
	File_fileasset_backend_api_upload_v1_asset_proto = out.File
	file_fileasset_backend_api_upload_v1_asset_proto_rawDesc = nil
	file_fileasset_backend_api_upload_v1_asset_proto_goTypes = nil
	file_fileasset_backend_api_upload_v1_asset_proto_depIdxs = nil
}
