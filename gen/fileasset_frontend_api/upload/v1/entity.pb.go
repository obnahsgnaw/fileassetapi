// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: fileasset_frontend_api/upload/v1/entity.proto

package uploadv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId string `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_entity_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigRequest) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MaxSize      uint32   `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	ContentTypes []string `protobuf:"bytes,3,rep,name=content_types,json=contentTypes,proto3" json:"content_types,omitempty"`
	Extensions   []string `protobuf:"bytes,4,rep,name=extensions,proto3" json:"extensions,omitempty"`
	Ttl          uint32   `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Multipart    bool     `protobuf:"varint,6,opt,name=multipart,proto3" json:"multipart,omitempty"`
	MaxCount     uint32   `protobuf:"varint,7,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_entity_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConfigResponse) GetMaxSize() uint32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *ConfigResponse) GetContentTypes() []string {
	if x != nil {
		return x.ContentTypes
	}
	return nil
}

func (x *ConfigResponse) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *ConfigResponse) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *ConfigResponse) GetMultipart() bool {
	if x != nil {
		return x.Multipart
	}
	return false
}

func (x *ConfigResponse) GetMaxCount() uint32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

type UrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Extension   string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	PartNum     uint32 `protobuf:"varint,4,opt,name=part_num,json=partNum,proto3" json:"part_num,omitempty"`
}

func (x *UrlRequest) Reset() {
	*x = UrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlRequest) ProtoMessage() {}

func (x *UrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlRequest.ProtoReflect.Descriptor instead.
func (*UrlRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_entity_proto_rawDescGZIP(), []int{2}
}

func (x *UrlRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UrlRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UrlRequest) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *UrlRequest) GetPartNum() uint32 {
	if x != nil {
		return x.PartNum
	}
	return 0
}

type UrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string   `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Urls     []string `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *UrlResponse) Reset() {
	*x = UrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlResponse) ProtoMessage() {}

func (x *UrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlResponse.ProtoReflect.Descriptor instead.
func (*UrlResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_entity_proto_rawDescGZIP(), []int{3}
}

func (x *UrlResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UrlResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UrlResponse) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

var File_fileasset_frontend_api_upload_v1_entity_proto protoreflect.FileDescriptor

var file_fileasset_frontend_api_upload_v1_entity_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x06,
	0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x62, 0x92, 0x41,
	0x54, 0x32, 0x49, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x64, 0x2c, 0x20, 0xe6,
	0xaf, 0x8f, 0xe6, 0xac, 0xa1, 0xe4, 0xb8, 0x8a, 0xe4, 0xbc, 0xa0, 0xe4, 0xbc, 0x9a, 0xe8, 0xaf,
	0x9d, 0xe9, 0x9a, 0x8f, 0xe6, 0x9c, 0xba, 0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90, 0xe5, 0x8d, 0xb3,
	0xe5, 0x8f, 0xaf, 0xef, 0xbc, 0x8c, 0xe5, 0xaf, 0xb9, 0xe5, 0xba, 0x94, 0xe4, 0xb8, 0x80, 0xe4,
	0xb8, 0xaa, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x06, 0x72,
	0x65, 0x71, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x0a, 0xd0, 0x01, 0x00,
	0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x22, 0xc6, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0x92, 0x41, 0x0c, 0x32, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x92, 0x41,
	0x06, 0x32, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x37, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f, 0x92,
	0x41, 0x0c, 0x32, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x32, 0x03, 0x74, 0x74,
	0x6c, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08,
	0x70, 0x61, 0x72, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xba, 0x02, 0x0a, 0x0a, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x19, 0x32, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x1e, 0xd0, 0x01, 0x00, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0x92,
	0x41, 0x22, 0x32, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0xd2, 0x01, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x18, 0x32, 0xd0, 0x01, 0x00,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x29, 0x92, 0x41, 0x1c, 0x32, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0xd2, 0x01, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x18, 0x32, 0xd0, 0x01, 0x00, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x2a, 0x92, 0x41, 0x1e, 0x32, 0x1c, 0x70,
	0x61, 0x72, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0xfa, 0x42, 0x06, 0x2a, 0x04,
	0x28, 0x00, 0x40, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0xb5, 0x01,
	0x0a, 0x0b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x69, 0x64,
	0x2c, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x20, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0x92,
	0x41, 0x28, 0x32, 0x26, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20,
	0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x20, 0x77, 0x68, 0x65,
	0x6e, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f,
	0x92, 0x41, 0x0c, 0x32, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x75, 0x72, 0x6c, 0x52,
	0x04, 0x75, 0x72, 0x6c, 0x73, 0x42, 0x9f, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0b,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x50, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e, 0x61, 0x68, 0x73,
	0x67, 0x6e, 0x61, 0x77, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x46, 0x55, 0x58, 0xaa, 0x02, 0x1e, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2a, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fileasset_frontend_api_upload_v1_entity_proto_rawDescOnce sync.Once
	file_fileasset_frontend_api_upload_v1_entity_proto_rawDescData = file_fileasset_frontend_api_upload_v1_entity_proto_rawDesc
)

func file_fileasset_frontend_api_upload_v1_entity_proto_rawDescGZIP() []byte {
	file_fileasset_frontend_api_upload_v1_entity_proto_rawDescOnce.Do(func() {
		file_fileasset_frontend_api_upload_v1_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileasset_frontend_api_upload_v1_entity_proto_rawDescData)
	})
	return file_fileasset_frontend_api_upload_v1_entity_proto_rawDescData
}

var file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fileasset_frontend_api_upload_v1_entity_proto_goTypes = []interface{}{
	(*ConfigRequest)(nil),  // 0: fileasset_frontend_api.upload.v1.ConfigRequest
	(*ConfigResponse)(nil), // 1: fileasset_frontend_api.upload.v1.ConfigResponse
	(*UrlRequest)(nil),     // 2: fileasset_frontend_api.upload.v1.UrlRequest
	(*UrlResponse)(nil),    // 3: fileasset_frontend_api.upload.v1.UrlResponse
}
var file_fileasset_frontend_api_upload_v1_entity_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fileasset_frontend_api_upload_v1_entity_proto_init() }
func file_fileasset_frontend_api_upload_v1_entity_proto_init() {
	if File_fileasset_frontend_api_upload_v1_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileasset_frontend_api_upload_v1_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fileasset_frontend_api_upload_v1_entity_proto_goTypes,
		DependencyIndexes: file_fileasset_frontend_api_upload_v1_entity_proto_depIdxs,
		MessageInfos:      file_fileasset_frontend_api_upload_v1_entity_proto_msgTypes,
	}.Build()
	File_fileasset_frontend_api_upload_v1_entity_proto = out.File
	file_fileasset_frontend_api_upload_v1_entity_proto_rawDesc = nil
	file_fileasset_frontend_api_upload_v1_entity_proto_goTypes = nil
	file_fileasset_frontend_api_upload_v1_entity_proto_depIdxs = nil
}
