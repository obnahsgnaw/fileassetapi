// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: fileasset_frontend_api/upload/v1/upload.proto

package uploadv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostRequest) Reset() {
	*x = HostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRequest) ProtoMessage() {}

func (x *HostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRequest.ProtoReflect.Descriptor instead.
func (*HostRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{0}
}

type HostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostResponse) Reset() {
	*x = HostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResponse) ProtoMessage() {}

func (x *HostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResponse.ProtoReflect.Descriptor instead.
func (*HostResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{1}
}

func (x *HostResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module     string   `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`         // 模块标识
	Max        uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`              // 最大数量
	Size       uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`            // 文件最大字节
	Types      []string `protobuf:"bytes,4,rep,name=types,proto3" json:"types,omitempty"`           // 支持的类型
	Extensions []string `protobuf:"bytes,5,rep,name=extensions,proto3" json:"extensions,omitempty"` // 支持的后缀
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *RegisterRequest) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *RegisterRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RegisterRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *RegisterRequest) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{3}
}

type FetchUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"` // 模块标识
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` // 此次上传的标识，相关图片存储在该标识下
	Ttl    uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`      // url过期时间
}

func (x *FetchUrlRequest) Reset() {
	*x = FetchUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUrlRequest) ProtoMessage() {}

func (x *FetchUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUrlRequest.ProtoReflect.Descriptor instead.
func (*FetchUrlRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{4}
}

func (x *FetchUrlRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *FetchUrlRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *FetchUrlRequest) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type FetchUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FetchUrlResponse) Reset() {
	*x = FetchUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUrlResponse) ProtoMessage() {}

func (x *FetchUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUrlResponse.ProtoReflect.Descriptor instead.
func (*FetchUrlResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{5}
}

func (x *FetchUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId []string `protobuf:"bytes,1,rep,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *ConfirmRequest) Reset() {
	*x = ConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmRequest) ProtoMessage() {}

func (x *ConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmRequest.ProtoReflect.Descriptor instead.
func (*ConfirmRequest) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{6}
}

func (x *ConfirmRequest) GetFileId() []string {
	if x != nil {
		return x.FileId
	}
	return nil
}

type ConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdFiles map[string]string `protobuf:"bytes,1,rep,name=id_files,json=idFiles,proto3" json:"id_files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfirmResponse) Reset() {
	*x = ConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResponse) ProtoMessage() {}

func (x *ConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResponse) Descriptor() ([]byte, []int) {
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP(), []int{7}
}

func (x *ConfirmResponse) GetIdFiles() map[string]string {
	if x != nil {
		return x.IdFiles
	}
	return nil
}

var File_fileasset_frontend_api_upload_v1_upload_proto protoreflect.FileDescriptor

var file_fileasset_frontend_api_upload_v1_upload_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x22, 0x0d, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a, 0x10,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x53, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x24, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x29, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x69, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x32, 0xd4, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x08, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x30, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x9f, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x42, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e,
	0x61, 0x68, 0x73, 0x67, 0x6e, 0x61, 0x77, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x55, 0x58, 0xaa, 0x02, 0x1e, 0x46, 0x69, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x46, 0x69, 0x6c, 0x65,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69,
	0x5c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2a, 0x46, 0x69, 0x6c,
	0x65, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x5c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x3a, 0x3a,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_fileasset_frontend_api_upload_v1_upload_proto_rawDescOnce sync.Once
	file_fileasset_frontend_api_upload_v1_upload_proto_rawDescData = file_fileasset_frontend_api_upload_v1_upload_proto_rawDesc
)

func file_fileasset_frontend_api_upload_v1_upload_proto_rawDescGZIP() []byte {
	file_fileasset_frontend_api_upload_v1_upload_proto_rawDescOnce.Do(func() {
		file_fileasset_frontend_api_upload_v1_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileasset_frontend_api_upload_v1_upload_proto_rawDescData)
	})
	return file_fileasset_frontend_api_upload_v1_upload_proto_rawDescData
}

var file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_fileasset_frontend_api_upload_v1_upload_proto_goTypes = []interface{}{
	(*HostRequest)(nil),      // 0: fileasset_frontend_api.upload.v1.HostRequest
	(*HostResponse)(nil),     // 1: fileasset_frontend_api.upload.v1.HostResponse
	(*RegisterRequest)(nil),  // 2: fileasset_frontend_api.upload.v1.RegisterRequest
	(*RegisterResponse)(nil), // 3: fileasset_frontend_api.upload.v1.RegisterResponse
	(*FetchUrlRequest)(nil),  // 4: fileasset_frontend_api.upload.v1.FetchUrlRequest
	(*FetchUrlResponse)(nil), // 5: fileasset_frontend_api.upload.v1.FetchUrlResponse
	(*ConfirmRequest)(nil),   // 6: fileasset_frontend_api.upload.v1.ConfirmRequest
	(*ConfirmResponse)(nil),  // 7: fileasset_frontend_api.upload.v1.ConfirmResponse
	nil,                      // 8: fileasset_frontend_api.upload.v1.ConfirmResponse.IdFilesEntry
}
var file_fileasset_frontend_api_upload_v1_upload_proto_depIdxs = []int32{
	8, // 0: fileasset_frontend_api.upload.v1.ConfirmResponse.id_files:type_name -> fileasset_frontend_api.upload.v1.ConfirmResponse.IdFilesEntry
	0, // 1: fileasset_frontend_api.upload.v1.UploadService.Host:input_type -> fileasset_frontend_api.upload.v1.HostRequest
	2, // 2: fileasset_frontend_api.upload.v1.UploadService.Register:input_type -> fileasset_frontend_api.upload.v1.RegisterRequest
	4, // 3: fileasset_frontend_api.upload.v1.UploadService.FetchUrl:input_type -> fileasset_frontend_api.upload.v1.FetchUrlRequest
	6, // 4: fileasset_frontend_api.upload.v1.UploadService.Confirm:input_type -> fileasset_frontend_api.upload.v1.ConfirmRequest
	1, // 5: fileasset_frontend_api.upload.v1.UploadService.Host:output_type -> fileasset_frontend_api.upload.v1.HostResponse
	3, // 6: fileasset_frontend_api.upload.v1.UploadService.Register:output_type -> fileasset_frontend_api.upload.v1.RegisterResponse
	5, // 7: fileasset_frontend_api.upload.v1.UploadService.FetchUrl:output_type -> fileasset_frontend_api.upload.v1.FetchUrlResponse
	7, // 8: fileasset_frontend_api.upload.v1.UploadService.Confirm:output_type -> fileasset_frontend_api.upload.v1.ConfirmResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fileasset_frontend_api_upload_v1_upload_proto_init() }
func file_fileasset_frontend_api_upload_v1_upload_proto_init() {
	if File_fileasset_frontend_api_upload_v1_upload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileasset_frontend_api_upload_v1_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileasset_frontend_api_upload_v1_upload_proto_goTypes,
		DependencyIndexes: file_fileasset_frontend_api_upload_v1_upload_proto_depIdxs,
		MessageInfos:      file_fileasset_frontend_api_upload_v1_upload_proto_msgTypes,
	}.Build()
	File_fileasset_frontend_api_upload_v1_upload_proto = out.File
	file_fileasset_frontend_api_upload_v1_upload_proto_rawDesc = nil
	file_fileasset_frontend_api_upload_v1_upload_proto_goTypes = nil
	file_fileasset_frontend_api_upload_v1_upload_proto_depIdxs = nil
}
